"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[602],{55377:(n,a,s)=>{s.r(a),s.d(a,{data:()=>p});const p={key:"v-389f70c7",path:"/datastructure/%E6%8E%92%E5%BA%8F/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F.html",title:"选择排序",lang:"en-US",frontmatter:{date:"2021/10/19 22:08"},excerpt:"",headers:[{level:2,title:"代码实现",slug:"代码实现",children:[]},{level:2,title:"比较",slug:"比较",children:[]}],git:{updatedTime:1654857597e3,contributors:[{name:"qsyyke",email:"2291308094@qq.com",commits:1}]}}},28932:(n,a,s)=>{s.r(a),s.d(a,{default:()=>u});var p=s(66252);const t=(0,p._)("h1",{id:"选择排序",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#选择排序","aria-hidden":"true"},"#"),(0,p.Uk)(" 选择排序")],-1),e=(0,p._)("p",null,[(0,p._)("code",null,"选择式排序也属于内部排序法，是从欲排序的数据中，按指定的规则选出某一元素，再依规定交换位置后达到排序的目的。")],-1),o=(0,p._)("div",{class:"custom-container tip"},[(0,p._)("p",{class:"custom-container-title"},"TIP"),(0,p._)("p",null,"选择排序（select sorting）也是一种简单的排序方法。"),(0,p._)("blockquote",null,[(0,p._)("p",null,"它的基本思想是：第一次从arr[0]~arr[n-1]中选取最小值，与arr[0]交换，第二次从arr[1]~arr[n-1]中选取最小值，与arr[1]交换，第三次从arr[2]~arr[n-1]中选取最小值，与arr[2]交换，…，第i次从arr[i-1]~arr[n-1]中选取最小值，与arr[i-1]交换，…, 第n-1次从arr[n-2]~arr[n-1]中选取最小值，与arr[n-2]交换，总共通过n-1次，得到一个按排序码从小到大排列的有序序列。")])],-1),c=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20211019221439497.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),r=(0,p.uE)('<div class="custom-container tip"><p class="custom-container-title">TIP</p><p>如果一个数组的长度为8，那么需要执行7次，才能选择完成</p></div><h2 id="代码实现" tabindex="-1"><a class="header-anchor" href="#代码实现" aria-hidden="true">#</a> 代码实现</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">selectSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">//范围内最小的一个数</span>\n        <span class="token keyword">int</span> small <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">int</span> index <span class="token operator">=</span> i<span class="token punctuation">;</span>\n        <span class="token comment">//获取最小的一个数</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>small <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                small <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>\n                index <span class="token operator">=</span> j<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">int</span> origin <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> small<span class="token punctuation">;</span>\n        arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> origin<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="比较" tabindex="-1"><a class="header-anchor" href="#比较" aria-hidden="true">#</a> 比较</h2><p>通过构建一个长度为10万的数组，比较冒泡排序和选择排序所需要的时间，测试结果如下(单位为ms)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>选择排序时间<span class="token operator">:</span> <span class="token number">3457</span>\n冒泡排序时间<span class="token operator">:</span> <span class="token number">21394</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>测试发现，选择排序的时间，平均为3秒左右，但是冒泡排序所需要的时间为22秒左右</p>',7),l={},u=(0,s(83744).Z)(l,[["render",function(n,a){return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,e,o,c,r],64)}]])}}]);
"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4869],{66663:(n,e,s)=>{s.r(e),s.d(e,{data:()=>a});const a={key:"v-caf233c6",path:"/nginx/nginx%E5%A4%84%E7%90%86%E8%AF%B7%E6%B1%82%E8%BF%87%E7%A8%8B.html",title:"NGINX处理请求过程",lang:"en-US",frontmatter:{date:"2022/1/24 12:31"},excerpt:"",headers:[{level:2,title:"基于server_name和基于ip的混合虚拟服务器",slug:"基于server-name和基于ip的混合虚拟服务器",children:[]}],git:{updatedTime:1654857597e3,contributors:[{name:"qsyyke",email:"2291308094@qq.com",commits:1}]}}},7266:(n,e,s)=>{s.r(e),s.d(e,{default:()=>l});const a=(0,s(66252).uE)('<h1 id="nginx处理请求过程" tabindex="-1"><a class="header-anchor" href="#nginx处理请求过程" aria-hidden="true">#</a> NGINX处理请求过程</h1><p>在开始之前，需要了解<code>server</code>块中的<code>server_name</code>是定义服务器名称的，这里可以是ip或者域名，还可以是空字符串，如果你想要某个域名被这个服务器所处理，那么就需要将<code>server_name</code>设置为你的域名</p><div class="language-conf ext-conf line-numbers-mode"><pre class="language-conf"><code>server {\n    listen      80;\n    server_name example.org www.example.org;\n    ...\n}\n\nserver {\n    listen      80;\n    server_name example.net www.example.net;\n    ...\n}\n\nserver {\n    listen      80;\n    server_name example.com www.example.com;\n    ...\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>nginx会根据请求头中的<code>host</code>来决定此请求应该路由到哪个服务器(<code>根据server块中的server_name判断</code>，ip地址也是host)，如果这个host没有和之匹配的<code>server_name</code>或者这个请求头中没有包含host，那么nginx将会将此请求路由到默认的服务器来进行处理</p><ul><li><p>默认服务器</p><ol><li><p>如果某个server的<code>server_name</code>是字符串，那么这个server就是一个默认服务器</p></li><li><p>还有也可以通过<code>listen</code>指定</p><blockquote><div class="language-conf ext-conf line-numbers-mode"><pre class="language-conf"><code>server {\n    listen      80 default_server;\n    server_name example.net www.example.net;\n    ...\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></blockquote></li></ol></li></ul><h2 id="基于server-name和基于ip的混合虚拟服务器" tabindex="-1"><a class="header-anchor" href="#基于server-name和基于ip的混合虚拟服务器" aria-hidden="true">#</a> 基于server_name和基于ip的混合虚拟服务器</h2><ul><li><p>基于ip？</p><blockquote><p>这是我的理解，基于ip就是listen是ip和端口</p></blockquote></li></ul><p>所以标题也就是说，如果某个server块中listen是ip，这种和server_name混合的情况</p><div class="language-conf ext-conf line-numbers-mode"><pre class="language-conf"><code>server {\n    listen      192.168.1.1:80;\n    server_name example.org www.example.org;\n    ...\n}\n\nserver {\n    listen      192.168.1.1:80;\n    server_name example.net www.example.net;\n    ...\n}\n\nserver {\n    listen      192.168.1.2:80;\n    server_name example.com www.example.com;\n    ...\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>对于这种server_name和listen是ip的情况，其处理时</p><ol><li><p>先测试此listen部分的ip和端口，看看是否能够正常使用</p></li><li><p>如果ip和端口正常，那么nginx便会根据ip和端口去找和host匹配的<code>server_name</code></p><blockquote><p>根据ip和端口？</p><p>我的理解是：不同的host他们指向不同的端口</p></blockquote></li><li><p>如果没有和host匹配的<code>server_name</code>，那么此请求将会被默认的server所处理</p></li></ol><p>比如这里有一个请求<code>www.example.com</code>，此请求会被<code>192.168.1.1:80</code>所接收，所以会被第三个服务器所处理</p><p>我这里有一个测试配置</p><div class="language-conf ext-conf line-numbers-mode"><pre class="language-conf"><code>server {\n        listen 192.168.1.1:8085;\n        location /bb {\n                root /data/www;\n        }\n    }\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><blockquote><p>没有开放8085端口，所以当我保存配置之后，执行<code>nginx -t</code>，那么会得到下面错误，在error.log和access.log中，还有运行<code>nginx -t</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>error.log和access.log中得到的内容一样\n2022/01/24 14:20:32 [emerg] 48860#0: bind() to 192.168.1.1:8085 failed (99: Cannot assign requested address)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-bin ext-bin line-numbers-mode"><pre class="language-bin"><code>#运行nginx -t得到的结果\n[root@qsyyke-host conf]# ../sbin/nginx -t\nnginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok\nnginx: [emerg] bind() to 192.168.1.1:8085 failed (99: Cannot assign requested address)\nnginx: configuration file /usr/local/nginx/conf/nginx.conf test failed\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>端口绑定不成功</p></blockquote>',15),r={},l=(0,s(83744).Z)(r,[["render",function(n,e){return a}]])}}]);
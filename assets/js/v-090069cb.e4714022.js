"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9286],{14394:(e,n,a)=>{a.r(n),a.d(n,{data:()=>s});const s={key:"v-090069cb",path:"/git/gitignore.html",title:".gitignore忽略文件规则",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"符号",slug:"符号",children:[]},{level:2,title:"文件操作",slug:"文件操作",children:[]}],git:{updatedTime:1654857597e3,contributors:[{name:"qsyyke",email:"2291308094@qq.com",commits:1}]}}},39516:(e,n,a)=>{a.r(n),a.d(n,{default:()=>r});const s=(0,a(66252).uE)('<h1 id="gitignore忽略文件规则" tabindex="-1"><a class="header-anchor" href="#gitignore忽略文件规则" aria-hidden="true">#</a> .gitignore忽略文件规则</h1><h2 id="符号" tabindex="-1"><a class="header-anchor" href="#符号" aria-hidden="true">#</a> 符号</h2><ul><li><p><code>#</code>是注释</p></li><li><p><code>*</code>配多个字符，即匹配多个任意字符；使用两个星号&quot;*<strong>*</strong>&quot; 表示匹配任意中间目录，比如<code>a/**/z</code>可以匹配 a/z, a/b/z 或 a/b/c/z等</p></li><li><p><code>?</code>通配单个字符，即匹配一个任意字符；</p></li><li><p>&quot;<strong>[]</strong>&quot;包含单个字符的匹配列表，即匹配任何一个列在方括号中的字符。比如[abc]表示要么匹配一个a，要么匹配一个b，要么匹配一个c；如果在方括号中使用短划线分隔两个字符，表示所有在这两个字符范围内的都可以匹配。比如[0-9]表示匹配所有0到9的数字，[a-z]表示匹配任意的小写字母）。</p></li><li><p>以叹号&quot;<strong>!</strong>&quot;表示不忽略(跟踪)匹配到的文件或目录，即要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（!）取反。需要特别注意的是：<strong>如果文件的父目录已经被前面的规则排除掉了，那么对这个文件用&quot;!&quot;规则是不起作用的</strong>。也就是说&quot;!&quot;开头的模式表示否定，该文件将会再次被包含，如果排除了该文件的父级目录，则使用&quot;!&quot;也不会再次被包含。可以使用反斜杠进行转义。</p></li></ul><h2 id="文件操作" tabindex="-1"><a class="header-anchor" href="#文件操作" aria-hidden="true">#</a> 文件操作</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>*.java #会忽略所有当前文件夹及所有当前文件夹下的所有以.java结尾的文件\n\n!4.java #不会所有文件中，文件为4.java的文件\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>!4.java</code>不仅会匹配当前目录中，还会匹配其他目录，只要是文件名是这个的，都不会被忽略</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>/44 #仅仅会忽略当前目录下的44文件夹中的文件，不会忽略55/44下的文件\n\n44/ #会忽略所有文件夹名为44下的所有文件\n\n5/*.java #会忽略5/1.java文件，不会忽略5/5/3.java文件\n\n/p.* #会忽略当前目录下的p开头文件，不会忽略3/4/p.java文件，/表示当前目录\n\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>记住，一个<code>/</code>都表示一级目录，<code>**</code>才表示匹配多级</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>**/fa #会忽略所有/fa中的文件，不管前面有多少级\n\n/4/ #会忽略当前目录下的4中的内容，也可以写成/4\n\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',9),l={},r=(0,a(83744).Z)(l,[["render",function(e,n){return s}]])}}]);
"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[7096],{43585:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-0e5c2730",path:"/javaweb/%E9%82%AE%E4%BB%B6%E5%8F%91%E9%80%81%E5%AE%9E%E7%8E%B0.html",title:"java实现邮件发送",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"简单邮件和复杂邮件",slug:"简单邮件和复杂邮件",children:[]},{level:2,title:"步骤",slug:"步骤",children:[{level:3,title:"配置对象",slug:"配置对象",children:[]},{level:3,title:"获取session对象",slug:"获取session对象",children:[]},{level:3,title:"transport",slug:"transport",children:[]},{level:3,title:"编写邮件内容",slug:"编写邮件内容",children:[]}]},{level:2,title:"发送给多个用户",slug:"发送给多个用户",children:[]},{level:2,title:"完整代码",slug:"完整代码",children:[]},{level:2,title:"测试代码",slug:"测试代码",children:[]}],git:{updatedTime:1654857597e3,contributors:[{name:"qsyyke",email:"2291308094@qq.com",commits:1}]}}},56858:(n,s,a)=>{a.r(s),a.d(s,{default:()=>v});var p=a(66252);const t=(0,p.uE)('<h1 id="java实现邮件发送" tabindex="-1"><a class="header-anchor" href="#java实现邮件发送" aria-hidden="true">#</a> java实现邮件发送</h1><h2 id="简单邮件和复杂邮件" tabindex="-1"><a class="header-anchor" href="#简单邮件和复杂邮件" aria-hidden="true">#</a> 简单邮件和复杂邮件</h2><p>简单的邮件就是内容是存文本，没有图片等等其他附件文件</p><p>而复杂文件，除了含有存文本外，还有附件，图片等等</p><h2 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤" aria-hidden="true">#</a> 步骤</h2><h3 id="配置对象" tabindex="-1"><a class="header-anchor" href="#配置对象" aria-hidden="true">#</a> 配置对象</h3><p><code>创建一个Properties类，这个类是必须的，发送邮件的服务器，还有协议等等信息都是通过这个配置对象进行获取的</code></p><p>调用<code>props.setProperty(&quot;mail.host&quot;,&quot;smtp.qq.com&quot;)</code>方法就可以将邮箱的服务器，邮箱协议等等信息保存在对象中</p><blockquote><p><code>props.setProperty(&quot;mail.smtp.auth&quot;,&quot;true&quot;)</code>这个方法参数为true，代表需要验证用户名密码(<code>授权码</code>)，但是注释之后，同样也是可以的，可能的原因就是在后面</p><p><code>transport.connect(&quot;smtp.qq.com&quot;,&quot;2291308094@qq.com&quot;,&quot;zitcvhazptfjeccf&quot;)</code>也是需要进行传用户名和密码</p></blockquote><blockquote><p>必须需要配置的</p><ul><li><p>邮箱服务器：<code>setProperty(&quot;mail.host&quot;,&quot;smtp.qq.com&quot;)</code></p></li><li><p>邮件发送的协议：<code>setProperty(&quot;mail.transport.protocol&quot;,&quot;smtp&quot;);</code></p><p>在有些的博客中，这里设置协议是<code>setProperty(&quot;mail.transport)</code>，如果是这样的话，那么<code>session.getTransport()</code>就拿不到这个协议的信息，因为默认是通过键<code>mail.transport.protocol</code>从properties对象进行拿到的</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Transport</span> <span class="token function">getTransport</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NoSuchProviderException</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getTransport</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;mail.transport.protocol&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul></blockquote><p>如果是QQ邮箱的话，那么还需要进行ssl的验证，但是注释之后还是可以，只是在他们之间的连接并不是ssl，通过打印信息就可以知道</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">MailSSLSocketFactory</span> sf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MailSSLSocketFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nsf<span class="token punctuation">.</span><span class="token function">setTrustAllHosts</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nprops<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;mail.smtp.ssl.enable&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nprops<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;mail.smtp.socketFactory&quot;</span><span class="token punctuation">,</span>sf<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>如果开启上面代码，那么他们之间的连接是ssl</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>DEBUG SMTP<span class="token operator">:</span> useEhlo <span class="token boolean">true</span><span class="token punctuation">,</span> useAuth <span class="token boolean">false</span>\nDEBUG SMTP<span class="token operator">:</span> trying <span class="token keyword">to</span> <span class="token namespace">connect</span> <span class="token keyword">to</span> <span class="token namespace">host</span> <span class="token string">&quot;smtp.qq.com&quot;</span><span class="token punctuation">,</span> port <span class="token number">465</span><span class="token punctuation">,</span> isSSL <span class="token boolean">true</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="获取session对象" tabindex="-1"><a class="header-anchor" href="#获取session对象" aria-hidden="true">#</a> 获取session对象</h3><p><code>Session.getDefaultInstance(props)</code>通过这个方法进行获取</p><p>获取session对象就相当于我们和邮件的服务器进行了通信，也就相当于我们点开了邮件的写邮件页面</p><p>需要传入一个properties对象，还可以使用匿名内部类的方式创建一个</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Session</span> session <span class="token operator">=</span> <span class="token class-name">Session</span><span class="token punctuation">.</span><span class="token function">getDefaultInstance</span><span class="token punctuation">(</span>props <span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Authenticator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token annotation punctuation">@Override</span>\n            <span class="token keyword">protected</span> <span class="token class-name">PasswordAuthentication</span> getPasswordAuthentication <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment">//发件人邮件用户名，密码</span>\n                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PasswordAuthentication</span><span class="token punctuation">(</span><span class="token string">&quot;2291308094@qq.com&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;zitcvhazptfjeccf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ol><li><p>开启debug模式，</p><p><code>session.setDebug(true)</code>开启可以在控制台打印信息，时候发送情况，还有很多邮件的协议，内容等等，如果为false的话，那么就不会展示</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>DEBUG<span class="token operator">:</span> setDebug<span class="token operator">:</span> <span class="token class-name">JavaMail</span> version <span class="token number">1.4</span><span class="token number">.7</span>\nDEBUG<span class="token operator">:</span> <span class="token function">getProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> returning <span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span></span>Provider</span><span class="token punctuation">[</span>TRANSPORT<span class="token punctuation">,</span>smtp<span class="token punctuation">,</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>mail<span class="token punctuation">.</span>smtp<span class="token punctuation">.</span></span>SMTPTransport</span><span class="token punctuation">,</span><span class="token class-name">Oracle</span><span class="token punctuation">]</span>\nDEBUG SMTP<span class="token operator">:</span> useEhlo <span class="token boolean">true</span><span class="token punctuation">,</span> useAuth <span class="token boolean">false</span>\nDEBUG SMTP<span class="token operator">:</span> trying <span class="token keyword">to</span> <span class="token namespace">connect</span> <span class="token keyword">to</span> <span class="token namespace">host</span> <span class="token string">&quot;smtp.qq.com&quot;</span><span class="token punctuation">,</span> port <span class="token number">25</span><span class="token punctuation">,</span> isSSL <span class="token boolean">false</span>  <span class="token comment">//是否为ssl连接</span>\n<span class="token number">220</span> newxmesmtplogicsvrszb5<span class="token punctuation">.</span>qq<span class="token punctuation">.</span>com <span class="token class-name">XMail</span> <span class="token class-name">Esmtp</span> QQ <span class="token class-name">Mail</span> <span class="token class-name">Server</span><span class="token punctuation">.</span>\nDEBUG SMTP<span class="token operator">:</span> connected <span class="token keyword">to</span> <span class="token namespace">host</span> <span class="token string">&quot;smtp.qq.com&quot;</span><span class="token punctuation">,</span> port<span class="token operator">:</span> <span class="token number">25</span>\n<span class="token comment">//port是邮件服务器的端口</span>\n<span class="token comment">//host是主机</span>\n\nEHLO DESKTOP<span class="token operator">-</span>JD7N6TI\n<span class="token number">250</span><span class="token operator">-</span>newxmesmtplogicsvrszb5<span class="token punctuation">.</span>qq<span class="token punctuation">.</span>com\n<span class="token number">250</span><span class="token operator">-</span>PIPELINING\n<span class="token number">250</span><span class="token operator">-</span>SIZE <span class="token number">73400320</span>\n<span class="token number">250</span><span class="token operator">-</span>STARTTLS\n<span class="token number">250</span><span class="token operator">-</span>AUTH LOGIN PLAIN\n<span class="token number">250</span><span class="token operator">-</span>AUTH<span class="token operator">=</span>LOGIN\n<span class="token number">250</span><span class="token operator">-</span>MAILCOMPRESS\n<span class="token number">250</span> <span class="token number">8</span>BITMIME\nDEBUG SMTP<span class="token operator">:</span> <span class="token class-name">Found</span> extension <span class="token string">&quot;PIPELINING&quot;</span><span class="token punctuation">,</span> arg <span class="token string">&quot;&quot;</span>\nDEBUG SMTP<span class="token operator">:</span> <span class="token class-name">Found</span> extension <span class="token string">&quot;SIZE&quot;</span><span class="token punctuation">,</span> arg <span class="token string">&quot;73400320&quot;</span>\nDEBUG SMTP<span class="token operator">:</span> <span class="token class-name">Found</span> extension <span class="token string">&quot;STARTTLS&quot;</span><span class="token punctuation">,</span> arg <span class="token string">&quot;&quot;</span>\nDEBUG SMTP<span class="token operator">:</span> <span class="token class-name">Found</span> extension <span class="token string">&quot;AUTH&quot;</span><span class="token punctuation">,</span> arg <span class="token string">&quot;LOGIN PLAIN&quot;</span>\nDEBUG SMTP<span class="token operator">:</span> <span class="token class-name">Found</span> extension <span class="token string">&quot;AUTH=LOGIN&quot;</span><span class="token punctuation">,</span> arg <span class="token string">&quot;&quot;</span>\nDEBUG SMTP<span class="token operator">:</span> <span class="token class-name">Found</span> extension <span class="token string">&quot;MAILCOMPRESS&quot;</span><span class="token punctuation">,</span> arg <span class="token string">&quot;&quot;</span>\nDEBUG SMTP<span class="token operator">:</span> <span class="token class-name">Found</span> extension <span class="token string">&quot;8BITMIME&quot;</span><span class="token punctuation">,</span> arg <span class="token string">&quot;&quot;</span>\nDEBUG SMTP<span class="token operator">:</span> <span class="token class-name">Attempt</span> <span class="token keyword">to</span> <span class="token namespace">authenticate</span> using mechanisms<span class="token operator">:</span> LOGIN PLAIN DIGEST<span class="token operator">-</span>MD5 NTLM \nDEBUG SMTP<span class="token operator">:</span> AUTH LOGIN command trace suppressed\nDEBUG SMTP<span class="token operator">:</span> AUTH LOGIN succeeded\nDEBUG SMTP<span class="token operator">:</span> use8bit <span class="token boolean">false</span>\nMAIL FROM<span class="token operator">:</span><span class="token operator">&lt;</span><span class="token number">2291308094</span><span class="token annotation punctuation">@qq.com</span><span class="token operator">&gt;</span>\n<span class="token number">250</span> OK<span class="token punctuation">.</span>\nRCPT TO<span class="token operator">:</span><span class="token operator">&lt;</span><span class="token number">2291308006</span><span class="token annotation punctuation">@qq.com</span><span class="token operator">&gt;</span>\n<span class="token number">250</span> OK\nDEBUG SMTP<span class="token operator">:</span> <span class="token class-name">Verified</span> <span class="token class-name">Addresses</span>\nDEBUG SMTP<span class="token operator">:</span>   <span class="token number">2291308006</span><span class="token annotation punctuation">@qq.com</span>\nDATA\n<span class="token number">354</span> <span class="token class-name">End</span> data <span class="token keyword">with</span> <span class="token generics"><span class="token punctuation">&lt;</span>CR<span class="token punctuation">&gt;</span></span><span class="token generics"><span class="token punctuation">&lt;</span>LF<span class="token punctuation">&gt;</span></span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span>CR<span class="token punctuation">&gt;</span></span><span class="token generics"><span class="token punctuation">&lt;</span>LF<span class="token punctuation">&gt;</span></span><span class="token punctuation">.</span>\n<span class="token class-name">From</span><span class="token operator">:</span> <span class="token number">2291308094</span><span class="token annotation punctuation">@qq.com</span>\n<span class="token class-name">To</span><span class="token operator">:</span> <span class="token number">2291308006</span><span class="token annotation punctuation">@qq.com</span>\n<span class="token class-name">Message</span><span class="token operator">-</span>ID<span class="token operator">:</span> <span class="token operator">&lt;</span><span class="token number">472654579.0</span><span class="token number">.1615476952207</span><span class="token punctuation">.</span>JavaMail<span class="token punctuation">.</span><span class="token string">&quot;Rk��&quot;</span><span class="token annotation punctuation">@smtp.qq.com</span><span class="token operator">&gt;</span>\n<span class="token class-name">Subject</span><span class="token operator">:</span> <span class="token keyword">this</span> is a title\nMIME<span class="token operator">-</span><span class="token class-name">Version</span><span class="token operator">:</span> <span class="token number">1.0</span>\n<span class="token class-name">Content</span><span class="token operator">-</span><span class="token class-name">Type</span><span class="token operator">:</span> text<span class="token operator">/</span>html<span class="token punctuation">;</span>charset<span class="token operator">=</span>utf<span class="token operator">-</span><span class="token number">8</span>\n<span class="token class-name">Content</span><span class="token operator">-</span><span class="token class-name">Transfer</span><span class="token operator">-</span><span class="token class-name">Encoding</span><span class="token operator">:</span> quoted<span class="token operator">-</span>printable\n\n<span class="token keyword">this</span> is a test <span class="token operator">=</span>E5<span class="token operator">=</span><span class="token number">86</span><span class="token operator">=</span><span class="token number">85</span><span class="token operator">=</span>E5<span class="token operator">=</span>AE<span class="token operator">=</span>B9\n<span class="token punctuation">.</span>\n<span class="token number">250</span> OK<span class="token operator">:</span> queued as<span class="token punctuation">.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div></li></ol><p>开启debug模式，如果是在<code>transport.connect()</code>之前开启的话，那么打印的信息会很少，因为大多数信息都是在这一个过程产生的</p><h3 id="transport" tabindex="-1"><a class="header-anchor" href="#transport" aria-hidden="true">#</a> transport</h3><p>session对象就是我们点击邮件进入，书写邮件的那个页面，但是我们想要将邮件发送出去，还需要transport对象的支持</p><p><code>Transport transport = session.getTransport();</code></p><p>通过这个transport对象，可以和邮件服务器建立连接，以此俩确定</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>transport<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&quot;smtp.qq.com&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;2291308094@qq.com&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;zitcvhazptfjeccf&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>通过建立连接俩确定是不是你自己使用你的账号进行发送邮件，只是程序代替了打开邮件，编写邮件，发送邮件的过程，将这些过程都使用程序就行完成</p><h3 id="编写邮件内容" tabindex="-1"><a class="header-anchor" href="#编写邮件内容" aria-hidden="true">#</a> 编写邮件内容</h3><p>既然已经进入邮件页面(<code>session</code>)，那么我们就需要进行邮件的编写</p>',29),e=(0,p._)("ul",null,[(0,p._)("li",null,[(0,p._)("p",null,"创建消息对象"),(0,p._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,p._)("pre",{class:"language-java"},[(0,p._)("code",null,[(0,p._)("span",{class:"token class-name"},"MimeMessage"),(0,p.Uk)(" message "),(0,p._)("span",{class:"token operator"},"="),(0,p.Uk)(),(0,p._)("span",{class:"token keyword"},"new"),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},"MimeMessage"),(0,p._)("span",{class:"token punctuation"},"("),(0,p.Uk)("session"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n")])]),(0,p._)("div",{class:"line-numbers"},[(0,p._)("span",{class:"line-number"},"1"),(0,p._)("br")])]),(0,p._)("p",null,[(0,p.Uk)("需要传入一个session，这个过程就是，编写邮件内容，是在哪个打开的邮件中进行编写("),(0,p._)("code",null,"session就是一个打开的邮件面板"),(0,p.Uk)(")")])]),(0,p._)("li",null,[(0,p._)("p",null,"设置发件人"),(0,p._)("p",null,"注意，发件人不能使用中文，就是不存在的地址，必须是和你邮箱的授权码相匹配的邮箱"),(0,p._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,p._)("pre",{class:"language-java"},[(0,p._)("code",null,[(0,p.Uk)("message"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"setFrom"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token keyword"},"new"),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},"InternetAddress"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token string"},'"初尘博客"'),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n"),(0,p._)("span",{class:"token comment"},"//报错"),(0,p.Uk)("\n")])]),(0,p._)("div",{class:"line-numbers"},[(0,p._)("span",{class:"line-number"},"1"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"2"),(0,p._)("br")])]),(0,p._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,p._)("pre",{class:"language-java"},[(0,p._)("code",null,[(0,p._)("span",{class:"token comment"},"//正确"),(0,p.Uk)("\nmessage"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"setFrom"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token keyword"},"new"),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},"InternetAddress"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token string"},'"2291308094@qq.com"'),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n")])]),(0,p._)("div",{class:"line-numbers"},[(0,p._)("span",{class:"line-number"},"1"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"2"),(0,p._)("br")])])]),(0,p._)("li",null,[(0,p._)("p",null,"指明邮件的收件人"),(0,p._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,p._)("pre",{class:"language-java"},[(0,p._)("code",null,[(0,p.Uk)("message"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"setRecipient"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token class-name"},[(0,p.Uk)("MimeMessage"),(0,p._)("span",{class:"token punctuation"},"."),(0,p.Uk)("RecipientType")]),(0,p._)("span",{class:"token punctuation"},"."),(0,p.Uk)("TO"),(0,p._)("span",{class:"token punctuation"},","),(0,p._)("span",{class:"token keyword"},"new"),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},"InternetAddress"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token string"},'"2291308006@qq.com"'),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},")"),(0,p.Uk)("\n")])]),(0,p._)("div",{class:"line-numbers"},[(0,p._)("span",{class:"line-number"},"1"),(0,p._)("br")])]),(0,p._)("blockquote",null,[(0,p._)("p",null,"Message.RecipientType.TO：消息接受者 Message.RecipientType.CC：消息抄送者 Message.RecipientType.BCC：匿名抄送接收者(其他接受者看不到这个接受者的姓名和地址)")])]),(0,p._)("li",null,[(0,p._)("p",null,"设置发送的日期"),(0,p._)("p",null,[(0,p._)("code",null,"message.setSentDate(java.util.Date theDate);")])]),(0,p._)("li",null,[(0,p._)("p",null,"设置邮件内容"),(0,p._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,p._)("pre",{class:"language-java"},[(0,p._)("code",null,[(0,p.Uk)("message"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"setContent"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token string"},'"this is a test 内容"'),(0,p._)("span",{class:"token punctuation"},","),(0,p._)("span",{class:"token string"},'"text/html;charset=utf-8"'),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n")])]),(0,p._)("div",{class:"line-numbers"},[(0,p._)("span",{class:"line-number"},"1"),(0,p._)("br")])]),(0,p._)("p",null,"邮件的内容可以是HTML文档"),(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210311235852784.png?x-oss-process=style/pictureProcess1",data:"aurora"})]),(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210311235911634",originSrc:"C:%5CUsers%5Cchuchen%5CPictures%5C%E8%A7%86%E9%A2%91%E6%88%AA%E5%9B%BE%5Cjavaweb%5Cweb%5Cimage-20210311235911634.png",data:"aurora"})])]),(0,p._)("li",null,[(0,p._)("p",null,"发送邮件"),(0,p._)("p",null,[(0,p._)("code",null,"transport.sendMessage(message,message.getAllRecipients())")])])],-1),o=(0,p.uE)('<p>如果设置message的信息</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>message<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;中午好&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;text/html;charset=utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmessage<span class="token punctuation">.</span><span class="token function">setSentDate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">33445456</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmessage<span class="token punctuation">.</span><span class="token function">setDescription</span><span class="token punctuation">(</span><span class="token string">&quot;this is a descript&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmessage<span class="token punctuation">.</span><span class="token function">setFileName</span><span class="token punctuation">(</span><span class="token string">&quot;文件名字&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmessage<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',2),c=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210312131542184.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),l=(0,p.uE)('<h2 id="发送给多个用户" tabindex="-1"><a class="header-anchor" href="#发送给多个用户" aria-hidden="true">#</a> 发送给多个用户</h2><p>如果想要发送给多个用户，那么就必须使用此方法</p><blockquote><p><code>public abstract void setRecipients(Message.RecipientType var1, Address[] var2)</code></p></blockquote><p>参数需要传入一个<code>Address[]</code>数组，切记不可以这样设置发送给多个用户</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//错误代码</span>\nmessage<span class="token punctuation">.</span><span class="token function">setRecipient</span><span class="token punctuation">(</span><span class="token class-name">MimeMessage<span class="token punctuation">.</span>RecipientType</span><span class="token punctuation">.</span>TO<span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">InternetAddress</span><span class="token punctuation">(</span><span class="token string">&quot;2291308006@qq.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmessage<span class="token punctuation">.</span><span class="token function">setRecipient</span><span class="token punctuation">(</span><span class="token class-name">Message<span class="token punctuation">.</span>RecipientType</span><span class="token punctuation">.</span>TO<span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">InternetAddress</span><span class="token punctuation">(</span><span class="token string">&quot;sdfs567@163.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>如果是使用这种形式，那么最后写的那个地址将会覆盖上一个<code>2291308094@qq.com</code>的地址</p><h1 id="发送附件" tabindex="-1"><a class="header-anchor" href="#发送附件" aria-hidden="true">#</a> 发送附件</h1><p>附件的发送，其实就相当于是一个框，将其一部分一部分的组合起来，就形成了一封邮件里面的多个内容</p>',8),u=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210312135058773.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),i=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210312135224207.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),r=(0,p.uE)("<blockquote><ul><li><p>如果我们的邮件里面，只有存文本的话，那么就会将<code>multipart设置为alternative</code></p></li><li><p>如果邮件里面还有图片，文本，没有附件的话，需要将<code>multipart设置为related</code></p></li><li><p>如果邮件里面有图片，文本，附件的话，需要将<code>multipart设置为mixed</code></p></li></ul></blockquote><p>实现步骤</p><ol><li><p>创建一个properties对象，并且将需要使用到的服务器配置存入到里面</p></li><li><p>创建一个session</p></li><li><p>创建transport对象</p></li><li><p>获取消息对象message</p></li><li><p>获取<code>MimeBodyPart</code>对象，并且获取需要发送的图片数据</p></li><li><p>获取text文本节点信息<code>MimeBodyPart</code>，使用<code>setContent()</code>方法设置内容</p></li><li><p>获取<code>MimeMultipart</code>对象，并且将<code>MimeBodyPart</code>对象调用<code>MimeMultipart</code>的<code>addBodyPart</code>添加到<code>MimeMultipart</code>中</p></li><li><p>设置<code>MimeMultipart</code>对象的<code>setSubType(&quot;related&quot;);</code></p></li><li><p>将<code>MimeMultipart</code>添加到message对象中</p><p><code>message.setContent(part);</code></p></li></ol>",3),k=(0,p._)("blockquote",null,[(0,p._)("p",null,[(0,p.Uk)("获取"),(0,p._)("code",null,"MimeBodyPart"),(0,p.Uk)("对象")]),(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210312171513145.png?x-oss-process=style/pictureProcess1",data:"aurora"})]),(0,p._)("p",null,[(0,p.Uk)("因为尽管是简单的邮件(就只是存文本)，他也是使用一个节点"),(0,p._)("code",null,"multipart"),(0,p.Uk)("套起来的，然后再设置"),(0,p._)("code",null,"multipart"),(0,p.Uk)("的格式为"),(0,p._)("code",null,"alternative"),(0,p.Uk)("，就是一个文本")]),(0,p._)("p",null,[(0,p._)("code",null,"一封邮件，带有图片，还有附件，就是一个一个节点进行组合起来，就形成了一封带有图片，附件的邮件，并且是按照顺序进行拼接的")]),(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210312172128617.png?x-oss-process=style/pictureProcess1",data:"aurora"})]),(0,p._)("p",null,"所以如果想要发送图片也是一样，需要创建一个节点容器，用来存放这张图片的数据，然后在将这个节点和其他的节点(图片，文字，附件)按照自己想要的顺序进行组合")],-1),m=(0,p.uE)('<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//装备图片数据                                                                          </span>\n<span class="token class-name">MimeBodyPart</span> img_part <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeBodyPart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                       \n<span class="token comment">//MimeBodyPart对象就相当于是一个容器节点，用来存放图片的数据                                             </span>\n<span class="token class-name">DataHandler</span> handler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileDataSource</span><span class="token punctuation">(</span>                         \n        <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;C:\\\\Users\\\\chuchen\\\\Pictures\\\\好看动漫图片\\\\2.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                \n<span class="token comment">//将一个图片数据存入容器节点中(MimeBodyPart对象)                                                  </span>\nimg_part<span class="token punctuation">.</span><span class="token function">setDataHandler</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                 \nimg_part<span class="token punctuation">.</span><span class="token function">setContentID</span><span class="token punctuation">(</span><span class="token string">&quot;1.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                   \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><code>img_part.setDataHandler(handler); </code>不能使用<code>InputStream</code>类，因为参数指定必须使用<code>DataHandler</code>对象</p>',2),b=(0,p._)("blockquote",null,[(0,p._)("p",null,[(0,p.Uk)("用来存放的对象是"),(0,p._)("code",null,"MimeBodyPart"),(0,p.Uk)("，不能直接使用"),(0,p._)("code",null,"MimeMultipart"),(0,p.Uk)("，因为"),(0,p._)("code",null,"MimeMultipart"),(0,p.Uk)("相当于这两个的整体")]),(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210312172658269.png?x-oss-process=style/pictureProcess1",data:"aurora"})]),(0,p._)("p",null,[(0,p.Uk)("，每一张图片保存的容器相当于"),(0,p._)("code",null,"MimeMultipart"),(0,p.Uk)("的每一个身体部分，")]),(0,p._)("p",null,[(0,p._)("code",null,'img_part.setContentID("1.jpg")'),(0,p.Uk)("相当于定义了这张图片在发送时的图片名称，这个参数名称可以代表着这张图片的数据，1.jpg保存了这张图片的数据，通过这个参数就可以拿到这张图片(在当前邮件中)")])],-1),d=(0,p.uE)('<p>设置文本内容</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//准备正文数据                                                                           </span>\n<span class="token comment">//因为一封带有图片的邮件，其是文本和图片节点的组合，上面的那个是图片节点，这个text是一个文本节点                                </span>\n<span class="token class-name">MimeBodyPart</span> text <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeBodyPart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                            \ntext<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;只是一封带有&lt;img src=&#39;cid:1.jpg&#39; /&gt;的图片邮件&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;text/html;charset=utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>如果想要发送带有图片的邮件，那么就必须添加上文本内容，并且文本内容中一定要有<code>&lt;img src=&#39;cid=...&#39; /&gt;</code></p><p><code>text.setContent(&quot;只是一封带有&lt;img src=&#39;cid:1.jpg&#39; /&gt;的图片邮件&quot;,&quot;text/html;charset=utf-8&quot;);</code>的目的就是将图片显示在邮件中进行展示</p>',4),g=(0,p._)("blockquote",null,[(0,p._)("p",null,[(0,p.Uk)("如果没有设置"),(0,p._)("code",null,'text.setContent("只是一封带有<img src=\'cid:1.jpg\' />的图片邮件","text/html;charset=utf-8")')]),(0,p._)("p",null,"那么"),(0,p._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,p._)("pre",{class:"language-java"},[(0,p._)("code",null,[(0,p._)("span",{class:"token class-name"},"MimeMultipart"),(0,p.Uk)(" part "),(0,p._)("span",{class:"token operator"},"="),(0,p.Uk)(),(0,p._)("span",{class:"token keyword"},"new"),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},"MimeMultipart"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n   part"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"addBodyPart"),(0,p._)("span",{class:"token punctuation"},"("),(0,p.Uk)("img_part"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n\npart"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"setSubType"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token string"},'"alternative"'),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n\nmessage"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"setContent"),(0,p._)("span",{class:"token punctuation"},"("),(0,p.Uk)("part"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n\ntransport"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"sendMessage"),(0,p._)("span",{class:"token punctuation"},"("),(0,p.Uk)("message"),(0,p._)("span",{class:"token punctuation"},","),(0,p.Uk)("message"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"getAllRecipients"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n")])]),(0,p._)("div",{class:"line-numbers"},[(0,p._)("span",{class:"line-number"},"1"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"2"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"3"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"4"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"5"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"6"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"7"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"8"),(0,p._)("br")])]),(0,p._)("p",null,"那么最终的效果会在邮件中展示一个附件的下载方式，不会以图片后缀结尾"),(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210312174137144.png?x-oss-process=style/pictureProcess1",data:"aurora"})])],-1),q=(0,p.uE)('<blockquote><p>如果</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">MimeMultipart</span> part <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeMultipart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\npart<span class="token punctuation">.</span><span class="token function">addBodyPart</span><span class="token punctuation">(</span>img_part<span class="token punctuation">)</span><span class="token punctuation">;</span>\npart<span class="token punctuation">.</span><span class="token function">setSubType</span><span class="token punctuation">(</span><span class="token string">&quot;alternative&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">//将这个组合的节点，添加到消息中</span>\nmessage<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;img src=&#39;cid:1.jpg&#39; /&gt;&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;text/html;charset=utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\ntransport<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span>message<span class="token punctuation">.</span><span class="token function">getAllRecipients</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>如果<code>message.setContent</code>没有将part作为内容，而是<code>&lt;img src=&#39;cid:1.jpg&#39; /&gt;</code>使用这种方式，那么邮件的内容是空白的，因为根本不知道<code>cid:1.jpg</code>的路径，找不到图片，这里只是一个<code>img</code>标签</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">MimeBodyPart</span> text <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeBodyPart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ntext<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;只是一封带有&lt;img src=&#39;cid:1.jpg&#39; /&gt;的图片邮件&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;text/html;charset=utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>这样才能代表我们刚才设置的那张图片</p></blockquote><h2 id="完整代码" tabindex="-1"><a class="header-anchor" href="#完整代码" aria-hidden="true">#</a> 完整代码</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>chu<span class="token punctuation">.</span>mail</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>activation<span class="token punctuation">.</span></span><span class="token class-name">DataHandler</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>activation<span class="token punctuation">.</span></span><span class="token class-name">DataSource</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>activation<span class="token punctuation">.</span></span><span class="token class-name">FileDataSource</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span></span><span class="token class-name">Message</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span></span><span class="token class-name">Session</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span></span><span class="token class-name">Transport</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span>internet<span class="token punctuation">.</span></span><span class="token class-name">InternetAddress</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span>internet<span class="token punctuation">.</span></span><span class="token class-name">MimeBodyPart</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span>internet<span class="token punctuation">.</span></span><span class="token class-name">MimeMessage</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span>internet<span class="token punctuation">.</span></span><span class="token class-name">MimeMultipart</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Properties</span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demon4</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> main <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>\n        <span class="token comment">//此类是邮件的发送图片，还有附件</span>\n        <span class="token class-name">Properties</span> pro <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        pro<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;mail.host&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;smtp.qq.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        pro<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;mail.transport.protocol&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;smtp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Session</span> session <span class="token operator">=</span> <span class="token class-name">Session</span><span class="token punctuation">.</span><span class="token function">getDefaultInstance</span><span class="token punctuation">(</span>pro<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        session<span class="token punctuation">.</span><span class="token function">setDebug</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">Transport</span> transport <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getTransport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        transport<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&quot;smtp.qq.com&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;2291308094@qq.com&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;zitcvhazptfjeccf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">Message</span> message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeMessage</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        message<span class="token punctuation">.</span><span class="token function">setFrom</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InternetAddress</span><span class="token punctuation">(</span><span class="token string">&quot;2291308094@qq.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        message<span class="token punctuation">.</span><span class="token function">setRecipient</span><span class="token punctuation">(</span><span class="token class-name">Message<span class="token punctuation">.</span>RecipientType</span><span class="token punctuation">.</span>TO<span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">InternetAddress</span><span class="token punctuation">(</span><span class="token string">&quot;2291308006@qq.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        message<span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span><span class="token string">&quot;这是一封标题&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//装备图片数据</span>\n        <span class="token class-name">MimeBodyPart</span> img_part <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeBodyPart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//MimeBodyPart对象就相当于是一个容器节点，用来存放图片的数据</span>\n        <span class="token class-name">DataHandler</span> handler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileDataSource</span><span class="token punctuation">(</span>\n                <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;C:\\\\Users\\\\chuchen\\\\Pictures\\\\好看动漫图片\\\\2.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//将一个图片数据存入容器节点中(MimeBodyPart对象)</span>\n        img_part<span class="token punctuation">.</span><span class="token function">setDataHandler</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        img_part<span class="token punctuation">.</span><span class="token function">setContentID</span><span class="token punctuation">(</span><span class="token string">&quot;1.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//准备正文数据</span>\n        <span class="token comment">//因为一封带有图片的邮件，其是文本和图片节点的组合，上面的那个是图片节点，这个text是一个文本节点</span>\n        <span class="token class-name">MimeBodyPart</span> text <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeBodyPart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        text<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;只是一封带有&lt;img src=&#39;cid:1.jpg&#39; /&gt;的图片邮件&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;text/html;charset=utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//描述数据关系</span>\n        <span class="token class-name">MimeMultipart</span> part <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeMultipart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        part<span class="token punctuation">.</span><span class="token function">addBodyPart</span><span class="token punctuation">(</span>img_part<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        part<span class="token punctuation">.</span><span class="token function">addBodyPart</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        part<span class="token punctuation">.</span><span class="token function">setSubType</span><span class="token punctuation">(</span><span class="token string">&quot;related&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        \n        <span class="token comment">//将这个组合的节点，添加到消息中</span>\n        message<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>part<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        transport<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span>message<span class="token punctuation">.</span><span class="token function">getAllRecipients</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br></div></div><h1 id="邮件发送工具类" tabindex="-1"><a class="header-anchor" href="#邮件发送工具类" aria-hidden="true">#</a> 邮件发送工具类</h1><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>chu<span class="token punctuation">.</span>util</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>mail<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">MailSSLSocketFactory</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span>internet<span class="token punctuation">.</span></span><span class="token class-name">InternetAddress</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span>internet<span class="token punctuation">.</span></span><span class="token class-name">MimeMessage</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileInputStream</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">GeneralSecurityException</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Properties</span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MailUtil</span> <span class="token punctuation">{</span>\n    <span class="token comment">//此类是邮件发送的工具类，提供返回message对象，transport对象、</span>\n    <span class="token comment">//transport对象已经连接到服务器</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Session</span> session<span class="token punctuation">;</span><span class="token comment">//session对象</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Properties</span> pro<span class="token punctuation">;</span><span class="token comment">//配置文件对象</span>\n    <span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token class-name">Transport</span> transport<span class="token punctuation">;</span>\n    <span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> debug<span class="token punctuation">;</span><span class="token comment">//debug模式</span>\n    <span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token class-name">Message</span> message<span class="token punctuation">;</span><span class="token comment">//message对象</span>\n    <span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>\n    <span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>\n    <span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token class-name">String</span> auth<span class="token punctuation">;</span><span class="token comment">//是否开启登录验证</span>\n    <span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token class-name">String</span> host<span class="token punctuation">;</span><span class="token comment">//服务器</span>\n\n    <span class="token keyword">protected</span> <span class="token class-name">MailUtil</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">//私有化构造方法</span>\n\n    <span class="token comment">//静态代码块用于初始化properties类的参数</span>\n    <span class="token keyword">static</span> <span class="token punctuation">{</span>\n        <span class="token class-name">InputStream</span> stream <span class="token operator">=</span> <span class="token class-name">MailUtil</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">&quot;mail.properties&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        pro <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">try</span> <span class="token punctuation">{</span>\n            pro<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>stream<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token comment">//设置邮件所需的配置信息 通过配置文件获取，然后在将值设置</span>\n\n        <span class="token comment">//初始化用户名和密码</span>\n        username <span class="token operator">=</span> pro<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        password <span class="token operator">=</span> pro<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        host <span class="token operator">=</span> pro<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;host&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        debug <span class="token operator">=</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token function">parseBoolean</span><span class="token punctuation">(</span>pro<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;debug&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        pro<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;mail.host&quot;</span><span class="token punctuation">,</span> host<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置服务器</span>\n        pro<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;mail.transport.protocol&quot;</span><span class="token punctuation">,</span> pro<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;protocol&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置邮箱协议</span>\n        auth <span class="token operator">=</span> pro<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;auth&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        pro<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;mail.smtp.auth&quot;</span><span class="token punctuation">,</span> auth<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//是否开启用户名密码验证</span>\n\n        <span class="token comment">//初始化session</span>\n        session <span class="token operator">=</span> <span class="token class-name">Session</span><span class="token punctuation">.</span><span class="token function">getDefaultInstance</span><span class="token punctuation">(</span>pro<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Authenticator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token annotation punctuation">@Override</span>\n            <span class="token keyword">protected</span> <span class="token class-name">PasswordAuthentication</span> getPasswordAuthentication <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment">//发件人邮件用户名，密码</span>\n                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PasswordAuthentication</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//qq邮箱的话 进行ssl验证</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>pro<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;host&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;qq&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">//是QQ服务器</span>\n            <span class="token class-name">MailSSLSocketFactory</span> sf <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n            <span class="token keyword">try</span> <span class="token punctuation">{</span>\n                sf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MailSSLSocketFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                sf<span class="token punctuation">.</span><span class="token function">setTrustAllHosts</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                pro<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;mail.smtp.ssl.enable&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                pro<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;mail.smtp.socketFactory&quot;</span><span class="token punctuation">,</span>sf<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">GeneralSecurityException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Session</span> getSession <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MessagingException</span> <span class="token punctuation">{</span>\n        <span class="token function">setTransport</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> session<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> setSession <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">MailUtil</span><span class="token punctuation">.</span>session <span class="token operator">=</span> session<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Transport</span> getTransport <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> transport<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> setTransport <span class="token punctuation">(</span><span class="token class-name">Session</span> session<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MessagingException</span> <span class="token punctuation">{</span>\n        <span class="token comment">//初始化transport对象</span>\n        session<span class="token punctuation">.</span><span class="token function">setDebug</span><span class="token punctuation">(</span>debug<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        transport <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getTransport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        transport<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">setMessage</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Message</span> getMessage <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> message<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> setMessage <span class="token punctuation">(</span><span class="token class-name">Session</span> session<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">//初始化message对象</span>\n        message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeMessage</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//设置发送人，因为发件人邮箱和用户邮箱相同</span>\n        <span class="token keyword">try</span> <span class="token punctuation">{</span>\n            message<span class="token punctuation">.</span><span class="token function">setFrom</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InternetAddress</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MessagingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br></div></div><h2 id="测试代码" tabindex="-1"><a class="header-anchor" href="#测试代码" aria-hidden="true">#</a> 测试代码</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>chu<span class="token punctuation">.</span>mail</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>chu<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">MailUtil</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span></span><span class="token class-name">Message</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span></span><span class="token class-name">MessagingException</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span></span><span class="token class-name">Session</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span></span><span class="token class-name">Transport</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span>internet<span class="token punctuation">.</span></span><span class="token class-name">InternetAddress</span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UtilTest2</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> main <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Session</span> session <span class="token operator">=</span> <span class="token class-name">MailUtil</span><span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Message</span> message <span class="token operator">=</span> <span class="token class-name">MailUtil</span><span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        message<span class="token punctuation">.</span><span class="token function">setRecipient</span><span class="token punctuation">(</span><span class="token class-name">Message<span class="token punctuation">.</span>RecipientType</span><span class="token punctuation">.</span>TO<span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">InternetAddress</span><span class="token punctuation">(</span><span class="token string">&quot;2291308006@qq.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        message<span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        message<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;content&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;text/html;charset=utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Transport</span> transport <span class="token operator">=</span> <span class="token class-name">MailUtil</span><span class="token punctuation">.</span><span class="token function">getTransport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        transport<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span>message<span class="token punctuation">.</span><span class="token function">getAllRecipients</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div>',7),y={},v=(0,a(83744).Z)(y,[["render",function(n,s){return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,e,o,c,l,u,i,r,k,m,b,d,g,q],64)}]])}}]);
"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[5523],{99537:(n,e,s)=>{s.r(e),s.d(e,{data:()=>a});const a={key:"v-9283d830",path:"/nginx/nginx%E5%AE%9E%E4%BE%8B%E4%B9%8B%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1.html",title:"nginx实例之实现负载均衡",lang:"en-US",frontmatter:{date:"2022/1/7 21:05",title:"nginx实例之实现负载均衡",tag:["nginx","nginx实战"]},excerpt:"",headers:[],git:{updatedTime:1654857597e3,contributors:[{name:"qsyyke",email:"2291308094@qq.com",commits:1}]}}},72110:(n,e,s)=>{s.r(e),s.d(e,{default:()=>c});var a=s(66252);const l=(0,a._)("p",null,"最终实现的目标如下图",-1),r=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20220107212815286.png",data:"aurora"})],-1),p=(0,a.uE)('<p>随着互联网信息的爆炸性增长，负载均衡（load balance）已经不再是一个很陌生的话题，顾名思义，负载均衡即是将负载分摊到不同的服务单元，既保证服务的可用性，又保证响应足够快，给用户很好的体验。</p><p>快速增长的访问量和数据流量催生了各式各样的负载均衡产品，很多专业的负载均衡硬件提供了很好的功能，但却价格不菲，这使得负载均衡软件大受欢迎，nginx 就是其中的一个，在 linux 下有 Nginx、LVS、Haproxy 等等服务可以提供负载均衡服务。</p><p>而且 Nginx 提供了几种分配方式(策略)：</p><ol><li><p><code>轮询</code>（默认）</p><p>每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器 down 掉，能自动剔除。</p></li><li><p>weight</p><p>weight 代表权,重默认为 1,权重越高被分配的客户端越多指定轮询几率，weight 和访问比率成正比，用于后端服务器性能不均的情况。</p><p>例如：</p><div class="language-conf ext-conf line-numbers-mode"><pre class="language-conf"><code>upstream server_pool {\n\tserver 192.168.86.142:8081 weight=10;\n\tserver 192.168.86.142:8080 weight=5;\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>weight</code>的数值越大，便代表转发到对应服务器的次数越多</p></li><li><p><code>ip_hash</code></p><p>每个请求按访问 ip 的 hash 结果分配，这样每个访客固定访问一个后端服务器，可以解决 session 的问题。</p><div class="language-conf ext-conf line-numbers-mode"><pre class="language-conf"><code>upstream server_pool{ \n\tip_hash; \n\tserver 192.168.5.21:80; \n\tserver 192.168.5.22:80; \n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><p><code>fair（第三方）</code></p><p>按后端服务器的响应时间来分配请求，响应时间短的优先分配。</p><div class="language-conf ext-conf line-numbers-mode"><pre class="language-conf"><code>upstream server_pool{ \n\tserver 192.168.5.21:80; \n\tserver 192.168.5.22:80; \n\tfair; \n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ol>',4),i={},c=(0,s(83744).Z)(i,[["render",function(n,e){return(0,a.wg)(),(0,a.iD)(a.HY,null,[l,r,p],64)}]])}}]);
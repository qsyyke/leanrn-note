"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6722],{1310:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-0cd7d7af",path:"/issue/%E5%89%8D%E7%AB%AF.html",title:"使用js方式清空表单",lang:"en-US",frontmatter:{date:"2021/11/20"},excerpt:"",headers:[{level:2,title:"width为百分数，居中问题",slug:"width为百分数-居中问题",children:[]},{level:2,title:"实现垂直水平居中",slug:"实现垂直水平居中",children:[]},{level:2,title:"文字强制单行显示，超出省略号",slug:"文字强制单行显示-超出省略号",children:[]},{level:2,title:"css设置动画之后，保持位置不变",slug:"css设置动画之后-保持位置不变",children:[]},{level:2,title:"vue实现自动滚动到某个位置",slug:"vue实现自动滚动到某个位置",children:[]}],git:{updatedTime:1654857597e3,contributors:[{name:"qsyyke",email:"2291308094@qq.com",commits:1}]}}},47844:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const e=(0,a(66252).uE)('<h1 id="使用js方式清空表单" tabindex="-1"><a class="header-anchor" href="#使用js方式清空表单" aria-hidden="true">#</a> 使用js方式清空表单</h1><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;reset&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;reset&quot;</span> style<span class="token operator">=</span><span class="token string">&quot;display: none;&quot;</span><span class="token operator">&gt;</span>\n    \n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;input[type=reset]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h1 id="设置垂直居中" tabindex="-1"><a class="header-anchor" href="#设置垂直居中" aria-hidden="true">#</a> 设置垂直居中</h1><p>在不知道height的情况下，不能使用<code>line-height</code>设置垂直居中，可以使用<code>vertical-align: middle;</code></p><h1 id="不能使用innertext获取textarea的内容" tabindex="-1"><a class="header-anchor" href="#不能使用innertext获取textarea的内容" aria-hidden="true">#</a> 不能使用innerText获取textarea的内容</h1><p>使用innerText不能获取到，需要使用value，但是发现，innerHtml也是可以获取到</p><p><code>注意：form 里的Dom元素(input select checkbox textarea radio)都是value</code></p><h1 id="js去除空格" tabindex="-1"><a class="header-anchor" href="#js去除空格" aria-hidden="true">#</a> js去除空格</h1><p><code>content = content.replace(/\\s+/g, &quot;&quot;);</code></p><h2 id="width为百分数-居中问题" tabindex="-1"><a class="header-anchor" href="#width为百分数-居中问题" aria-hidden="true">#</a> width为百分数，居中问题</h2><p>如果width为百分数，想要居中，那么在其父盒子上添加</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>display: flex;\nalign-items: center;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>该使用百分数的盒子，使用<code>margin: 0 auto</code>就可以了</p><h2 id="实现垂直水平居中" tabindex="-1"><a class="header-anchor" href="#实现垂直水平居中" aria-hidden="true">#</a> 实现垂直水平居中</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>父盒子\n.recommend-item {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token punctuation">:</span><span class="token punctuation">:</span>-webkit-scrollbar — 整个滚动条.\n<span class="token punctuation">:</span><span class="token punctuation">:</span>-webkit-scrollbar-button — 滚动条上的按钮 <span class="token punctuation">(</span>上下箭头<span class="token punctuation">)</span>.\n<span class="token punctuation">:</span><span class="token punctuation">:</span>-webkit-scrollbar-thumb — 滚动条上的滚动滑块.\n<span class="token punctuation">:</span><span class="token punctuation">:</span>-webkit-scrollbar-track — 滚动条轨道.\n<span class="token punctuation">:</span><span class="token punctuation">:</span>-webkit-scrollbar-track-piece — 滚动条没有滑块的轨道部分.\n<span class="token punctuation">:</span><span class="token punctuation">:</span>-webkit-scrollbar-corner — 当同时有垂直滚动条和水平滚动条时交汇的部分.\n<span class="token punctuation">:</span><span class="token punctuation">:</span>-webkit-resizer — 某些元素的corner部分的部分样式<span class="token punctuation">(</span><span class="token property">例</span><span class="token punctuation">:</span>textarea的可拖动按钮<span class="token punctuation">)</span>.\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="文字强制单行显示-超出省略号" tabindex="-1"><a class="header-anchor" href="#文字强制单行显示-超出省略号" aria-hidden="true">#</a> 文字强制单行显示，超出省略号</h2><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code>    <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>\n    <span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>\n    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="css设置动画之后-保持位置不变" tabindex="-1"><a class="header-anchor" href="#css设置动画之后-保持位置不变" aria-hidden="true">#</a> css设置动画之后，保持位置不变</h2><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.sidebar-menu-item:hover .menu-item-right a span</span> <span class="token punctuation">{</span>\n    <span class="token property">animation</span><span class="token punctuation">:</span> sidebarMenuItemHover 230ms<span class="token punctuation">;</span>\n    <span class="token property">animation-iteration-count</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>\n    <span class="token property">animation-fill-mode</span><span class="token punctuation">:</span> forwards<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token atrule"><span class="token rule">@keyframes</span> sidebarMenuItemHover</span> <span class="token punctuation">{</span>\n    <span class="token selector">from</span> <span class="token punctuation">{</span>\n        <span class="token property">padding-left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token selector">to</span> <span class="token punctuation">{</span>\n        <span class="token property">padding-left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token atrule"><span class="token rule">@keyframes</span> sidebarMenuItemEnter</span> <span class="token punctuation">{</span>\n    <span class="token selector">from</span> <span class="token punctuation">{</span>\n        <span class="token property">padding-left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token selector">to</span> <span class="token punctuation">{</span>\n        <span class="token property">padding-left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="vue实现自动滚动到某个位置" tabindex="-1"><a class="header-anchor" href="#vue实现自动滚动到某个位置" aria-hidden="true">#</a> vue实现自动滚动到某个位置</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.tag-bottom&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollIntoView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',22),t={},p=(0,a(83744).Z)(t,[["render",function(n,s){return e}]])}}]);
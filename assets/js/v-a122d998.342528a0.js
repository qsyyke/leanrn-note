"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6870],{92213:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-a122d998",path:"/javaweb/%E4%BC%9A%E8%AF%9D%E6%8A%80%E6%9C%AF.html",title:"cookie会话技术",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"会话应用",slug:"会话应用",children:[]},{level:2,title:"方式",slug:"方式",children:[]},{level:2,title:"步骤",slug:"步骤",children:[]},{level:2,title:"cookie原理",slug:"cookie原理",children:[]},{level:2,title:"存活时间",slug:"存活时间",children:[]},{level:2,title:"cookie特点",slug:"cookie特点",children:[]},{level:2,title:"作用",slug:"作用",children:[]},{level:2,title:"cookie共享问题",slug:"cookie共享问题",children:[]},{level:2,title:"打印上次访问时间",slug:"打印上次访问时间",children:[]}],git:{updatedTime:1654857597e3,contributors:[{name:"qsyyke",email:"2291308094@qq.com",commits:1}]}}},26587:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(66252).uE)('<h1 id="cookie会话技术" tabindex="-1"><a class="header-anchor" href="#cookie会话技术" aria-hidden="true">#</a> cookie会话技术</h1><p>会话就相当于两个人之间进行聊天，一问一答，如果其中一个人离开，那么也就代表他们之间的谈话结束，在会话技术中，两人之间是代表<code>浏览器</code>和<code>服务器</code>之间的请求和响应，<code>请求和响应</code>可以看成是一问一答的会话，如果浏览器或者服务器关闭，那么他们之家的请求和响应(谈话)也就结束了</p><p>一次会话:<code>从他们之间建立连接开始，到其中一个断开结束</code></p><p>因为是请求和响应(会话)一问一答模式，所以<code>一次会话中发生多次请求和响应发生</code></p><blockquote><p><code>每个请求都是独立存在的，他们之间不能进行数据传输，请求转发不是</code></p><p>但是使用会话技术就可以完成，请求之间可以进行数据传输</p></blockquote><h2 id="会话应用" tabindex="-1"><a class="header-anchor" href="#会话应用" aria-hidden="true">#</a> 会话应用</h2><p>会话技术在哪些地方应用？</p><blockquote><p>例如京东，当我们购物时，每一次点击添加到购物车，都是一次请求，当我们东西选够了，就到购物车进行结算，但是当我们到购物车中时，刚才添加的东西，都在购物车中，如果在会话技术中，请求之间是不能进行数据传输，（购物车结算也是一个请求），那么我们就无法知道我们选了哪些东西，更本就不会显示出来</p></blockquote><h2 id="方式" tabindex="-1"><a class="header-anchor" href="#方式" aria-hidden="true">#</a> 方式</h2><p>分为</p><blockquote><p><code>客户端会话</code>: cookie</p><p><code>服务器端会话</code>:session</p></blockquote><h1 id="cookie" tabindex="-1"><a class="header-anchor" href="#cookie" aria-hidden="true">#</a> Cookie</h1><p>Cookie的使用非常广泛，一般用在，<code>未登录情况下，完成系统的设置</code>，比如百度页面，在未登录的情况下，我们也可以完成个性化的设置，当我们点击保存的时候，就会为我们的设置生成cookie，当下一次再次打开（在设置的这个浏览器中），请求就会带着<code>cookie</code>到服务器，服务器很快就可以通过这个cookie的值进行个性化的设置</p><h2 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤" aria-hidden="true">#</a> 步骤</h2><blockquote><ol><li>创建Cookie对象，并且<code>绑定数据</code>，格式<code>cookie名:值</code>，其底层应该是一个map集合存储的</li><li>发送cookie，通过<code>response</code></li><li>获取cookie值，通过<code>request</code></li></ol></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//创建对象</span>\n <span class="token class-name">Cookie</span> cookie <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cookie</span><span class="token punctuation">(</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n <span class="token comment">//发送cookie</span>\n response<span class="token punctuation">.</span><span class="token function">addCookie</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>\n <span class="token comment">//获取cookie</span>\n <span class="token class-name">Cookie</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cookies <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cookies<span class="token punctuation">)</span><span class="token punctuation">;</span>\n <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Cookie</span> cookie1 <span class="token operator">:</span> cookies<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n     <span class="token class-name">String</span> name <span class="token operator">=</span> cookie1<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n     <span class="token class-name">String</span> value <span class="token operator">=</span> cookie1<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token operator">+</span><span class="token string">&quot;:&quot;</span><span class="token operator">+</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n     <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><code>如果在发送cookie的这个文件中进行获取cookie的话，会发生500，因为还没有发送，就获取cookie，为空，尽管idea会有一个默认的cookie，但是也要在发送cookie之后才有</code></p><h2 id="cookie原理" tabindex="-1"><a class="header-anchor" href="#cookie原理" aria-hidden="true">#</a> cookie原理</h2><ol><li><p>创建<code>cookie对象</code>，并且绑定数据，键值对</p></li><li><p>客户端发送请求</p></li><li><p><code>response</code>调用方法<code>addCookie()</code>，将cookie发送给客户端，并在相应头中设置cookie</p><blockquote><p><code>Set-Cookie: msg=hello</code></p></blockquote></li><li><p>客户端再次发送请求，请求会带着cookie以前发送给服务器，并且在请求头中，有一个<code>cookie</code>头的值为响应头中的<code>Set-Cookie</code>值，响应头中不会有 <code>Set-Cookie</code>，同一个浏览器，同一段时间，如果没有设置生命周期为0的话，cookie只会出现一次在响应头中，也就是客户端第一次发送请求的时候</p></li></ol><h2 id="存活时间" tabindex="-1"><a class="header-anchor" href="#存活时间" aria-hidden="true">#</a> 存活时间</h2><p>cookie的存活时间：<code>服务器发送cookie，浏览器再次请求，多久能够消失</code></p><p>默认cookie的存活时间是：关闭浏览器的时候，cookie就会被销毁，下次再次打开时，又会再一次获取，<code>通过方法可以设置cookie的存活时间</code></p><blockquote><p>setMaxAge(int second&gt;0)，cookie会持久化的保存在本地磁盘中，下次打开浏览器时，会从本地中取出，但是在本地存储的时间是和<code>second</code>的值有关系的，也就是在本地存放多少秒才销毁，比如</p><p><code>setMaxAge(30)</code>cookie会被保存在本地，30秒后系统会对其进行销毁</p><p><code>setMaxAge(int second&lt;0)</code>默认情况就是这种，</p><p><code>setMaxAge(int second=0)</code>会立即对cookie进行销毁，也就是服务器才刚刚发送完cookie，浏览器就会对cookie进行删除</p></blockquote><h2 id="cookie特点" tabindex="-1"><a class="header-anchor" href="#cookie特点" aria-hidden="true">#</a> cookie特点</h2><blockquote><ol><li><p>cookie存储数据是存储在客户端浏览器中</p></li><li><p>浏览器对于单个cookie 的大小有限制(4kb) 以及 对同一个域名下的总cookie数量也有限制(20个)，不同浏览器的要求不同</p></li></ol></blockquote><h2 id="作用" tabindex="-1"><a class="header-anchor" href="#作用" aria-hidden="true">#</a> 作用</h2><p>因为cookie<code>值</code>是公开的，我们都能够查看，所以他的安全性不高</p><p><code>cookie一般用于存出少量的不太敏感的数据</code><code>在不登录的情况下，完成服务器对客户端的身份识别</code></p><h2 id="cookie共享问题" tabindex="-1"><a class="header-anchor" href="#cookie共享问题" aria-hidden="true">#</a> cookie共享问题</h2><blockquote><p>假设在一个tomcat服务器中，部署了多个web项目，那么在这些web项目中cookie能不能共享？</p><p>默认情况下cookie不能共享</p></blockquote><p>但是可以通过设置其路径，达到共享的效果<code>setPath(String path):设置cookie的获取范围。默认情况下，设置当前的虚拟目录</code></p><p><code>如果要共享，则可以将path设置为&quot;/&quot;</code>，因为在同一个Tomcat服务器中，不同项目之间，也就是虚拟目录不同，<code>将path设置为&quot;/&quot;</code>代表着cookie在根路径下都是共享的，也就是在<code>localhost</code>下是共享的</p><h2 id="打印上次访问时间" tabindex="-1"><a class="header-anchor" href="#打印上次访问时间" aria-hidden="true">#</a> 打印上次访问时间</h2><blockquote><p>需求</p><p>如果是首次访问，则打印欢迎，并创建cookie，并将现在时间保存在cookie里面</p><p>如果不是首次，则打印上次显示时间，并更新cookie值</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>chu<span class="token punctuation">.</span>cookie</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URLDecoder</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URLEncoder</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">SimpleDateFormat</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span><span class="token punctuation">;</span>\n\n<span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span><span class="token string">&quot;/servletCookieTest&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ServletCookieTest</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">protected</span> <span class="token keyword">void</span> doGet <span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doPost</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">protected</span> <span class="token keyword">void</span> doPost <span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;text/html;charset=utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//记录上次打开浏览器的时间 cookie名字为lastTime</span>\n        <span class="token class-name">Cookie</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cookies <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//1.判断是否有cookie</span>\n        <span class="token comment">//2.存在cookie，获取cookie 打印上次访问时间</span>\n        <span class="token comment">//3.不存在cookie 则发送cookie，并写出欢迎词，发送cookie</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>cookies <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">//存在cookie 遍历cookie</span>\n            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Cookie</span> cookie <span class="token operator">:</span> cookies<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment">//获取名字</span>\n                <span class="token class-name">String</span> name <span class="token operator">=</span> cookie<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token comment">//判断名字中是否存在cookie名字</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;lastTime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token comment">//cookie中包含名字</span>\n                    <span class="token comment">//获取值</span>\n                    <span class="token class-name">String</span> value <span class="token operator">=</span> cookie<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token comment">//解码</span>\n                    value <span class="token operator">=</span> <span class="token class-name">URLDecoder</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;你上次访问时间为: &quot;</span><span class="token operator">+</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token comment">//设置新的cookie时间</span>\n                    <span class="token comment">//时间格式</span>\n                    <span class="token class-name">SimpleDateFormat</span> sdf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy年MM月dd日 HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token class-name">String</span> format <span class="token operator">=</span> sdf<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token comment">//编码</span>\n                    format <span class="token operator">=</span> <span class="token class-name">URLEncoder</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>format<span class="token punctuation">,</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    cookie<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span>format<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    cookie<span class="token punctuation">.</span><span class="token function">setMaxAge</span><span class="token punctuation">(</span><span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//一个月</span>\n                    response<span class="token punctuation">.</span><span class="token function">addCookie</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token keyword">return</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n\n        <span class="token punctuation">}</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>cookies <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">//不存在cookie  新建cookie 发送</span>\n            <span class="token class-name">Date</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">SimpleDateFormat</span> sdf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy年MM月dd日 HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">String</span> format <span class="token operator">=</span> sdf<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token comment">//编码</span>\n            format <span class="token operator">=</span> <span class="token class-name">URLEncoder</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>format<span class="token punctuation">,</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token class-name">Cookie</span> cookie <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cookie</span><span class="token punctuation">(</span><span class="token string">&quot;lastTime&quot;</span><span class="token punctuation">,</span> format<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token comment">//设置cookie的存活时间</span>\n            cookie<span class="token punctuation">.</span><span class="token function">setMaxAge</span><span class="token punctuation">(</span><span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//一个月</span>\n            response<span class="token punctuation">.</span><span class="token function">addCookie</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;欢迎你首次访问&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br></div></div><p><code>因为cookie中不能保存中文，还有空格，所以需要将时间日期进行转码处理</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//编码</span>\n<span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string">&quot;水电费何老师&quot;</span><span class="token punctuation">;</span>\nname <span class="token operator">=</span> <span class="token class-name">URLEncoder</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//解码</span>\nname <span class="token operator">=</span> <span class="token class-name">URLDecoder</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">/*\n运行结果\n%E6%B0%B4%E7%94%B5%E8%B4%B9%E4%BD%95%E8%80%81%E5%B8%88\n水电费何老师\n*/</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><code>设置cookie的声明周期时，如果只是在创建cookie的那个对象那里设置声明周期，会出现debug，如果不是首次，设置完cookie值后，还应该设置声明周期，最重要的还需要再次提交cookie，如果不再次提交的话，永远都是一个值，因为就只有一个会话request</code></p><h1 id="cookie数据域" tabindex="-1"><a class="header-anchor" href="#cookie数据域" aria-hidden="true">#</a> cookie数据域</h1><p>cookie对于重定向也是可以的</p><h1 id="cookie中解决不同域名之间的跨域问题" tabindex="-1"><a class="header-anchor" href="#cookie中解决不同域名之间的跨域问题" aria-hidden="true">#</a> cookie中解决不同域名之间的跨域问题</h1><p>现在有两个域名，api.vipblogs.cn，ht.vipblogs.cn实现cookie之间的跨域问题</p><p>api.vipblogs.cn/Cookie1文件下，会添加cookie，</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>\n<span class="token keyword">protected</span> <span class="token keyword">void</span> doPost <span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n    <span class="token class-name">Cookie</span> cookie <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cookie</span><span class="token punctuation">(</span><span class="token string">&quot;ccc1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;c1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    cookie<span class="token punctuation">.</span><span class="token function">setMaxAge</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    cookie<span class="token punctuation">.</span><span class="token function">setPath</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    cookie<span class="token punctuation">.</span><span class="token function">setDomain</span><span class="token punctuation">(</span><span class="token string">&quot;.vipblogs.cn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    response<span class="token punctuation">.</span><span class="token function">addCookie</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>ht.vipblogs.cn/cookie.html使用ajax的方式，点击访问<code>api.vipblogs.cn/Cookie1</code>添加cookie，</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>but1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>co1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>but2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>co2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>but3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>co3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.but1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            $<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">xhrFields</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token literal-property property">withCredentials</span><span class="token operator">:</span> <span class="token boolean">true</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">crossDomain</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>不同域名之间的cookie共享的时候，一定要设置<code>cookie.setDomain(&quot;.vipblogs.cn&quot;);</code>这里需要加上点号<code>.</code>，也可以设置成<code>cookie.setDomain(&quot;vipblogs.cn&quot;);</code></p><p>在tomcat8以上，就不能设置<code>.vipblogs.cn</code>形式，需要更改一下，在<code>context.xml</code>文件中，加上</p><p><code>&lt;CookieProcessor className=&quot;org.apache.tomcat.util.http.LegacyCookieProcessor&quot; /&gt;</code></p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Context</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token comment">&lt;!-- Default set of monitored resources. If one of these changes, the    --&gt;</span>\n    <span class="token comment">&lt;!-- web application will be reloaded.                                   --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>WatchedResource</span><span class="token punctuation">&gt;</span></span>WEB-INF/web.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>WatchedResource</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>WatchedResource</span><span class="token punctuation">&gt;</span></span>${catalina.base}/conf/web.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>WatchedResource</span><span class="token punctuation">&gt;</span></span>\n     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CookieProcessor</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.apache.tomcat.util.http.LegacyCookieProcessor<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n\n    <span class="token comment">&lt;!-- Uncomment this to disable session persistence across Tomcat restarts --&gt;</span>\n    <span class="token comment">&lt;!--\n    &lt;Manager pathname=&quot;&quot; /&gt;\n    --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Context</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><code>子域名可以共享父域名中的cookie，也就是vipblogs.cn中的cookie，所有的二级域名都能够得到</code></p><p>但是使用ajax请求添加cookie的时候，一定要加上</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>xhrFields: {\n    withCredentials: true\n},\n    crossDomain: true,\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>因为默认ajax是不会携带cookie发送请求的</p>',54),t={},e=(0,a(83744).Z)(t,[["render",function(n,s){return p}]])}}]);
"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[5883],{75244:(a,s,e)=>{e.r(s),e.d(s,{data:()=>n});const n={key:"v-2aa1e2ca",path:"/javaweb/%E9%97%AE%E9%A2%98.html",title:"javaweb学习问题总结",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:3,title:"使用war进行部署",slug:"使用war进行部署",children:[]},{level:3,title:"另一种方式",slug:"另一种方式",children:[]}],git:{updatedTime:1654857597e3,contributors:[{name:"qsyyke",email:"2291308094@qq.com",commits:1}]}}},63620:(a,s,e)=>{e.r(s),e.d(s,{default:()=>W});var n=e(66252);const t=(0,n._)("h1",{id:"javaweb学习问题总结",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#javaweb学习问题总结","aria-hidden":"true"},"#"),(0,n.Uk)(" javaweb学习问题总结")],-1),l=(0,n._)("h1",{id:"少写斜杠",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#少写斜杠","aria-hidden":"true"},"#"),(0,n.Uk)(" 少写斜杠")],-1),c=(0,n._)("p",null,[(0,n._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210215192923070.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),o=(0,n._)("p",null,"如果少写了斜杆，就会发生问题",-1),p=(0,n._)("h1",{id:"new-servlet",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#new-servlet","aria-hidden":"true"},"#"),(0,n.Uk)(" new Servlet")],-1),r=(0,n._)("p",null,[(0,n._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210215203908219.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),i=(0,n._)("p",null,"将√打上就行",-1),u=(0,n._)("p",null,[(0,n.Uk)("除了上面两个，还必须任选下面两个，才能"),(0,n._)("code",null,"new")],-1),g=(0,n._)("p",null,[(0,n._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210303183850353.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),d=(0,n.uE)('<h1 id="idea热部署debug" tabindex="-1"><a class="header-anchor" href="#idea热部署debug" aria-hidden="true">#</a> idea热部署debug</h1><p>如果新创建一个类，那么需要重新启动服务器，如果只是修改一个类中的代码，那么就不需要</p><h1 id="随便访问一个java程序" tabindex="-1"><a class="header-anchor" href="#随便访问一个java程序" aria-hidden="true">#</a> 随便访问一个java程序</h1><p>并不是随便一个java程序设置访问路径就可以进行访问，这个java程序必须要是一个<code>Servlet</code>类才可以，否则会报500</p><blockquote><p><strong>类型</strong> 异常报告</p><p><strong>消息</strong> 类com.chu.servletContex.Test不是Servlet</p><p><strong>描述</strong> 服务器遇到一个意外的情况，阻止它完成请求。</p><p><strong>例外情况</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>javax.servlet.ServletException: 类com.chu.servletContex.Test不是Servlet\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></blockquote><h1 id="空文件夹不会自动更新在out目录中" tabindex="-1"><a class="header-anchor" href="#空文件夹不会自动更新在out目录中" aria-hidden="true">#</a> 空文件夹不会自动更新在<code>out</code>目录中</h1>',6),h=(0,n._)("p",null,[(0,n._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210227151712829.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),b=(0,n._)("p",null,[(0,n.Uk)("如果在web目录中创建一个空的文件夹，那么启动服务器时，不会自动在"),(0,n._)("code",null,"out"),(0,n.Uk)("中显示这个文件夹，只有当次文件夹中有文件时，就会自动更新，也就是在"),(0,n._)("code",null,"out"),(0,n.Uk)("中显示这个文件夹")],-1),m=(0,n._)("h1",{id:"js导入问题",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#js导入问题","aria-hidden":"true"},"#"),(0,n.Uk)(" js导入问题")],-1),k=(0,n._)("p",null,[(0,n._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210313134846547",originSrc:"C:%5CUsers%5Cchuchen%5CPictures%5C%E8%A7%86%E9%A2%91%E6%88%AA%E5%9B%BE%5Cjavaweb%5Cweb%5Cimage-20210313134846547.png",data:"aurora"})],-1),x=(0,n._)("p",null,"jQuery等库的导入，必须要在自己的js文件之前进行导入 顺序问题",-1),_=(0,n._)("h1",{id:"tomcat使用war部署和war-exploded的区别",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#tomcat使用war部署和war-exploded的区别","aria-hidden":"true"},"#"),(0,n.Uk)(" Tomcat使用war部署和war exploded的区别")],-1),j=(0,n._)("p",null,[(0,n._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210317193937635.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),y=(0,n._)("blockquote",null,[(0,n._)("p",null,"war模式：将WEB工程以包的形式上传到服务器 ； war exploded模式：将WEB工程以当前文件夹的位置关系上传到服务器；")],-1),v=(0,n._)("p",null,"（1）war模式这种可以称之为是发布模式，看名字也知道，这是先打成war包，再发布；",-1),f=(0,n._)("p",null,"（2）war exploded模式是直接把文件夹、jsp页面 、classes等等移到Tomcat 部署文件夹里面，进行加载部署。因此这种方式支持热部署，一般在开发的时候也是用这种方式。",-1),w=(0,n._)("p",null,"（3）在平时开发的时候，使用热部署的话，应该对Tomcat进行相应的设置，这样的话修改的jsp界面什么的东西才可以及时的显示出来。",-1),z=(0,n._)("p",null,[(0,n._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210317194012102.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),S=(0,n._)("p",null,[(0,n.Uk)("当使用"),(0,n._)("code",null,"war"),(0,n.Uk)("进行部署的时候，不能选择热部署")],-1),U=(0,n._)("p",null,[(0,n._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210317194115783.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),E=(0,n._)("h3",{id:"使用war进行部署",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#使用war进行部署","aria-hidden":"true"},"#"),(0,n.Uk)(" 使用war进行部署")],-1),C=(0,n._)("p",null,[(0,n._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210317194758256.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),P=(0,n._)("p",null,"通过这个就可以看到这个项目被部署的位置",-1),q=(0,n._)("p",null,[(0,n._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210317194839274.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),A=(0,n._)("p",null,[(0,n._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210317194850770.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),B=(0,n._)("p",null,[(0,n.Uk)("使用这种方式进行web应用的部署的时候，项目并没有部署到"),(0,n._)("code",null,"out"),(0,n.Uk)("目录中，如果使用另一种方式的话，那么项目是在当前module的"),(0,n._)("code",null,"out"),(0,n.Uk)("目录中")],-1),T=(0,n._)("h3",{id:"另一种方式",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#另一种方式","aria-hidden":"true"},"#"),(0,n.Uk)(" 另一种方式")],-1),I=(0,n._)("p",null,[(0,n._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210317195225981.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),L=(0,n.uE)('<p>这种方式支持热部署，并且项目被部署到<code>target</code>目录中</p><h1 id="idea-springboot启动报slf4j-failed-to-load-class-org-slf4j-impl-staticloggerbinder" tabindex="-1"><a class="header-anchor" href="#idea-springboot启动报slf4j-failed-to-load-class-org-slf4j-impl-staticloggerbinder" aria-hidden="true">#</a> idea springboot启动报SLF4J:Failed to load class “org.slf4j.impl.StaticLoggerBinder”</h1><hr><p>然后去 http://www.slf4j.org/codes.html#StaticLoggerBinder 地址看了下解决方法，这里我就不详细说了，反正大概意思就加上slf4j-nop.jar slf4j-simple.jar， slf4j-log4j12.jar，slf4j-jdk14.jar或 logback-classic.jar中的其中一个jar包就行（只能是一个，多了就会有冲突）。</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>slf4j-simple<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.7.25<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>compile<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>一定要将<code>scope</code>修改成compile，因为test在main中是没有的，也就是相当于不加</p>',6),F={},W=(0,e(83744).Z)(F,[["render",function(a,s){return(0,n.wg)(),(0,n.iD)(n.HY,null,[t,l,c,o,p,r,i,u,g,d,h,b,m,k,x,_,j,y,v,f,w,z,S,U,E,C,P,q,A,B,T,I,L],64)}]])}}]);
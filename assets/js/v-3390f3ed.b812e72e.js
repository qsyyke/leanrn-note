"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[315],{19328:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-3390f3ed",path:"/spring/springcloud/%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83.html",title:"spring-cloud-config",lang:"en-US",frontmatter:{date:"2022/1/22 19:58",tag:["spring-cloud","spring-cloud-config","config"]},excerpt:"",headers:[{level:2,title:"能够干嘛",slug:"能够干嘛",children:[]},{level:2,title:"搭建",slug:"搭建",children:[{level:3,title:"配置push到gitee",slug:"配置push到gitee",children:[]}]},{level:2,title:"Config客户端之动态刷新",slug:"config客户端之动态刷新",children:[{level:3,title:"一个一个的刷新",slug:"一个一个的刷新",children:[]},{level:3,title:"动态刷新",slug:"动态刷新",children:[]}]},{level:2,title:"Spring Cloud Bus",slug:"spring-cloud-bus",children:[{level:3,title:"通过客户端通知",slug:"通过客户端通知",children:[]},{level:3,title:"通过Config Server通知",slug:"通过config-server通知",children:[]}]},{level:2,title:"配置中心Config Server",slug:"配置中心config-server",children:[]},{level:2,title:"客户端",slug:"客户端",children:[{level:3,title:"依赖",slug:"依赖-1",children:[]},{level:3,title:"配置文件",slug:"配置文件",children:[]},{level:3,title:"controller",slug:"controller",children:[]},{level:3,title:"SpringCloud Bus动态刷新定点通知",slug:"springcloud-bus动态刷新定点通知",children:[]}]}],git:{updatedTime:1654857597e3,contributors:[{name:"qsyyke",email:"2291308094@qq.com",commits:1}]}}},66512:(n,s,a)=>{a.r(s),a.d(s,{default:()=>B});var p=a(66252);const t=(0,p.uE)('<h1 id="spring-cloud-config" tabindex="-1"><a class="header-anchor" href="#spring-cloud-config" aria-hidden="true">#</a> spring-cloud-config</h1><ul><li><p>如果不在spring-cloud中，不使用配置中心的话，会面临什么问题？</p><p>当我们编写大量的服务之后，需要在<code>application.yml</code>中，配置各种配置，但是对于一些服务，他们的配置中，有很多都是相同的，如果在加上集群的话，当哪一天我们需要修改这些服务中的配置项的时候，那么是不是需要一个一个的去修改这些配置？</p><p>如果是这样的话，那真是一件大工程^_^，所以为了解决这个问题，spring就引入了<code>ConfigServer</code>这个配置中心的</p></li></ul><p>Spring Cloud Config为微服务架构中的微服务提供集中化的外部配置支持(也就是<code>github,gitee等</code>)，配置服务器为各个不同微服务应用的所有环境提供了一个中心化的外部配置。</p>',3),e=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20220122200425201.png",data:"aurora"})],-1),c=(0,p.uE)('<p>从上图我们能够知道，<code>spring-cloud-config</code>分为服务端和客户端两部分</p><ul><li><p>服务端也称为<code>分布式配置中心</code>，它是一个独立的微服务应用，用来连接配置服务器并为客户端提供获取配置信息，加密/解密信息等访问接口</p><blockquote><p>配置中心，也就是我们将配置放在github，gitee上后，配置中心通过这些git链接，链接到仓库，从仓库中，读取我们需要的内容，可以是本地的git仓库或者是远程的git仓库</p></blockquote></li><li><p>客户端则是通过指定的配置中心来管理应用资源，以及与业务相关的配置内容，并在启动的时候从配置中心获取和加载配置信息配置服务器默认采用git来存储配置信息，这样就有助于对环境配置进行版本管理，并且可以通过git客户端工具来方便的管理和访问配置内容。</p><blockquote><p>简而言之就是从配置中心中，拿配置</p></blockquote></li></ul><h2 id="能够干嘛" tabindex="-1"><a class="header-anchor" href="#能够干嘛" aria-hidden="true">#</a> 能够干嘛</h2><p>当我们为微服务配置了配置中心之后，那么我们想要修改这些服务相同的配置，都可以直接在github等上进行修改，然后配置中心就会自动获取到最新的配置信息，如果我们使用<code>spring-cloud-bus</code>和<code>rabbitmq</code>之后，还能够使得客户端的配置也做到动态加载的效果，也就是同步git上的配置</p><p>将配置信息以REST接口的形式暴露，我们可以使用postman，curl等进行刷新</p><blockquote><p>修改github等中的配置信息之后，并不是立刻就生效，我们需要发送一个post请求，通知配置中心刷新这些配置信息</p></blockquote><blockquote><p>Spring Cloud Config默认使用Git来存储配置文件(也有其它方式,比如支持SVN和本地文件)，但最推荐的还是Git，而且使用的是http/https访问的形式</p><p>但是推荐使用gitee来存储配置文件，访问快，还有就是我使用github的时候，无论使用https还是git，都无法链接到github，而且国内，访问github可能直接连不上，推荐的还是gitee</p></blockquote><h2 id="搭建" tabindex="-1"><a class="header-anchor" href="#搭建" aria-hidden="true">#</a> 搭建</h2><p>这里先搭建配置中心，这里搭建的是动态刷新的，有一个配置中心(3344端口)，两个客户端（3355,3366），还有一个eureka的注册中心（7001）</p><h3 id="配置push到gitee" tabindex="-1"><a class="header-anchor" href="#配置push到gitee" aria-hidden="true">#</a> 配置push到gitee</h3>',10),o=(0,p.Uk)("将所需要的配置文件，push到gitee，可以看"),l={href:"https://gitee.com/qsyyk_aurora_admin/spring-cloud-config",target:"_blank",rel:"noopener noreferrer"},u=(0,p.Uk)("我的"),i=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20220122201928705.png",data:"aurora"})],-1),r=(0,p.uE)('<p>我们可以放置开发时依赖，生产依赖，测试依赖，这里无论我们放入多少，在配置中心中，也不需要写controller，但是我们可以直接通过<code>localhost:3344/branch-name/config-file-name</code>获取gitee上的内容，比如<code>http://config-3344.com:3344/master/config-dev.yml</code></p><p>一共有三种方式，能够在浏览器中，读取到仓库中配置文件的内容</p><ol><li><p><code>ip:端口/{label}/{application}-{profile}.yml</code></p><blockquote><p>http://config-3344.com:3344/master/config-dev.yml</p></blockquote></li><li><p><code>/{application}-{profile}.yml</code></p><blockquote><p>http://config-3344.com:3344/config-dev.yml</p></blockquote></li><li><p><code>/{application}/{profile}[/{label}]</code></p><blockquote><p>http://config-3344.com:3344/config/dev/master</p></blockquote></li></ol><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>上面的<code>application</code>,<code>label</code>,<code>profile</code>都是配置文件名中的每一部分，所以对仓库中的配置文件命名的时候，一定要按照官网的推荐来，也就是下面这种格式</p><p>application-profile.yml</p><ul><li><p>application对应上图的config</p></li><li><p>profile对应dev,prod,test等</p></li></ul></div><h2 id="config客户端之动态刷新" tabindex="-1"><a class="header-anchor" href="#config客户端之动态刷新" aria-hidden="true">#</a> Config客户端之动态刷新</h2><p>加入现在有配置中心3344，和两个客户端3355,3366，那么当我们修改gitee仓库中的配置项时，因为3344直接链接到gitee，所以直接刷新，就可以得到最新的结果，但是客户端不一样，客户端是从配置中心中去拿配置信息，所以这里有两种，一种是一个一个的刷新，一种是动态刷新</p><h3 id="一个一个的刷新" tabindex="-1"><a class="header-anchor" href="#一个一个的刷新" aria-hidden="true">#</a> 一个一个的刷新</h3><p>一个一个的刷新，就是在配置文件中，暴露所有端口后，在你需要刷新的controller类上，添加<code>@RefreshScope</code>注解，然后发送一个post请求到<code>curl -X POST &quot;http://localhost:3355/actuator/refresh&quot;</code>便可以刷新了，这样刷新之后，你客户端的配置就能够和gitee同步</p><blockquote><p>使用<code>actuator</code>功能，都需要加入<code>spring-boot-starter-actuator</code>依赖</p></blockquote><ul><li><p>暴露所有端口</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment"># 暴露监控端点</span>\n<span class="token key atrule">management</span><span class="token punctuation">:</span>\n  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>\n    <span class="token key atrule">web</span><span class="token punctuation">:</span>\n      <span class="token key atrule">exposure</span><span class="token punctuation">:</span>\n        <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">&quot;*&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><p>注解</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RefreshScope</span>\n<span class="token annotation punctuation">@RestController</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConfigClientController</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;${config.info}&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> configInfo<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/configInfo&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getConfigInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> configInfo<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><blockquote><p>此注解不是在主启动类上加的，是在controller上</p></blockquote></li></ul><div class="custom-container tip"><p class="custom-container-title">如果使用这种方式的话，会存在什么问题</p><p>使用这种方式，如果客户端只有一个还好，但是如果客户端存在多个，集群方式，那发疯了^_^，所以我们需要使用动态刷新</p></div><h3 id="动态刷新" tabindex="-1"><a class="header-anchor" href="#动态刷新" aria-hidden="true">#</a> 动态刷新</h3><p>这里需要使用<code>Spring Cloud Bus</code>配合<code>Spring Cloud Config</code>实现动态刷新，动态刷新就是我们通过消息中间件，通过广播的方式，可以通知所有的客户端进行刷新，也可以单独的指定某一个刷新</p><h2 id="spring-cloud-bus" tabindex="-1"><a class="header-anchor" href="#spring-cloud-bus" aria-hidden="true">#</a> Spring Cloud Bus</h2><p>Spring Cloud Bus能管理和传播分布式系统间的消息，就像一个分布式执行器，可用于广播状态更改、事件推送等，也可以当作微服务间的通信通道。</p><p>一共有两种动态刷新的方式，图下</p><p>在这之前，你应该是知道什么是总线</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>在微服务架构的系统中，通常会使用轻量级的消息代理来构建一个共用的消息主题，并让系统中所有微服务实例都连接上来。由于该主题中产生的消息会被所有实例监听和消费，所以称它为消息总线。在总线上的各个实例，都可以方便地广播一些需要让其他连接在该主题上的实例都知道的消息。</p><p>基本原理 ConfigClient实例都监听MQ中同一个topic(默认是springCloudBus)。当一个服务刷新数据的时候，它会把这个信息放入到Topic中，这样其它监听同一Topic的服务就能得到通知，然后去更新自身的配置。</p></div><h3 id="通过客户端通知" tabindex="-1"><a class="header-anchor" href="#通过客户端通知" aria-hidden="true">#</a> 通过客户端通知</h3>',19),k=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20220122205848483.png",data:"aurora"})],-1),g=(0,p.uE)('<p>上图中的AppA，AppB，AppC都是客户端，这种刷新方式，就是我们发送post请求(<code>/bus/refresh</code>)后，会利用<code>消息总线</code>触发其中一个客户端，从而通过广播的方式通知其他的客户端刷新</p><ul><li><p>这种方式好么？</p><p>这种方式不好，因为在微服务中，每一个服务，他们的功能都是单一的，比如上面的<code>Config Server</code>配置中心，其功能就是链接到gitee，github，从中获取配置信息，AppA等客户端的功能，便是服务的提供者(比如)，这些服务提供者，在controller中，就需要配置中心提供的配置信息</p><p>但是如果我们使用此方式的话，那么AppA就充当了两个角色，Config Server(动态刷新，都是通过Config Server去通知的)和服务提供者身份，这样的设计是不好的</p></li></ul><p>缺点：</p><ul><li>打破了微服务的职责单一性，因为微服务本身是业务模块，它本不应该承担配置刷新的职责。</li><li>破坏了微服务各节点的对等性。</li><li>有一定的局限性。例如，微服务在迁移时，它的网络地址常常会发生变化，此时如果想要做到自动刷新，那就会增加更多的修改</li></ul><h3 id="通过config-server通知" tabindex="-1"><a class="header-anchor" href="#通过config-server通知" aria-hidden="true">#</a> 通过Config Server通知</h3>',5),b=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20220122210145987.png",data:"aurora"})],-1),d=(0,p._)("p",null,"这种方式就很nice了，它的思想就是：利用消息总线触发一个服务端ConfigServer的/bus/refresh端点，而刷新所有客户端的配置",-1),m=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20220122223459366.png",data:"aurora"})],-1),h=(0,p.uE)('<p>下面就是搭建一个通过<code>Config Server</code>的过程</p><h2 id="配置中心config-server" tabindex="-1"><a class="header-anchor" href="#配置中心config-server" aria-hidden="true">#</a> 配置中心<strong>Config Server</strong></h2><p>记住，配置中心不需要写controller，只需要有一个主启动类就行</p><h4 id="依赖" tabindex="-1"><a class="header-anchor" href="#依赖" aria-hidden="true">#</a> 依赖</h4><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-bus-amqp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-config-server<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-netflix-eureka-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-devtools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><blockquote><p>因为需要刷新，所以一定要加入<code>spring-boot-starter-actuator</code>依赖</p></blockquote><h4 id="配置中心配置文件" tabindex="-1"><a class="header-anchor" href="#配置中心配置文件" aria-hidden="true">#</a> 配置中心配置文件</h4><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>\n  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">3344</span>\n\n<span class="token key atrule">spring</span><span class="token punctuation">:</span>\n  <span class="token key atrule">application</span><span class="token punctuation">:</span>\n    <span class="token key atrule">name</span><span class="token punctuation">:</span>  cloud<span class="token punctuation">-</span>config<span class="token punctuation">-</span>center <span class="token comment">#注册进Eureka服务器的微服务名</span>\n  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>\n    <span class="token key atrule">config</span><span class="token punctuation">:</span>\n      <span class="token key atrule">server</span><span class="token punctuation">:</span>\n        <span class="token key atrule">git</span><span class="token punctuation">:</span>\n          <span class="token key atrule">uri</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//gitee.com/qsyyk_aurora_admin/spring<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>config.git\n          <span class="token comment">####搜索目录</span>\n          <span class="token key atrule">search-paths</span><span class="token punctuation">:</span>\n            <span class="token punctuation">-</span> spring<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>config\n          <span class="token key atrule">force-pull</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n          <span class="token key atrule">username</span><span class="token punctuation">:</span> 你的gitee用户名\n          <span class="token key atrule">password</span><span class="token punctuation">:</span> 密码\n      <span class="token comment">####读取分支</span>\n      <span class="token key atrule">label</span><span class="token punctuation">:</span> master\n      \n  <span class="token comment">#rabbitmq相关配置 15672是Web管理界面的端口；5672是MQ访问的端口</span>\n  <span class="token key atrule">rabbitmq</span><span class="token punctuation">:</span>\n    <span class="token key atrule">host</span><span class="token punctuation">:</span> 192.168.86.142\n    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">5672</span>\n    <span class="token key atrule">username</span><span class="token punctuation">:</span> admin\n    <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token number">123456</span>\n<span class="token comment"># rabbitmq相关配置，暴露bus刷新配置的端点</span>\n<span class="token key atrule">management</span><span class="token punctuation">:</span>\n  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span> <span class="token comment"># 暴露bus刷新配置的端点</span>\n    <span class="token key atrule">web</span><span class="token punctuation">:</span>\n      <span class="token key atrule">exposure</span><span class="token punctuation">:</span>\n        <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">&quot;bus-refresh&quot;</span>\n<span class="token comment">#服务注册到eureka地址</span>\n<span class="token key atrule">eureka</span><span class="token punctuation">:</span>\n  <span class="token key atrule">client</span><span class="token punctuation">:</span>\n    <span class="token key atrule">service-url</span><span class="token punctuation">:</span>\n      <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>7001/eureka\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><p>这里可以去官网看看，如果使用github，还可以在配置里面，配置ssh，这样应该能够链接上github，但是还是推荐gitee，官网中，还有很多的配置项，比如使用本地配置等等</p><ul><li><code>search-paths</code>这里推荐使用gitee中，仓库的名字</li></ul><p>需要配置rabbitmq，因为最终通过<code>Config Server</code>去通知，其实就是rabbitmq的交换机类型是<code>topic</code>，那么和此交换机绑定的队列(这里可以指客户端)，就能够收到<code>Config Server</code>发送的消息，从而达到刷新的功能，记住，这里的交换机类型不是<code>扇出</code>类型，不应该所有的客户端都收到，各司其职</p><p>因为我们需要通过<code>actuator</code>去刷新，也就是发送post请求(<code>bus/refresh</code>)，所以我们需要暴露一个端口，这里可以是所有端口(<code>*</code>)，也可以指定特定的</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">management</span><span class="token punctuation">:</span>\n  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span> <span class="token comment"># 暴露bus刷新配置的端点</span>\n    <span class="token key atrule">web</span><span class="token punctuation">:</span>\n      <span class="token key atrule">exposure</span><span class="token punctuation">:</span>\n        <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">&quot;bus-refresh&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>现在启动注册中心7001，还有3344配置中心，然后直接在浏览器中，输入测试一下(<code>配置中心不需要写controller</code>)</p>',14),f=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20220122224800166.png",data:"aurora"})],-1),y=(0,p.uE)('<h2 id="客户端" tabindex="-1"><a class="header-anchor" href="#客户端" aria-hidden="true">#</a> 客户端</h2><p>这里搭建两个，集群模式3355,3366</p><h3 id="依赖-1" tabindex="-1"><a class="header-anchor" href="#依赖-1" aria-hidden="true">#</a> 依赖</h3><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!--添加消息总线RabbitMQ支持--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-bus-amqp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-config<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-netflix-eureka-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-devtools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h3 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h3><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>\n  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">3355</span>\n\n<span class="token key atrule">spring</span><span class="token punctuation">:</span>\n  <span class="token key atrule">application</span><span class="token punctuation">:</span>\n    <span class="token key atrule">name</span><span class="token punctuation">:</span> config<span class="token punctuation">-</span>client\n  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>\n    <span class="token comment">#Config客户端配置</span>\n    <span class="token key atrule">config</span><span class="token punctuation">:</span>\n      <span class="token key atrule">label</span><span class="token punctuation">:</span> master <span class="token comment">#分支名称</span>\n      <span class="token key atrule">name</span><span class="token punctuation">:</span> config <span class="token comment">#配置文件名称</span>\n      <span class="token key atrule">profile</span><span class="token punctuation">:</span> dev <span class="token comment">#读取后缀名称   上述3个综合：master分支上config-dev.yml的配置文件被读取http://config-3344.com:3344/master/config-dev.yml</span>\n      <span class="token key atrule">uri</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span><span class="token number">3344</span> <span class="token comment">#配置中心地址k</span>\n  <span class="token comment">#rabbitmq相关配置 15672是Web管理界面的端口；5672是MQ访问的端口</span>\n  <span class="token key atrule">rabbitmq</span><span class="token punctuation">:</span>\n  \t<span class="token comment"># 测试发现，绑定rabbitmq的时候，host前不能有https,http</span>\n    <span class="token key atrule">host</span><span class="token punctuation">:</span> 192.168.86.142\n    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">5672</span>\n    <span class="token key atrule">username</span><span class="token punctuation">:</span> admin\n    <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token number">123456</span>\n<span class="token comment">#服务注册到eureka地址</span>\n<span class="token key atrule">eureka</span><span class="token punctuation">:</span>\n  <span class="token key atrule">client</span><span class="token punctuation">:</span>\n    <span class="token key atrule">service-url</span><span class="token punctuation">:</span>\n      <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>7001/eureka\n<span class="token comment"># 暴露监控端点</span>\n<span class="token key atrule">management</span><span class="token punctuation">:</span>\n  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>\n    <span class="token key atrule">web</span><span class="token punctuation">:</span>\n      <span class="token key atrule">exposure</span><span class="token punctuation">:</span>\n        <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">&quot;*&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div>',6),v=(0,p._)("p",null,[(0,p.Uk)("这里的配置文件名就不在是"),(0,p._)("code",null,"application.yml"),(0,p.Uk)("了，而是"),(0,p._)("code",null,"bootstrap.yml")],-1),I=(0,p.Uk)("这里引用一篇CSDN的"),q={href:"https://blog.csdn.net/qq_39132177/article/details/109603898",target:"_blank",rel:"noopener noreferrer"},x=(0,p.Uk)("文章"),C=(0,p.Uk)("，"),S={href:"https://blog.csdn.net/wenyiCodeDog/article/details/93500604",target:"_blank",rel:"noopener noreferrer"},w=(0,p.Uk)("还有"),_=(0,p.uE)('<p><code>bootstrap.yml</code>是定义系统级别参数配置; 应用于：</p><ol><li>Spring Cloud Config 配置中心配置，加载外部配置中心的配置信息;</li><li>某些固定不需要覆盖的属性;</li><li>某些加密/解密场景;</li></ol><p><code>application.yml</code>是定义应用级别参数配置；应用于：SpringBoot项目配置。</p><p>他们的加载顺序是<code>bootstrap.yml &gt; application.yml</code></p><div class="custom-container tip"><p class="custom-container-title">为什么一定要bootstrap.yml</p><p>通过查看其他的博客，我给出的结论是，bootstrap.yml是先application.yml文件加载的，但是在启动config server client的时候，我们需要将此客户端和配置中心进行绑定，从配置中心中获取到配置文件的信息，这些配置文件的信息，会放在<code>bootstrap.yml</code>中</p></div><p>记得要暴露所有的端口，也可以只暴露我们需要使用配置信息的那些url</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">config</span><span class="token punctuation">:</span>\n\t<span class="token key atrule">label</span><span class="token punctuation">:</span> master <span class="token comment">#分支名称</span>\n\t<span class="token key atrule">name</span><span class="token punctuation">:</span> config <span class="token comment">#配置文件名称</span>\n\t<span class="token key atrule">profile</span><span class="token punctuation">:</span> dev <span class="token comment">#读取后缀名称   上述3个综合：master分支上config-dev.yml的配置文件被读取http://config-3344.com:3344/master/config-dev.yml</span>\n\t<span class="token key atrule">uri</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span><span class="token number">3344</span> <span class="token comment">#配置中心地址k</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>客户端和服务端的绑定是通过url进行绑定的，这里的name就对应仓库文件中的application项，3366也是一样的操作</p><h3 id="controller" tabindex="-1"><a class="header-anchor" href="#controller" aria-hidden="true">#</a> controller</h3><p>演示一个</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RefreshScope</span>\n<span class="token annotation punctuation">@RestController</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConfigClientController</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;${config.info}&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> configInfo<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/configInfo&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getConfigInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> configInfo<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><blockquote><p>如果还有其他的controller，但是他们没有使用到配置信息，那么就不用加上<code>@RefreshScope</code>注解</p></blockquote><blockquote><p>这里的<code>${config.info}</code>，config.info配置，我们并没有在<code>bootstrap.yml</code>中进行配置，这是在仓库中的配置文件的内容</p></blockquote>',13),z=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20220122230942605.png",data:"aurora"})],-1),j=(0,p.uE)('<p>启动7001,3344,3355,3366，启动成功之后，我们修改仓库中的内容，然后现在3344是能够看到修改的，但是3355,3366两个客户端，需要我们发送post请求去触发</p><blockquote><p>curl -X POST &quot;http://localhost:3344/actuator/bus-refresh&quot;</p><p>这里是发送到<code>Config Server</code></p><p>发送请求的过程，可能会出现链接失败情况，多试几次就行</p></blockquote><p>那么现在访问3355,3366，他们的配置信息已经更新了</p><h3 id="springcloud-bus动态刷新定点通知" tabindex="-1"><a class="header-anchor" href="#springcloud-bus动态刷新定点通知" aria-hidden="true">#</a> SpringCloud Bus动态刷新定点通知</h3><p>指定具体某一个实例生效而不是全部</p><p>上面那种方式是刷新全部</p><blockquote><p>公式：</p><p>http://localhost:配置中心的端口号/actuator/bus-refresh/{destination}</p><p>比如：curl -X POST &quot;http://localhost:3344/actuator/bus-refresh/config-client:3355&quot;</p></blockquote>',7),E={},B=(0,a(83744).Z)(E,[["render",function(n,s){const a=(0,p.up)("ExternalLinkIcon");return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,e,c,(0,p._)("p",null,[o,(0,p._)("a",l,[u,(0,p.Wm)(a)])]),i,r,k,g,b,d,m,h,f,y,(0,p._)("blockquote",null,[v,(0,p._)("p",null,[I,(0,p._)("a",q,[x,(0,p.Wm)(a)]),C,(0,p._)("a",S,[w,(0,p.Wm)(a)])])]),_,z,j],64)}]])}}]);
"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[2053],{10384:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-7392c972",path:"/spring/springboot/",title:"spring boot介绍",lang:"en-US",frontmatter:{tag:["spring boot","spring","介绍","spring解析","spring分析"]},excerpt:"",headers:[{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"更改版本号",slug:"更改版本号",children:[]},{level:2,title:"作用",slug:"作用",children:[]},{level:2,title:"命名格式",slug:"命名格式",children:[]},{level:2,title:"修改包结构",slug:"修改包结构",children:[]},{level:2,title:"组件添加",slug:"组件添加",children:[{level:3,title:"proxyBeanMethods属性",slug:"proxybeanmethods属性",children:[]},{level:3,title:"Full和Lite",slug:"full和lite",children:[]}]},{level:2,title:"@Import",slug:"import",children:[]},{level:2,title:"@Conditional条件装配",slug:"conditional条件装配",children:[]},{level:2,title:"@ImportResource",slug:"importresource",children:[]},{level:2,title:"配置绑定",slug:"配置绑定",children:[]},{level:2,title:"@EnableAutoConfiguration分析",slug:"enableautoconfiguration分析",children:[]},{level:2,title:"逐步分析",slug:"逐步分析",children:[{level:3,title:"例如缓存",slug:"例如缓存",children:[]},{level:3,title:"web",slug:"web",children:[]}]},{level:2,title:"总结",slug:"总结",children:[]}],git:{updatedTime:1654857597e3,contributors:[{name:"qsyyke",email:"2291308094@qq.com",commits:1}]}}},97466:(n,s,a)=>{a.r(s),a.d(s,{default:()=>J});var p=a(66252);const t=(0,p._)("h1",{id:"spring-boot介绍",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#spring-boot介绍","aria-hidden":"true"},"#"),(0,p.Uk)(" spring boot介绍")],-1),o=(0,p._)("p",null,"springboot已经集成了servlet，tomcat，还有spring，所以在使用springboot创建应用之后，我们不需要额外的为这个module设置tomcat服务器，更改端口号，也不需要像spring那样写很多的配置项",-1),e=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210702090435379.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),c=(0,p.uE)('<h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><ol><li>添加maven依赖</li><li>创建主程序</li><li>编写Controller</li></ol><p>maven依赖</p><p>除了添加springboot依赖外，我们还需要加入一个特殊的依赖，这个特殊的依赖，提供了特殊的启动类，是必须的</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.4.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>这个写在<code>&lt;project&gt;</code>标签中，就可以</p><p>还需要一个依赖，这个依赖中，就还有了很多需要使用的依赖，比如servlet，spring等等，不用我们再次添加spring等依赖，已经集成了，我们仅仅添加这个就可以</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>最终<code>pom.xml</code>文件</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;\n         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;vin.cco&lt;/groupId&gt;\n    &lt;artifactId&gt;001springboot&lt;/artifactId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n\n    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;2.4.6&lt;/version&gt;\n    &lt;/parent&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n    &lt;/dependencies&gt;\n\n&lt;/project&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>编写主启动程序</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainApplication</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> main <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">MainApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>这个类就是启动spring应用的入口程序，也就是启动服务器的程序，需要加上<code>@SpringBootApplication</code>，注解，表明这是一个springboot的启动类程序</p><p><code>SpringApplication.run(MainApplication.class,args)</code>调用此方法，启动程序</p>',14),u=(0,p._)("blockquote",null,[(0,p._)("p",null,"因为在启动的时候，此类会使用类加载器扫描所有包中的类，所以需要保证，此启动类文件，需要在所有包的上面，也就是目录"),(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210608131048862.png?x-oss-process=style/pictureProcess1",data:"aurora"})]),(0,p._)("p",null,"否则的话，就会报错")],-1),l=(0,p.uE)('<p>Controller控制类</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyController</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">doHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;hello springboot&quot;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>因为一般，我们返回值为String，都是写在浏览器上，并不是一个视图的名字，所以会直接在类上添加<code>@ResponseBody</code>注解，就表明，这个类中的所有方法，都是写在浏览器上</p><p>springboot又提供了一个注解<code>@RestController</code>，这个注解中，包括了<code>@Controller,@ResponseBody</code>注解，所以我们现在只需要写<code>@RestController</code>就可以了，不用再写两个</p><p>springboot的部署方法，可以打包成war的形式，然后发布，也可以打包成jar包形式，因为jar包中，就有了tomcat服务器类，还有servlet等等所需要的jar文件，可以直接通过cmd命令运行jar文件</p><h1 id="依赖管理" tabindex="-1"><a class="header-anchor" href="#依赖管理" aria-hidden="true">#</a> 依赖管理</h1><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.4.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>这是springboot提供的一个依赖管理，只要我们的pom文件，继承这个父依赖，就可以使用这个pom文件中的特性，这些特性包括下面这些</p><p>比如默认规定了，编译项目使用的jdk版本和编码方式等</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource.delimiter</span><span class="token punctuation">&gt;</span></span>@<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource.delimiter</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>${java.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>${java.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.reporting.outputEncoding</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.reporting.outputEncoding</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>在这个pom文件中，其还有一个父pom文件</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.4.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>在这个<code>spring-boot-dependencies</code>依赖中，定义了很多需要使用到的依赖的版本号</p>',13),i=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210612194931430.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),r=(0,p._)("p",null,"还有很多的依赖，都已经被引入进来了",-1),k=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210612195010965.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),g=(0,p.uE)('<p>如果我们想要使用这些已经定义好的依赖的时候，就只需要在我们自己的pom文件中，直接使用就可以，版本号不用写，因为已经定义好了，但是可以使用我们自己的版本号</p><p>像这样就可以了，不用添加版本号</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="更改版本号" tabindex="-1"><a class="header-anchor" href="#更改版本号" aria-hidden="true">#</a> 更改版本号</h2><p>在当前项目中，定义一个属性，在这个标签中，进行版本号的修改，修改之后，maven就会使用就近原则，使用我们定义的版本号</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mysql.version</span><span class="token punctuation">&gt;</span></span>5.1.49<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mysql.version</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>确保<code>&lt;mysql.version&gt;</code>标签和父依赖中，定义的一样</p><p>刷新pom文件，就已经被更改了</p><h2 id="作用" tabindex="-1"><a class="header-anchor" href="#作用" aria-hidden="true">#</a> 作用</h2><blockquote><p>1.引入父pom里面的依赖时无须指定版本； 2.java版本，项目编码格式，资源引用描述符已经设置好 3.插件管理 a.封装了配置文件的过滤规则 b.封装了打可执行jar、war的配置 c.封装了插件的版本信息 d.封装了日期格式 e.引入了eclipse和IDEA相关依赖简化了配置，达到开箱即用等</p></blockquote><h1 id="starters场景启动器" tabindex="-1"><a class="header-anchor" href="#starters场景启动器" aria-hidden="true">#</a> <code>Starters</code>场景启动器</h1><p>什么是<code>Starters</code>？</p><p>Starters中集成了我们使用这个场景的很多的依赖，只要我们导入这个starters就可以直接使用这个场景进行开发</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>上面的这个就是开发web应用所需的场景依赖，在这个starters中，定义了很多需要的依赖</p><h2 id="命名格式" tabindex="-1"><a class="header-anchor" href="#命名格式" aria-hidden="true">#</a> 命名格式</h2><p>这个starters我们可以自己定义，但是需要和官方的优点区别</p><ul><li>官方命名格式</li></ul><p>官方使用的命名格式为<code>spring-boot-starter-*</code>，其中的<code>*</code>表示所有的场景名，如<code>spring-boot-starter-web</code>用于web开发的场景，tomcat的场景<code>spring-boot-starter-tomcat</code></p><ul><li>自己的starters</li></ul><p><code>*-spring-boot-starter</code>，其中<code>*</code>表示我们的场景名</p><p>在spring中，定义了很多我们用于开发所需要的场景</p>',22),b=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210612202324133.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),m=(0,p._)("p",null,"比如我们要开发一个aop，那么我们就使用提供的这个startters就可以了，这样不用再去导入那些繁琐的依赖",-1),d=(0,p._)("h1",{id:"自动配置",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#自动配置","aria-hidden":"true"},"#"),(0,p.Uk)(" 自动配置")],-1),f=(0,p._)("ul",null,[(0,p._)("li",null,[(0,p._)("p",null,"自动配置tomcat"),(0,p._)("p",null,[(0,p.Uk)("这个tomcat已经被spring配置好了，因为我们在"),(0,p._)("code",null,"spring-boot-starter-web"),(0,p.Uk)("场景中，使用了tomcat场景"),(0,p._)("code",null,"spring-boot-starter-tomcat"),(0,p.Uk)("，所以就可以直接使用")]),(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210702090633221.png?x-oss-process=style/pictureProcess1",data:"aurora"})])]),(0,p._)("li",null,[(0,p._)("p",null,"自动配好springmvc组件"),(0,p._)("p",null,[(0,p._)("code",null,"spring-webmvc"),(0,p.Uk)("，因为springboot也就是一个web应用，所以就需要使用springmvc，在场景中，已经引入，就不用我们自己再次引入")])]),(0,p._)("li",null,[(0,p._)("p",null,"自动配置常见的设置"),(0,p._)("p",null,[(0,p.Uk)("因为在创建一个springweb项目的时候，我们需要在"),(0,p._)("code",null,"web.xml"),(0,p.Uk)("文件中，设置很多个东西，就比如引入"),(0,p._)("code",null,"dispatcherServlet"),(0,p.Uk)("，还有设置默认的字符集等等，但是在这里，这些都已经被设置好了，不用我们再次设置")]),(0,p._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,p._)("pre",{class:"language-java"},[(0,p._)("code",null,[(0,p._)("span",{class:"token class-name"},"ConfigurableApplicationContext"),(0,p.Uk)(" run "),(0,p._)("span",{class:"token operator"},"="),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},"SpringApplication"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"run"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token class-name"},"MainApplication"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token keyword"},"class"),(0,p._)("span",{class:"token punctuation"},","),(0,p.Uk)(" args"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n"),(0,p._)("span",{class:"token class-name"},"String"),(0,p._)("span",{class:"token punctuation"},"["),(0,p._)("span",{class:"token punctuation"},"]"),(0,p.Uk)(" names "),(0,p._)("span",{class:"token operator"},"="),(0,p.Uk)(" run"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"getBeanDefinitionNames"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n"),(0,p._)("span",{class:"token keyword"},"for"),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token class-name"},"String"),(0,p.Uk)(" name "),(0,p._)("span",{class:"token operator"},":"),(0,p.Uk)(" names"),(0,p._)("span",{class:"token punctuation"},")"),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"{"),(0,p.Uk)("\n    "),(0,p._)("span",{class:"token class-name"},"System"),(0,p._)("span",{class:"token punctuation"},"."),(0,p.Uk)("out"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"println"),(0,p._)("span",{class:"token punctuation"},"("),(0,p.Uk)("name"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n"),(0,p._)("span",{class:"token punctuation"},"}"),(0,p.Uk)("\n")])]),(0,p._)("div",{class:"line-numbers"},[(0,p._)("span",{class:"line-number"},"1"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"2"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"3"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"4"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"5"),(0,p._)("br")])]),(0,p._)("p",null,[(0,p._)("code",null,"SpringApplication.run(MainApplication.class, args)"),(0,p.Uk)("返回一个ioc容器，我们可以通过返回对象，查看我们当前容器中，有哪些组件")]),(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210612204454794.png?x-oss-process=style/pictureProcess1",data:"aurora"})])]),(0,p._)("li",null,[(0,p._)("p",null,"默认的包结构"),(0,p._)("p",null,"在创建springmvc项目中，我们会使用组件扫描器，扫描我们添加注解的类，从而能够使web资源被访问到，但是在这里，就已经设置了默认的包结构"),(0,p._)("p",null,"在主启动类所在的包中，及其主启动类所在包的所有子包中的类，都能被扫描到，这个就是默认的包结构"),(0,p._)("p",null,"如果我们将主启动类，移动到main包中，那么在web包中，定义一个Controller，那么访问的时候，就会出现404，因为这个web包，没有被扫描到"),(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210612204802639.png?x-oss-process=style/pictureProcess1",data:"aurora"})]),(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210612205234615.png?x-oss-process=style/pictureProcess1",data:"aurora"})])])],-1),v=(0,p.uE)('<h2 id="修改包结构" tabindex="-1"><a class="header-anchor" href="#修改包结构" aria-hidden="true">#</a> 修改包结构</h2><ul><li><p>修改包结构</p><p>在主启动类中的注解<code>@SpringBootApplication</code>里面有一个属性，可以添加需要扫描到的包，这样，如果添加的这个包，没有在默认包结构的范围内，那么也会被扫描到</p><p><code>@SpringBootApplication(scanBasePackages = &quot;vin&quot;)</code></p><p>还可以通过注解<code>@ComponentScan</code>进行设置，但是会出现冲突的问题，所以使用注解，需要注意</p></li></ul><p><code>@SpringBootApplication</code>注解等于下面几个注解，所以可以使用下面三个注解，代替<code>@SpringBootApplication</code>注解，所以，如果存在<code>@SpringBootApplication</code>注解，又添加<code>@ComponentScan</code>时，就会出现问题</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootConfiguration</span>\n<span class="token annotation punctuation">@EnableAutoConfiguration</span>\n<span class="token annotation punctuation">@ComponentScan</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>还可以这样，更改默认的包结构</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootConfiguration</span>\n<span class="token annotation punctuation">@EnableAutoConfiguration</span>\n<span class="token annotation punctuation">@ComponentScan</span><span class="token punctuation">(</span><span class="token string">&quot;vin&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>​</p>',7),h=(0,p._)("ul",null,[(0,p._)("li",null,[(0,p._)("p",null,"各种配置都拥有默认值"),(0,p._)("p",null,[(0,p.Uk)("比如在配置文件中，存在一个，默认上传文件的最大长度，这个配置最终会映射到"),(0,p._)("code",null,"MultipartAutoConfiguration"),(0,p.Uk)("类中，所以，各种配置都拥有默认的值，这些最终都是映射到某个类中，可以在"),(0,p._)("code",null,"application.properties"),(0,p.Uk)("中，进行更改")])]),(0,p._)("li",null,[(0,p._)("p",null,"按需加载所有配置项"),(0,p._)("p",null,"springboot启动时按需进行加载启动的，也就是，比如我们开发一个web应用，我们引入了web场景，那么就只会加载构建web应用所需要的依赖"),(0,p._)("p",null,[(0,p.Uk)("所有自动加载配置功能都是在"),(0,p._)("code",null,"spring-boot-starter\\<artifactId>spring-boot-autoconfigure</artifactId>"),(0,p.Uk)("中，可以看到")]),(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210612211806255.png?x-oss-process=style/pictureProcess1",data:"aurora"})]),(0,p._)("p",null,"在这给自动加载类中，我们可以看到所有常见的配置"),(0,p._)("p",null,[(0,p.Uk)("比如这个"),(0,p._)("code",null,"aop"),(0,p.Uk)("，需要引入"),(0,p._)("code",null,"spring-boot-starter-aop"),(0,p.Uk)("场景，其才会自动加载，否则不会")]),(0,p._)("p",null,[(0,p.Uk)("因为没有引入aop场景，如果点进去，会出现爆红或者白色("),(0,p._)("code",null,"取决于你的idea主题样式"),(0,p.Uk)(")")]),(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210612212059129.png?x-oss-process=style/pictureProcess1",data:"aurora"})]),(0,p._)("p",null,[(0,p.Uk)("当引入"),(0,p._)("code",null,"aop"),(0,p.Uk)("场景时，会发现颜色会改变，因为这个aop引入之后，已经加载了")]),(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210612212251206.png?x-oss-process=style/pictureProcess1",data:"aurora"})])])],-1),C=(0,p.uE)('<h1 id="springboot注解" tabindex="-1"><a class="header-anchor" href="#springboot注解" aria-hidden="true">#</a> springboot注解</h1><h2 id="组件添加" tabindex="-1"><a class="header-anchor" href="#组件添加" aria-hidden="true">#</a> 组件添加</h2><p>在springmvc中，如果我们想要为某个类，注册对象的话，那么我们可以在<code>&lt;bean&gt;</code>标签中，进行对象的创建，但是在springboot中，可以使用注解进行对象的创建</p><p>使用步骤</p><ol><li>创建一个配置类<code>Config</code></li><li>在此类上，添加<code>@Configuration</code>注解，就表示这个类，是一个spring配置类，相当于spring的xml配置文件</li><li>定义方法，方法上添加<code>@Bean</code>注解，方法名就是对象名，返回值类型，就是对象类型</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Bean</span>\n    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">user01</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;chuchen&quot;</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Bean</span>\n    <span class="token keyword">public</span> <span class="token class-name">Pet</span> <span class="token function">pet01</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Pet</span><span class="token punctuation">(</span><span class="token string">&quot;hachi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>现在我们就创建了<code>User</code>和<code>Pet</code>两个对象</p><p>这两个对象在启动的时候，会被放入容器中，供我们使用，并且<code>Config</code>也是一个对象，使用了<code>@Configuration</code>注解，最终也会被放入容器中</p><p><code>Config config = run.getBean(&quot;config&quot;, Config.class)</code>可以得到这个Config配置对象，通过打印可以查看这个对象的结果</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>config<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">vin<span class="token punctuation">.</span>cco<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span>Config</span>$$<span class="token class-name">EnhancerBySpringCGLIB</span>$$dfc1820a<span class="token annotation punctuation">@7c9b78e3</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>可以看到这个对象是一个spring增强的代理对象</p><h3 id="proxybeanmethods属性" tabindex="-1"><a class="header-anchor" href="#proxybeanmethods属性" aria-hidden="true">#</a> <code>proxyBeanMethods</code>属性</h3><p>这个属性有一个默认的值true，保证每个@Bean方法被调用多少次返回的组件都是单实例的，也就是如果这个值为true，那么无论是通过从容器中获取此对象，还是通过<code>run.getBean(&quot;config&quot;, Config.class).user01()</code>获取的对象，都是单实例的，也就是同一个对象，他们的哈希值是同一个</p><p>反之为false的时候，因为在容器中的对象永远都是同一个，所以通过获取的对象是同一个，因为这个对象在启动的时候，是被放入ServletContext中的</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">User</span> user01 <span class="token operator">=</span> run<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">&quot;user01&quot;</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">User</span> user02 <span class="token operator">=</span> run<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">&quot;user01&quot;</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>但是通过<code>run.getBean(&quot;config&quot;, Config.class).user01()</code>获得的对象都是生成的，不是同一个</p><h3 id="full和lite" tabindex="-1"><a class="header-anchor" href="#full和lite" aria-hidden="true">#</a> Full和Lite</h3><p>Full就是<code>@Configuration(proxyBeanMethods = true)</code></p><blockquote><p>如果为true的时候，假如通过<code>run.getBean(&quot;config&quot;, Config.class).user01()</code>获取此对象，会先在容器中寻找是否存在<code>User</code>对象，如果存在，那么就使用容器中的应用，如果在容器中，不存在此对象，那么就创建此对象，这种方式会是程序加载的时候，变缓慢，因为存在判断操作</p></blockquote><p>Lite就是<code>@Configuration(proxyBeanMethods = false)</code></p><blockquote><p>如果为false的时候，尽管容器中存在此对象，也不会去容器中寻找，会创建新的对象，所以加载时候，就会比较快，比起上面那种情况，所以在构建应用的时候，推荐使用false情况</p></blockquote><blockquote><p>除了可以在方法上写<code>@Bean</code>注解之外，我们还可以写<code>@Bean、@Component、@Controller、@Service、@Repository</code>等注解，其作用就是以前那些</p><p><code>@ComponentScan</code>包扫描注解</p></blockquote><h2 id="import" tabindex="-1"><a class="header-anchor" href="#import" aria-hidden="true">#</a> <code>@Import</code></h2><p>此注解的作用，就是将对象添加到容器中，可能某些对象，并没有使用注解添加到组件，可以使用此注解将其添加到容器中，此注解放在类上面，放在哪个类上都可以（包结构下），但是推荐将其放在配置类上</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Import</span> <span class="token punctuation">{</span>\n    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>参数为Class数组，所以只需要将需要添加的类的Class传入就可以将其添加到容器中</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Animate</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>容器中导入组件命名规则</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span>\n<span class="token class-name"><span class="token namespace">vin<span class="token punctuation">.</span>cco<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span>Animate</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="conditional条件装配" tabindex="-1"><a class="header-anchor" href="#conditional条件装配" aria-hidden="true">#</a> @Conditional条件装配</h2><p>在某些情况下，我们需要容器中，没有或者有或者其他的条件时，自动装配容器中的对象，那么就额可以使用这个注解进行装配</p><p>继承结构</p>',32),w=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210613103237642.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),y=(0,p.uE)('<ul><li>使用案例</li></ul><p>比如，在容器中，没有含有<code>pet01</code>bean时，就创建<code>user01</code>bean，将其添加到容器中</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;pet01&quot;</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@Bean</span>\n    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">user01</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;chuchen&quot;</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">//@Bean</span>\n    <span class="token keyword">public</span> <span class="token class-name">Pet</span> <span class="token function">pet01</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Pet</span><span class="token punctuation">(</span><span class="token string">&quot;hachi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//方法可以判断容器中，是否含有某个beaN</span>\n<span class="token keyword">boolean</span> pet01 <span class="token operator">=</span> run<span class="token punctuation">.</span><span class="token function">containsBean</span><span class="token punctuation">(</span><span class="token string">&quot;pet01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">boolean</span> user01 <span class="token operator">=</span> run<span class="token punctuation">.</span><span class="token function">containsBean</span><span class="token punctuation">(</span><span class="token string">&quot;user01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>这个注解，可以用在方法上面，用在方法上面，那么条件为真，那么这个方法就会执行，反之</p><p>如果将此注解放在类上，那么只有条件满足时，这个类中的配置才会生效</p><blockquote><p>但是测试发现，如果用在类上，那么<code>@ConditionalOnMissingBean(name = &quot;pet01&quot;)</code>这种情况是满足的，并且使用了<code>@Bean</code>，反而在pet01中，有<code>@Bean</code>是不满足的<code>@ConditionalOnBean(name = &quot;pet01&quot;)</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;pet01&quot;</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Animate</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Configuration</span><span class="token punctuation">(</span>proxyBeanMethods <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Bean</span>\n    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">user01</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;chuchen&quot;</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Bean</span>\n    <span class="token keyword">public</span> <span class="token class-name">Pet</span> <span class="token function">pet01</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;pet01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Pet</span><span class="token punctuation">(</span><span class="token string">&quot;hachi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></blockquote><h2 id="importresource" tabindex="-1"><a class="header-anchor" href="#importresource" aria-hidden="true">#</a> @ImportResource</h2><p>如果我们现在创建一个springxml的配置文件，并在其中，添加如下内容</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>petxml<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vin.cco.domain.Pet<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>petName<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>petnamexml<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>那么在容器中，不会存在此<code>petxml</code>对象，因为默认springboot是不认这个配置文件的，必须<code>在@Configuration</code>的配置类上面加上<code>@ImportResource</code>注解，将此springxml文件引入，才可以生效</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@ImportResource</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:springboot.xml&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p><code>必须要在配置类上面才会生效，如果在其他不适配置类上面添加@ImportResource注解，不会生效</code></p><p>只有在容器中的组件，才能使用springboot提供的功能</p></blockquote><h2 id="配置绑定" tabindex="-1"><a class="header-anchor" href="#配置绑定" aria-hidden="true">#</a> 配置绑定</h2><p>如果我们将某些信息写在properties文件中，那么在使用里面信息的时候，正常方法就是获取这个文件的流，然后在从里面取出我们需要的信息，但是这种方法的话，对于springboot太繁琐了，springboot提供了注解，用来将<code>application.properties</code>文件中的某些信息进行绑定</p><p>实现配置文件对属性赋值操作</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> carName<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">int</span> sale<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">Car</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">Car</span> <span class="token punctuation">(</span><span class="token class-name">String</span> carName<span class="token punctuation">,</span> <span class="token keyword">int</span> sale<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>carName <span class="token operator">=</span> carName<span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>sale <span class="token operator">=</span> sale<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">String</span> getCarName <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> carName<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> setCarName <span class="token punctuation">(</span><span class="token class-name">String</span> carName<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>carName <span class="token operator">=</span> carName<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">int</span> getSale <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> sale<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> setSale <span class="token punctuation">(</span><span class="token keyword">int</span> sale<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>sale <span class="token operator">=</span> sale<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> toString <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;Car{&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;carName=&#39;&quot;</span> <span class="token operator">+</span> carName <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span> <span class="token string">&quot;, sale=&quot;</span> <span class="token operator">+</span> sale <span class="token operator">+</span> <span class="token char">&#39;}&#39;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Autowired</span>\n<span class="token keyword">private</span> <span class="token class-name">Car</span> car<span class="token punctuation">;</span>\n\n<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/car&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token class-name">Car</span> <span class="token function">returnCar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> car<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token attr-name">mycar.carName</span> <span class="token punctuation">=</span> <span class="token attr-value">byd</span>\n<span class="token attr-name">mycar.sale</span> <span class="token punctuation">=</span> <span class="token attr-value">10000</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li><p>方法一</p><p>在这个domain类上面添加两个注解</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>\n<span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">&quot;mycar&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>@ConfigurationProperties(prefix = &quot;mycar&quot;)</code>作用就是将application.pro;perties配置文件中的<code>mycar.carName</code>等信息，和这个类中的属性进行绑定，<code>prefix</code>值为配置文件中的<code>mycar.carName</code>前缀，需要保证相同，并且需要保证，<code>mycar.carName</code>中的<code>carName</code>属性在Car类中，存在<code>setCarName()</code>方法，否则会报错</p><p>还需要添加<code>@Component</code>这个注解，其作用就是将此组件car添加到容器中，因为只有在容器中的组件，才能使用springboot的功能</p></li><li><p>方法二</p><ol><li><p>在Car类上，添加<code>@ConfigurationProperties(prefix = &quot;mycar&quot;)</code>注解</p></li><li><p>在配置类上，添加<code>@EnableConfigurationProperties(Car.class)</code>注解，其作用就是</p><blockquote><ul><li>开启Car配置绑定功能</li><li>将这个Car组件，注册到容器中</li></ul></blockquote></li></ol></li></ul><h1 id="源码分析" tabindex="-1"><a class="header-anchor" href="#源码分析" aria-hidden="true">#</a> 源码分析</h1><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span> <span class="token operator">==</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@SpringBootConfiguration</span>\n    <span class="token annotation punctuation">@EnableAutoConfiguration</span>\n    <span class="token annotation punctuation">@ComponentScan</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>@SpringBootApplication</code>注解等于后面三个，通过源码就可以看到，</p>',22),_=(0,p._)("ul",null,[(0,p._)("li",null,[(0,p._)("p",null,"@SpringBootConfiguration"),(0,p._)("p",null,"此注解，等于"),(0,p._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,p._)("pre",{class:"language-java"},[(0,p._)("code",null,[(0,p._)("span",{class:"token annotation punctuation"},"@Configuration"),(0,p.Uk)("\n"),(0,p._)("span",{class:"token annotation punctuation"},"@Indexed"),(0,p.Uk)("\n")])]),(0,p._)("div",{class:"line-numbers"},[(0,p._)("span",{class:"line-number"},"1"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"2"),(0,p._)("br")])]),(0,p._)("p",null,[(0,p.Uk)("所以可以看到，此主启动程序就是一个配置类，因为有"),(0,p._)("code",null,"@Configuration"),(0,p.Uk)("注解")])]),(0,p._)("li",null,[(0,p._)("p",null,"@ComponentScan"),(0,p._)("p",null,[(0,p.Uk)("此注解，点击进去之后，可以看到，存在"),(0,p._)("code",null,"@Repeatable(ComponentScans.class)")])]),(0,p._)("li",null,[(0,p._)("p",null,[(0,p._)("code",null,"@EnableAutoConfiguration")]),(0,p._)("p",null,"这个注解是最重要的，其有下面两个注解组成"),(0,p._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,p._)("pre",{class:"language-java"},[(0,p._)("code",null,[(0,p._)("span",{class:"token annotation punctuation"},"@AutoConfigurationPackage"),(0,p.Uk)("\n"),(0,p._)("span",{class:"token annotation punctuation"},"@Import"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token punctuation"},"{"),(0,p._)("span",{class:"token class-name"},"AutoConfigurationImportSelector"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token keyword"},"class"),(0,p._)("span",{class:"token punctuation"},"}"),(0,p._)("span",{class:"token punctuation"},")"),(0,p.Uk)("\n")])]),(0,p._)("div",{class:"line-numbers"},[(0,p._)("span",{class:"line-number"},"1"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"2"),(0,p._)("br")])]),(0,p._)("p",null,[(0,p._)("code",null,"@AutoConfigurationPackage"),(0,p.Uk)("注解又是由"),(0,p._)("code",null,"@Import({Registrar.class})"),(0,p.Uk)("，所以这个注解的作用就是将组件添加到容器中")]),(0,p._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,p._)("pre",{class:"language-java"},[(0,p._)("code",null,[(0,p._)("span",{class:"token keyword"},"static"),(0,p.Uk)(),(0,p._)("span",{class:"token keyword"},"class"),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},"Registrar"),(0,p.Uk)(),(0,p._)("span",{class:"token keyword"},"implements"),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},"ImportBeanDefinitionRegistrar"),(0,p._)("span",{class:"token punctuation"},","),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},"DeterminableImports"),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"{"),(0,p.Uk)("\n    "),(0,p._)("span",{class:"token class-name"},"Registrar"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token punctuation"},")"),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"{"),(0,p.Uk)("\n    "),(0,p._)("span",{class:"token punctuation"},"}"),(0,p.Uk)("\n\n    "),(0,p._)("span",{class:"token keyword"},"public"),(0,p.Uk)(),(0,p._)("span",{class:"token keyword"},"void"),(0,p.Uk)(),(0,p._)("span",{class:"token function"},"registerBeanDefinitions"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token class-name"},"AnnotationMetadata"),(0,p.Uk)(" metadata"),(0,p._)("span",{class:"token punctuation"},","),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},"BeanDefinitionRegistry"),(0,p.Uk)(" registry"),(0,p._)("span",{class:"token punctuation"},")"),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"{"),(0,p.Uk)("\n        "),(0,p._)("span",{class:"token class-name"},"AutoConfigurationPackages"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"register"),(0,p._)("span",{class:"token punctuation"},"("),(0,p.Uk)("registry"),(0,p._)("span",{class:"token punctuation"},","),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token class-name"},"String"),(0,p._)("span",{class:"token punctuation"},"["),(0,p._)("span",{class:"token punctuation"},"]"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token keyword"},"new"),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},[(0,p.Uk)("AutoConfigurationPackages"),(0,p._)("span",{class:"token punctuation"},"."),(0,p.Uk)("PackageImports")]),(0,p._)("span",{class:"token punctuation"},"("),(0,p.Uk)("metadata"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"getPackageNames"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"toArray"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token keyword"},"new"),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},"String"),(0,p._)("span",{class:"token punctuation"},"["),(0,p._)("span",{class:"token number"},"0"),(0,p._)("span",{class:"token punctuation"},"]"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n    "),(0,p._)("span",{class:"token punctuation"},"}"),(0,p.Uk)("\n\n    "),(0,p._)("span",{class:"token keyword"},"public"),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},"Set"),(0,p._)("span",{class:"token generics"},[(0,p._)("span",{class:"token punctuation"},"<"),(0,p._)("span",{class:"token class-name"},"Object"),(0,p._)("span",{class:"token punctuation"},">")]),(0,p.Uk)(),(0,p._)("span",{class:"token function"},"determineImports"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token class-name"},"AnnotationMetadata"),(0,p.Uk)(" metadata"),(0,p._)("span",{class:"token punctuation"},")"),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"{"),(0,p.Uk)("\n        "),(0,p._)("span",{class:"token keyword"},"return"),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},"Collections"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"singleton"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token keyword"},"new"),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},[(0,p.Uk)("AutoConfigurationPackages"),(0,p._)("span",{class:"token punctuation"},"."),(0,p.Uk)("PackageImports")]),(0,p._)("span",{class:"token punctuation"},"("),(0,p.Uk)("metadata"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n    "),(0,p._)("span",{class:"token punctuation"},"}"),(0,p.Uk)("\n"),(0,p._)("span",{class:"token punctuation"},"}"),(0,p.Uk)("\n")])]),(0,p._)("div",{class:"line-numbers"},[(0,p._)("span",{class:"line-number"},"1"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"2"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"3"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"4"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"5"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"6"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"7"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"8"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"9"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"10"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"11"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"12"),(0,p._)("br")])]),(0,p._)("p",null,[(0,p.Uk)("dubug发现"),(0,p._)("code",null,"AnnotationMetadata metadata"),(0,p.Uk)("的值，就是主启动类的全限定名称，也就是这个标注是主类")]),(0,p._)("p",null,[(0,p._)("code",null,"BeanDefinitionRegistry registry"),(0,p.Uk)("可以通过属性值，看到很多信息")]),(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210613171627834.png?x-oss-process=style/pictureProcess1",data:"aurora"})]),(0,p._)("p",null,"这些信息中，除了spring默认的之外，都是我们将要添加到容器中的对象"),(0,p._)("p",null,[(0,p._)("code",null,"new AutoConfigurationPackages.PackageImports(metadata).getPackageNames()"),(0,p.Uk)("可以得到主类所在的包名，这个就是确定默认的包结构")])])],-1),A=(0,p._)("h2",{id:"enableautoconfiguration分析",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#enableautoconfiguration分析","aria-hidden":"true"},"#"),(0,p.Uk)(" @EnableAutoConfiguration分析")],-1),x=(0,p._)("p",null,"这个组件能够批量导入组件",-1),S=(0,p._)("p",null,[(0,p._)("code",null,"AutoConfigurationImportSelector"),(0,p.Uk)("类中的"),(0,p._)("code",null,"protected List<String> getCandidateConfigurations(AnnotationMetadata metadata, AnnotationAttributes attributes) "),(0,p.Uk)("返回的list集合中存放的就是需要加载的组件信息，"),(0,p._)("code",null,"private static Map<String, List<String>> loadSpringFactories(ClassLoader classLoader)"),(0,p.Uk)("此方法就是从配置文件中，加载需要的组件信息，并且是从所有包中的"),(0,p._)("code",null,'Enumeration urls = classLoader.getResources("META-INF/spring.factories")META-INF/spring.factories'),(0,p.Uk)("进行加载，在每一个jar中，都有")],-1),j=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210613175220597.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),q=(0,p.uE)('<p>文件，但是最重要的还是<code>spring-boot-autoconfigure-2.4.6.jar</code>中的配置，会加载这些</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code># <span class="token class-name">Auto</span> <span class="token class-name">Configure</span>\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span>EnableAutoConfiguration</span><span class="token operator">=</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>admin<span class="token punctuation">.</span></span>SpringApplicationAdminJmxAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>aop<span class="token punctuation">.</span></span>AopAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span></span>RabbitAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>batch<span class="token punctuation">.</span></span>BatchAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>cache<span class="token punctuation">.</span></span>CacheAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>cassandra<span class="token punctuation">.</span></span>CassandraAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span>ConfigurationPropertiesAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span>LifecycleAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span>MessageSourceAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span>PropertyPlaceholderAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>couchbase<span class="token punctuation">.</span></span>CouchbaseAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>dao<span class="token punctuation">.</span></span>PersistenceExceptionTranslationAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>cassandra<span class="token punctuation">.</span></span>CassandraDataAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>cassandra<span class="token punctuation">.</span></span>CassandraReactiveDataAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>cassandra<span class="token punctuation">.</span></span>CassandraReactiveRepositoriesAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>cassandra<span class="token punctuation">.</span></span>CassandraRepositoriesAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>couchbase<span class="token punctuation">.</span></span>CouchbaseDataAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>couchbase<span class="token punctuation">.</span></span>CouchbaseReactiveDataAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>couchbase<span class="token punctuation">.</span></span>CouchbaseReactiveRepositoriesAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>couchbase<span class="token punctuation">.</span></span>CouchbaseRepositoriesAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>elasticsearch<span class="token punctuation">.</span></span>ElasticsearchDataAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>elasticsearch<span class="token punctuation">.</span></span>ElasticsearchRepositoriesAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>elasticsearch<span class="token punctuation">.</span></span>ReactiveElasticsearchRepositoriesAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>elasticsearch<span class="token punctuation">.</span></span>ReactiveElasticsearchRestClientAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>JdbcRepositoriesAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span></span>JpaRepositoriesAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>ldap<span class="token punctuation">.</span></span>LdapRepositoriesAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>mongo<span class="token punctuation">.</span></span>MongoDataAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>mongo<span class="token punctuation">.</span></span>MongoReactiveDataAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>mongo<span class="token punctuation">.</span></span>MongoReactiveRepositoriesAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>mongo<span class="token punctuation">.</span></span>MongoRepositoriesAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>neo4j<span class="token punctuation">.</span></span>Neo4jDataAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>neo4j<span class="token punctuation">.</span></span>Neo4jReactiveDataAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>neo4j<span class="token punctuation">.</span></span>Neo4jReactiveRepositoriesAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>neo4j<span class="token punctuation">.</span></span>Neo4jRepositoriesAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>solr<span class="token punctuation">.</span></span>SolrRepositoriesAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>r2dbc<span class="token punctuation">.</span></span>R2dbcDataAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>r2dbc<span class="token punctuation">.</span></span>R2dbcRepositoriesAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span></span>RedisAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span></span>RedisReactiveAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span></span>RedisRepositoriesAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>rest<span class="token punctuation">.</span></span>RepositoryRestMvcAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>data<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span>SpringDataWebAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>elasticsearch<span class="token punctuation">.</span></span>ElasticsearchRestClientAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>flyway<span class="token punctuation">.</span></span>FlywayAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>freemarker<span class="token punctuation">.</span></span>FreeMarkerAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>groovy<span class="token punctuation">.</span>template<span class="token punctuation">.</span></span>GroovyTemplateAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>gson<span class="token punctuation">.</span></span>GsonAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>h2<span class="token punctuation">.</span></span>H2ConsoleAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>hateoas<span class="token punctuation">.</span></span>HypermediaAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>hazelcast<span class="token punctuation">.</span></span>HazelcastAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>hazelcast<span class="token punctuation">.</span></span>HazelcastJpaDependencyAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>HttpMessageConvertersAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>http<span class="token punctuation">.</span>codec<span class="token punctuation">.</span></span>CodecsAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>influx<span class="token punctuation">.</span></span>InfluxDbAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>info<span class="token punctuation">.</span></span>ProjectInfoAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>integration<span class="token punctuation">.</span></span>IntegrationAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span></span>JacksonAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>DataSourceAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>JdbcTemplateAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>JndiDataSourceAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>XADataSourceAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>DataSourceTransactionManagerAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>jms<span class="token punctuation">.</span></span>JmsAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>jmx<span class="token punctuation">.</span></span>JmxAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>jms<span class="token punctuation">.</span></span>JndiConnectionFactoryAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>jms<span class="token punctuation">.</span>activemq<span class="token punctuation">.</span></span>ActiveMQAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>jms<span class="token punctuation">.</span>artemis<span class="token punctuation">.</span></span>ArtemisAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>jersey<span class="token punctuation">.</span></span>JerseyAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>jooq<span class="token punctuation">.</span></span>JooqAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>jsonb<span class="token punctuation">.</span></span>JsonbAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>kafka<span class="token punctuation">.</span></span>KafkaAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>availability<span class="token punctuation">.</span></span>ApplicationAvailabilityAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>ldap<span class="token punctuation">.</span>embedded<span class="token punctuation">.</span></span>EmbeddedLdapAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>ldap<span class="token punctuation">.</span></span>LdapAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>liquibase<span class="token punctuation">.</span></span>LiquibaseAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>mail<span class="token punctuation">.</span></span>MailSenderAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>mail<span class="token punctuation">.</span></span>MailSenderValidatorAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>mongo<span class="token punctuation">.</span>embedded<span class="token punctuation">.</span></span>EmbeddedMongoAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>mongo<span class="token punctuation">.</span></span>MongoAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>mongo<span class="token punctuation">.</span></span>MongoReactiveAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>mustache<span class="token punctuation">.</span></span>MustacheAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>neo4j<span class="token punctuation">.</span></span>Neo4jAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>orm<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span></span>HibernateJpaAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>quartz<span class="token punctuation">.</span></span>QuartzAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>r2dbc<span class="token punctuation">.</span></span>R2dbcAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>r2dbc<span class="token punctuation">.</span></span>R2dbcTransactionManagerAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>rsocket<span class="token punctuation">.</span></span>RSocketMessagingAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>rsocket<span class="token punctuation">.</span></span>RSocketRequesterAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>rsocket<span class="token punctuation">.</span></span>RSocketServerAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>rsocket<span class="token punctuation">.</span></span>RSocketStrategiesAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>security<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>SecurityAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>security<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>UserDetailsServiceAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>security<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>SecurityFilterAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>security<span class="token punctuation">.</span>reactive<span class="token punctuation">.</span></span>ReactiveSecurityAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>security<span class="token punctuation">.</span>reactive<span class="token punctuation">.</span></span>ReactiveUserDetailsServiceAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>security<span class="token punctuation">.</span>rsocket<span class="token punctuation">.</span></span>RSocketSecurityAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>security<span class="token punctuation">.</span>saml2<span class="token punctuation">.</span></span>Saml2RelyingPartyAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>sendgrid<span class="token punctuation">.</span></span>SendGridAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span>SessionAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>security<span class="token punctuation">.</span>oauth2<span class="token punctuation">.</span>client<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>OAuth2ClientAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>security<span class="token punctuation">.</span>oauth2<span class="token punctuation">.</span>client<span class="token punctuation">.</span>reactive<span class="token punctuation">.</span></span>ReactiveOAuth2ClientAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>security<span class="token punctuation">.</span>oauth2<span class="token punctuation">.</span>resource<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>OAuth2ResourceServerAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>security<span class="token punctuation">.</span>oauth2<span class="token punctuation">.</span>resource<span class="token punctuation">.</span>reactive<span class="token punctuation">.</span></span>ReactiveOAuth2ResourceServerAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>solr<span class="token punctuation">.</span></span>SolrAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>task<span class="token punctuation">.</span></span>TaskExecutionAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>task<span class="token punctuation">.</span></span>TaskSchedulingAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>thymeleaf<span class="token punctuation">.</span></span>ThymeleafAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span></span>TransactionAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>jta<span class="token punctuation">.</span></span>JtaAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span>ValidationAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span>RestTemplateAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>embedded<span class="token punctuation">.</span></span>EmbeddedWebServerFactoryCustomizerAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>reactive<span class="token punctuation">.</span></span>HttpHandlerAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>reactive<span class="token punctuation">.</span></span>ReactiveWebServerFactoryAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>reactive<span class="token punctuation">.</span></span>WebFluxAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>reactive<span class="token punctuation">.</span>error<span class="token punctuation">.</span></span>ErrorWebFluxAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>reactive<span class="token punctuation">.</span>function<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span>ClientHttpConnectorAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>reactive<span class="token punctuation">.</span>function<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span>WebClientAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>DispatcherServletAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>ServletWebServerFactoryAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>error<span class="token punctuation">.</span></span>ErrorMvcAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>HttpEncodingAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>MultipartAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>WebMvcAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>websocket<span class="token punctuation">.</span>reactive<span class="token punctuation">.</span></span>WebSocketReactiveAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>websocket<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>WebSocketServletAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>websocket<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>WebSocketMessagingAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>webservices<span class="token punctuation">.</span></span>WebServicesAutoConfiguration</span><span class="token punctuation">,</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>webservices<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span>WebServiceTemplateAutoConfiguration</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br></div></div><p>最终<code>List&lt;String&gt; configurations = SpringFactoriesLoader.loadFactoryNames(this.getSpringFactoriesLoaderFactoryClass(), this.getBeanClassLoader())</code>list的长度就是spring.factories中上面列出的长度</p><p>但是虽然springboot会一次性加载这么多的组件，但是最终，在容器中存在的，上面的有一些是没有的，容器中存在的某些组件，上面这个配置中也并没有，这个就是springboot的按需加载的应用</p><h2 id="逐步分析" tabindex="-1"><a class="header-anchor" href="#逐步分析" aria-hidden="true">#</a> 逐步分析</h2><h3 id="例如缓存" tabindex="-1"><a class="header-anchor" href="#例如缓存" aria-hidden="true">#</a> 例如缓存</h3>',6),U=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210702091925468.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),R=(0,p.uE)('<p>在我们的自动配置包中，存在上面这个用于缓存功能的内，那么我们现在就来分析一下，他是否在项目中，有</p><p>@ConditionalOnBean // 当给定的在bean存在时,则实例化当前Bean @ConditionalOnMissingBean // 当给定的在bean不存在时,则实例化当前Bean @ConditionalOnClass // 当给定的类名在类路径上存在，则实例化当前Bean @ConditionalOnMissingClass // 当给定的类名在类路径上不存在，则实例化当前Bean</p><ul><li><p>看到此类的注解</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span><span class="token punctuation">(</span>\n    proxyBeanMethods <span class="token operator">=</span> <span class="token boolean">false</span>\n<span class="token punctuation">)</span>\n<span class="token annotation punctuation">@ConditionalOnClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">CacheManager</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@ConditionalOnBean</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">CacheAspectSupport</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span>\n    value <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">CacheManager</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    name <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;cacheResolver&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n<span class="token annotation punctuation">@EnableConfigurationProperties</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">CacheProperties</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@AutoConfigureAfter</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">CouchbaseDataAutoConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">HazelcastAutoConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">HibernateJpaAutoConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">RedisAutoConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">CacheAutoConfiguration<span class="token punctuation">.</span>CacheConfigurationImportSelector</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">CacheAutoConfiguration<span class="token punctuation">.</span>CacheManagerEntityManagerFactoryDependsOnPostProcessor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CacheAutoConfiguration</span> <span class="token punctuation">{</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><code>@ConditionalOnClass({CacheManager.class})</code>判断此CacheManager.class是否存在，<code>@ConditionalOnBean({CacheAspectSupport.class})</code>判断此类型的bean是否存在，我们通过在主配置文件中，可以看到他们都不存在</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> beanNamesForType <span class="token operator">=</span> run<span class="token punctuation">.</span><span class="token function">getBeanNamesForType</span><span class="token punctuation">(</span><span class="token class-name">CacheAspectSupport</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>beanNamesForType<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">CacheManager</span> <span class="token operator">=</span> run<span class="token punctuation">.</span><span class="token function">getBeanNamesForType</span><span class="token punctuation">(</span><span class="token class-name">CacheManager</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">CacheManager</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>返回的长度都是0，那么条件不满足，项目便不会进行此配置类中的方法等操作了</p><p>@Configuration(proxyBeanMethods = false)设置这是一个配置组件，并且此配置组件是一个lite，因为设置了false</p></li></ul><h3 id="web" tabindex="-1"><a class="header-anchor" href="#web" aria-hidden="true">#</a> web</h3><p>如果我们创建的是一个web应用，再来看看情况</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@AutoConfigureOrder</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2147483648</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Configuration</span><span class="token punctuation">(</span>\n    proxyBeanMethods <span class="token operator">=</span> <span class="token boolean">false</span>\n<span class="token punctuation">)</span>\n<span class="token annotation punctuation">@ConditionalOnWebApplication</span><span class="token punctuation">(</span>\n    type <span class="token operator">=</span> <span class="token class-name">Type</span><span class="token punctuation">.</span>SERVLET\n<span class="token punctuation">)</span>\n<span class="token annotation punctuation">@ConditionalOnClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">DispatcherServlet</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@AutoConfigureAfter</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">ServletWebServerFactoryAutoConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>@ConditionalOnWebApplication(type = Type.SERVLET)这是一个web应用才满足条件，满足，并且type = Type.SERVLET指明了这个web的servlet必须是一个原生的，我们在容器中能够得到这个class，<code>DispatcherServlet和ServletWebServerFactoryAutoConfiguration</code>，所以会进行类中的配置</p><ul><li>配置dispatcherServlet属性</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span><span class="token punctuation">(</span>\n    proxyBeanMethods <span class="token operator">=</span> <span class="token boolean">false</span>\n<span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Conditional</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">DispatcherServletAutoConfiguration<span class="token punctuation">.</span>DefaultDispatcherServletCondition</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@ConditionalOnClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">ServletRegistration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@EnableConfigurationProperties</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">WebMvcProperties</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">DispatcherServletConfiguration</span> <span class="token punctuation">{</span>\n    <span class="token keyword">protected</span> <span class="token class-name">DispatcherServletConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>\n        name <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;dispatcherServlet&quot;</span><span class="token punctuation">}</span>\n    <span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">DispatcherServlet</span> <span class="token function">dispatcherServlet</span><span class="token punctuation">(</span><span class="token class-name">WebMvcProperties</span> webMvcProperties<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">DispatcherServlet</span> dispatcherServlet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DispatcherServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        dispatcherServlet<span class="token punctuation">.</span><span class="token function">setDispatchOptionsRequest</span><span class="token punctuation">(</span>webMvcProperties<span class="token punctuation">.</span><span class="token function">isDispatchOptionsRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        dispatcherServlet<span class="token punctuation">.</span><span class="token function">setDispatchTraceRequest</span><span class="token punctuation">(</span>webMvcProperties<span class="token punctuation">.</span><span class="token function">isDispatchTraceRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        dispatcherServlet<span class="token punctuation">.</span><span class="token function">setThrowExceptionIfNoHandlerFound</span><span class="token punctuation">(</span>webMvcProperties<span class="token punctuation">.</span><span class="token function">isThrowExceptionIfNoHandlerFound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        dispatcherServlet<span class="token punctuation">.</span><span class="token function">setPublishEvents</span><span class="token punctuation">(</span>webMvcProperties<span class="token punctuation">.</span><span class="token function">isPublishRequestHandledEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        dispatcherServlet<span class="token punctuation">.</span><span class="token function">setEnableLoggingRequestDetails</span><span class="token punctuation">(</span>webMvcProperties<span class="token punctuation">.</span><span class="token function">isLogRequestDetails</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> dispatcherServlet<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Bean</span>\n    <span class="token annotation punctuation">@ConditionalOnBean</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">MultipartResolver</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span>\n        name <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;multipartResolver&quot;</span><span class="token punctuation">}</span>\n    <span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">MultipartResolver</span> <span class="token function">multipartResolver</span><span class="token punctuation">(</span><span class="token class-name">MultipartResolver</span> resolver<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> resolver<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p><code>@EnableConfigurationProperties({WebMvcProperties.class})</code>通过配置绑定，也就是将配置文件中的<code>spring.mvc</code>值都赋值给这个WebMvcProperties类中的属性，这个类中存在大量的set方法</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>\n    name <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;dispatcherServlet&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token class-name">DispatcherServlet</span> <span class="token function">dispatcherServlet</span><span class="token punctuation">(</span><span class="token class-name">WebMvcProperties</span> webMvcProperties<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token class-name">DispatcherServlet</span> dispatcherServlet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DispatcherServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \n此方法中，就是配置dispatcherservlet中的属性，这个也就是做了原来springmvc<span class="token punctuation">.</span>xml文件中的工作，这个就是为什么我们什么都不同配置，直接使用springboot就可以了，这些配置也就是在这个方法中，进行配置的\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span>\n<span class="token annotation punctuation">@ConditionalOnBean</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">MultipartResolver</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span>\n    name <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;multipartResolver&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token class-name">MultipartResolver</span> <span class="token function">multipartResolver</span><span class="token punctuation">(</span><span class="token class-name">MultipartResolver</span> resolver<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> resolver<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n这个是文件上传解析器的配置，如果容器中，存在<span class="token class-name">MultipartResolver</span>对象，不存在一个名为multipartResolver的bean，那么就会执行这个方法，在使用<span class="token annotation punctuation">@Bean</span>注解的方法中，如果参数是一个对象的话，那么在创建此bean的时候，就会从容器中，寻找此类对象，并将此类对象自动赋值给这个对象，此操作可以防止，我们使用其他方法配置文件上传解析器的时候，没有使用规范的bean名字multipartResolver\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>多看几个源码的分析，我们便可以看到springboot的很多配置都已经帮我们配置好了，但是我们也可以使用我们自己定制的，使用我们自己的可以有两种方法</p><ul><li><p>方法一</p><p>因为springboot的配置，都会有一个<code>@ConditionalOnMissingBean()</code>判断注解，所以我们可以直接在我们的配置类中，创建一个新的@Bean，比如dispatcherServlet，那么这个bean的名字就叫dispatcherServlet，便可以替换原来的配置</p></li><li><p>方法二</p><p>因为springboot的每一个默认配置，都是和一个配置文件进行绑定的，所以我们可以直接在配置文件中，直接修改就就可以了，这些配置文件的命名都是使用<code>***Properties</code>的方法，在这些配置文件中，便可以看到<code>@ConfigurationProperties()</code>在配置文件中的前缀，我们直接修改就可以了，也可以通过查看文档的方式，查看修改此配置的配置文件的前缀</p></li></ul><h1 id="最佳实践" tabindex="-1"><a class="header-anchor" href="#最佳实践" aria-hidden="true">#</a> 最佳实践</h1><p>我们可以很快速的开始一个一个springboot的应用，其步骤如下</p><ul><li><p>引入一个我们需要的场景，此场景可以在https://docs.spring.io/spring-boot/docs/current/reference/html/using.html#using.build-systems.starters中查看</p></li><li><p>查看自己需要的配置，或者修改，可以在自动配置类中，一个一个的分析，但是这样的话，太慢了，springboot就提供了一种方法，如果我们打开<code>debug=true</code>，那么在启动的时候，就会生成一个评估报告，此报告中，可以看到生效的和没有生效的有哪些，和没有生效的额原因是什么，都可以直接看到</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>\nCONDITIONS <span class="token class-name">EVALUATION</span> REPORT\n<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>\n\n这个是生效的\n<span class="token class-name">Positive</span> matches<span class="token operator">:</span>\n<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>\n\n   <span class="token class-name">AopAutoConfiguration</span> matched<span class="token operator">:</span>\n      <span class="token operator">-</span> <span class="token annotation punctuation">@ConditionalOnProperty</span> <span class="token punctuation">(</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>auto<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span> matched <span class="token punctuation">(</span><span class="token class-name">OnPropertyCondition</span><span class="token punctuation">)</span>\n\n   <span class="token class-name">AopAutoConfiguration<span class="token punctuation">.</span>AspectJAutoProxyingConfiguration</span> matched<span class="token operator">:</span>\n      <span class="token operator">-</span> <span class="token annotation punctuation">@ConditionalOnClass</span> found required <span class="token keyword">class</span> &#39;<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>aspectj<span class="token punctuation">.</span>weaver<span class="token punctuation">.</span></span>Advice</span>&#39; <span class="token punctuation">(</span><span class="token class-name">OnClassCondition</span><span class="token punctuation">)</span>\n          \n          \n没有生效的\n<span class="token class-name">Negative</span> matches<span class="token operator">:</span>\n<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>\n\n    <span class="token class-name">ActiveMQAutoConfiguration</span><span class="token operator">:</span>\n<span class="token class-name">Did</span> not match<span class="token operator">:</span>\n<span class="token operator">-</span> <span class="token annotation punctuation">@ConditionalOnClass</span> did not find required <span class="token keyword">class</span> &#39;<span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>jms<span class="token punctuation">.</span></span>ConnectionFactory</span>&#39; <span class="token punctuation">(</span><span class="token class-name">OnClassCondition</span><span class="token punctuation">)</span>\n\n    <span class="token class-name">AopAutoConfiguration<span class="token punctuation">.</span>AspectJAutoProxyingConfiguration<span class="token punctuation">.</span>JdkDynamicAutoProxyConfiguration</span><span class="token operator">:</span>\n<span class="token class-name">Did</span> not match<span class="token operator">:</span>\n<span class="token operator">-</span> <span class="token annotation punctuation">@ConditionalOnProperty</span> <span class="token punctuation">(</span>spring<span class="token punctuation">.</span>aop<span class="token punctuation">.</span>proxy<span class="token operator">-</span>target<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span> did not find property &#39;proxy<span class="token operator">-</span>target<span class="token operator">-</span><span class="token keyword">class</span>&#39; <span class="token punctuation">(</span><span class="token class-name">OnPropertyCondition</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div></li><li><p>自定义加入或者替换组件</p><p>@Bean、@Component。。。</p></li><li><p>自定义器 <strong>XXXXXCustomizer</strong>；</p></li></ul><p>我们也可以更改启动的banner，也就是这个，可以是一张图片或者其他</p>',19),M=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210702110849613.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),P=(0,p._)("p",null,"可以通过此配置项进行修改",-1),B=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210702110940676.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),I=(0,p._)("p",null,[(0,p._)("code",null,"spring.banner.image.location"),(0,p.Uk)("便可以使用图片作为启动，默认值为"),(0,p._)("code",null,"classpath:banner.gif"),(0,p.Uk)("，我们将一张图片作为启动")],-1),z=(0,p._)("p",null,"测试使用下面这张图片作为启动banner",-1),E=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210702111415803.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),D=(0,p._)("p",null,"spring.banner.image.location=classpath:33.jpg",-1),O=(0,p._)("p",null,[(0,p.Uk)("这里需要进行激活一下，也就是先将这张图片改为"),(0,p._)("code",null,"banner.jpg"),(0,p.Uk)("，启动成功之后，在改为任意的名字")],-1),N=(0,p._)("p",null,"那么启动之后，就变为",-1),T=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210702111542415.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),F=(0,p._)("p",null,"展示的并不是一张图片，而是文本",-1),L=(0,p._)("p",null,"也可以直接使用文本，创建一个TXT，然后一样的操作",-1),W={},J=(0,a(83744).Z)(W,[["render",function(n,s){return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,o,e,c,u,l,i,r,k,g,b,m,d,f,v,h,C,w,y,_,A,x,S,j,q,U,R,M,P,B,I,z,E,D,O,N,T,F,L],64)}]])}}]);
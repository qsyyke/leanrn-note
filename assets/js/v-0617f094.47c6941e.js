"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1236],{16313:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-0617f094",path:"/spring/springboot/%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7.html",title:"spring boot高级特性",lang:"en-US",frontmatter:{tag:["starter","springboot","spring","高级特性"]},excerpt:"",headers:[{level:2,title:"profile",slug:"profile",children:[]},{level:2,title:"application-profile功能",slug:"application-profile功能",children:[]},{level:2,title:"自定义starter",slug:"自定义starter-1",children:[]},{level:2,title:"官方starter分析",slug:"官方starter分析",children:[{level:3,title:"自动配置",slug:"自动配置",children:[]}]},{level:2,title:"空壳starter",slug:"空壳starter",children:[]},{level:2,title:"测试",slug:"测试",children:[]}],git:{updatedTime:1654857597e3,contributors:[{name:"qsyyke",email:"2291308094@qq.com",commits:1}]}}},309:(n,s,a)=>{a.r(s),a.d(s,{default:()=>h});var t=a(66252);const e=(0,t.uE)('<h1 id="spring-boot高级特性" tabindex="-1"><a class="header-anchor" href="#spring-boot高级特性" aria-hidden="true">#</a> spring boot高级特性</h1><h2 id="profile" tabindex="-1"><a class="header-anchor" href="#profile" aria-hidden="true">#</a> profile</h2><p>有时候，我们的生产环境和实际环境可能不一样，那么这个时候，就可以使用profile的特性，快速的就可以进行切换</p><h2 id="application-profile功能" tabindex="-1"><a class="header-anchor" href="#application-profile功能" aria-hidden="true">#</a> application-profile功能</h2><ul><li><p>默认配置文件 application.properties；任何时候都会加载</p></li><li><p>指定环境配置文件 application-{env}.yaml</p></li><li><p>激活指定环境</p></li><li><p>配置文件激活</p></li><li><p>命令行激活：java -jar xxx.jar --<strong>spring.profiles.active=prod --person.name=haha</strong></p></li><li><p><strong>修改配置文件的任意值，命令行优先</strong></p></li><li><p>默认配置与环境配置同时生效</p></li><li><p>同名配置项，profile配置优先</p></li></ul>',5),p=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210710165304306.png",data:"aurora"})],-1),l=(0,t.uE)('<p>其中<code>application-test.yml</code>是测试环境，<code>application-pro.yml</code>是生产环境</p><p>因为<code>application.properties</code>和<code>application.yml</code>是一定会加载的，所以我们可以在这两个中的其中一个进行选择，</p><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token attr-name">spring.profiles.active</span><span class="token punctuation">=</span><span class="token attr-value">test # 使用测试环境的配置，也就是application-test.yml</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>成功被切换</p><h1 id="自定义starter" tabindex="-1"><a class="header-anchor" href="#自定义starter" aria-hidden="true">#</a> 自定义starter</h1><p>我们可以自定义自己的starter</p>',6),o=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210710202446870.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),r=(0,t._)("p",null,"像官方的部分starter，他们当中，并没有代码，其作用就只是引入其他的jar文件，所以我们也可以依照这个来做",-1),c=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210710202725546.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),i=(0,t.uE)('<ul><li><p>autoconfigure包中配置使用 <strong>META-INF/spring.factories</strong> 中 <strong>EnableAutoConfiguration 的值，使得项目启动加载指定的自动配置类</strong></p></li><li><p><strong>编写自动配置类 xxxAutoConfiguration -&gt; xxxxProperties</strong></p></li><li><p><strong>@Configuration</strong></p></li><li><p><strong>@Conditional</strong></p></li><li><p><strong>@EnableConfigurationProperties</strong></p></li><li><p><strong>@Bean</strong></p></li><li><p>......</p></li></ul><p><strong>引入starter</strong> <strong>--- xxxAutoConfiguration --- 容器中放入组件 ---- 绑定xxxProperties ----</strong> <strong>配置项</strong></p><h2 id="自定义starter-1" tabindex="-1"><a class="header-anchor" href="#自定义starter-1" aria-hidden="true">#</a> 自定义starter</h2><p><strong>atguigu-hello-spring-boot-starter（启动器）</strong></p><p><strong>atguigu-hello-spring-boot-starter-autoconfigure（自动配置包）</strong></p><h2 id="官方starter分析" tabindex="-1"><a class="header-anchor" href="#官方starter分析" aria-hidden="true">#</a> 官方starter分析</h2><p>官方真正的配置，如果代码少量的话，那么可以直接使用一个包</p>',7),u=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210710203757532.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),b=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210710203830209.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),g=(0,t._)("h3",{id:"自动配置",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#自动配置","aria-hidden":"true"},"#"),(0,t.Uk)(" 自动配置")],-1),k=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210710214927922.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),m=(0,t.uE)('<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>\n<span class="token annotation punctuation">@EnableConfigurationProperties</span><span class="token punctuation">(</span><span class="token class-name">HelloProperties</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloAutoConfiguration</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span><span class="token class-name">HelloService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@Bean</span>\n    <span class="token keyword">public</span> <span class="token class-name">HelloService</span> <span class="token function">helloService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">HelloService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span><span class="token string">&quot;qsyyke.hello&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloProperties</span> <span class="token punctuation">{</span>\n     <span class="token doc-comment comment">/** 这是前缀 */</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token class-name">Prefix</span><span class="token punctuation">;</span>\n\n    <span class="token doc-comment comment">/** 这是后缀 */</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> suffix<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">String</span> getPrefix <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token class-name">Prefix</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> setPrefix <span class="token punctuation">(</span><span class="token class-name">String</span> prefix<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Prefix</span> <span class="token operator">=</span> prefix<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">String</span> getSuffix <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> suffix<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> setSuffix <span class="token punctuation">(</span><span class="token class-name">String</span> suffix<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>suffix <span class="token operator">=</span> suffix<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> toString <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;HelloProperties{&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;Prefix=&#39;&quot;</span> <span class="token operator">+</span> <span class="token class-name">Prefix</span> <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span> <span class="token string">&quot;, suffix=&#39;&quot;</span> <span class="token operator">+</span> suffix <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span> <span class="token char">&#39;}&#39;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloService</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Autowired</span>\n    <span class="token keyword">private</span> <span class="token class-name">HelloProperties</span> properties<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">sendMsg</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            username <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> properties<span class="token punctuation">.</span><span class="token function">getPrefix</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; --- &quot;</span> <span class="token operator">+</span> username <span class="token operator">+</span> <span class="token string">&quot; --- &quot;</span> <span class="token operator">+</span> properties<span class="token punctuation">.</span><span class="token function">getSuffix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> toString <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;HelloService{&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;properties=&quot;</span> <span class="token operator">+</span> properties <span class="token operator">+</span> <span class="token char">&#39;}&#39;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>自动配置依赖</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;2.5.2&lt;/version&gt;\n        &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;\n    &lt;/parent&gt;\n    &lt;groupId&gt;vin.cco&lt;/groupId&gt;\n    &lt;artifactId&gt;qsyyke-spring-boot-starter-autoconfigure&lt;/artifactId&gt;\n    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;\n    &lt;name&gt;qsyyke-spring-boot-starter-autoconfigure&lt;/name&gt;\n    &lt;description&gt;this is my first strter of autoconfigure&lt;/description&gt;\n    &lt;properties&gt;\n        &lt;java.version&gt;1.8&lt;/java.version&gt;\n    &lt;/properties&gt;\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n&lt;/project&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><ul><li>spring.factories</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># Auto Configure\norg.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\nvin.cco.qsyyke.HelloAutoConfiguration\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="空壳starter" tabindex="-1"><a class="header-anchor" href="#空壳starter" aria-hidden="true">#</a> 空壳starter</h2>',8),d=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210710214911303.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),v=(0,t.uE)('<p>依赖</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;2.5.2&lt;/version&gt;\n        &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;\n    &lt;/parent&gt;\n    &lt;groupId&gt;vin.cco&lt;/groupId&gt;\n    &lt;artifactId&gt;qsyyke-spring-boot-starter&lt;/artifactId&gt;\n    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;\n    &lt;name&gt;qsyyke-spring-boot-starter&lt;/name&gt;\n    &lt;description&gt;this is my first starter&lt;/description&gt;\n    &lt;properties&gt;\n        &lt;java.version&gt;1.8&lt;/java.version&gt;\n    &lt;/properties&gt;\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;vin.cco&lt;/groupId&gt;\n            &lt;artifactId&gt;qsyyke-spring-boot-starter-autoconfigure&lt;/artifactId&gt;\n            &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n&lt;/project&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h2><ul><li>依赖</li></ul><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>vin.cco<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>qsyyke-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloController</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token class-name">HelloService</span> service<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>service<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> chuchen <span class="token operator">=</span> service<span class="token punctuation">.</span><span class="token function">sendMsg</span><span class="token punctuation">(</span><span class="token string">&quot;chuchen&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> chuchen<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token attr-name">qsyyke.hello.Prefix</span> <span class="token punctuation">=</span> <span class="token attr-value">hello</span>\n<span class="token attr-name">qsyyke.hello.suffix</span> <span class="token punctuation">=</span> <span class="token attr-value">thank</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',7),f={},h=(0,a(83744).Z)(f,[["render",function(n,s){return(0,t.wg)(),(0,t.iD)(t.HY,null,[e,p,l,o,r,c,i,u,b,g,k,m,d,v],64)}]])}}]);
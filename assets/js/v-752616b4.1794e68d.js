"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3171],{51096:(n,a,s)=>{s.r(a),s.d(a,{data:()=>p});const p={key:"v-752616b4",path:"/spring/springcloud/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4/nacos-config.html",title:"nacos之配置中心",lang:"en-US",frontmatter:{date:"2022/2/18 21:51",title:"nacos之配置中心"},excerpt:"",headers:[{level:2,title:"使用nacos配置中心文件演示",slug:"使用nacos配置中心文件演示",children:[{level:3,title:"依赖",slug:"依赖",children:[]},{level:3,title:"配置项",slug:"配置项",children:[]},{level:3,title:"业务类",slug:"业务类",children:[]},{level:3,title:"nacos中加入配置文件",slug:"nacos中加入配置文件",children:[]}]},{level:2,title:"配置中心分类管理",slug:"配置中心分类管理",children:[{level:3,title:"Data ID方案",slug:"data-id方案",children:[]},{level:3,title:"Group方案",slug:"group方案",children:[]},{level:3,title:"Namespace方案",slug:"namespace方案",children:[]}]}],git:{updatedTime:1654857597e3,contributors:[{name:"qsyyke",email:"2291308094@qq.com",commits:1}]}}},46758:(n,a,s)=>{s.r(a),s.d(a,{default:()=>h});var p=s(66252);const t=(0,p.uE)('<p>我们知道nacos是一个注册中心和配置中心的集合，并且配置中心并不像<code>spring cloud config</code>那样，配置文件需要借助GitHub，gitee等进行存放，访问速度低</p><p>nacos的配置文件，我们可以直接存放在数据库中，或者是其他的方式，反正不需要借助GitHub，所以，就很友好(^▽^)</p><h2 id="使用nacos配置中心文件演示" tabindex="-1"><a class="header-anchor" href="#使用nacos配置中心文件演示" aria-hidden="true">#</a> 使用nacos配置中心文件演示</h2><p>这里我们创建一个模块，这个模块去获取nacos配置中心的配置文件</p><h3 id="依赖" tabindex="-1"><a class="header-anchor" href="#依赖" aria-hidden="true">#</a> 依赖</h3><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n  <span class="token comment">&lt;!--nacos-config--&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-config<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n  <span class="token comment">&lt;!--nacos-discovery--&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n  <span class="token comment">&lt;!--web + actuator--&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n  <span class="token comment">&lt;!--一般基础配置--&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-devtools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h3 id="配置项" tabindex="-1"><a class="header-anchor" href="#配置项" aria-hidden="true">#</a> 配置项</h3><p>这里需要创建两个yaml文件，<code>application.yml</code>和<code>bootstrap.yml</code>，关于他们两个的区别，去看<code>spring cloud config</code>处的笔记，那里有记录</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment"># bootstrap.yml</span>\n<span class="token comment"># nacos配置</span>\n<span class="token key atrule">server</span><span class="token punctuation">:</span>\n  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">3377</span>\n\n<span class="token key atrule">spring</span><span class="token punctuation">:</span>\n  <span class="token key atrule">application</span><span class="token punctuation">:</span>\n    <span class="token key atrule">name</span><span class="token punctuation">:</span> nacos<span class="token punctuation">-</span>config<span class="token punctuation">-</span>client\n  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>\n    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>\n      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>\n        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 172.16.180.129<span class="token punctuation">:</span><span class="token number">8848</span> <span class="token comment">#Nacos服务注册中心地址</span>\n      <span class="token key atrule">config</span><span class="token punctuation">:</span>\n        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 172.16.180.129<span class="token punctuation">:</span><span class="token number">8848</span> <span class="token comment">#Nacos作为配置中心地址</span>\n        <span class="token key atrule">file-extension</span><span class="token punctuation">:</span> yaml <span class="token comment">#指定yaml格式的配置</span>\n\n\n  <span class="token comment"># ${spring.application.name}-${spring.profile.active}.${spring.cloud.nacos.config.file-extension}</span>\n  \n<span class="token comment"># application.yml</span>\n<span class="token key atrule">spring</span><span class="token punctuation">:</span>\n  <span class="token key atrule">profiles</span><span class="token punctuation">:</span>\n    <span class="token key atrule">active</span><span class="token punctuation">:</span> dev <span class="token comment"># 设置开发环境</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><blockquote><p>如果我们的配置文件是yaml后缀，那么<code>file-extension</code>我们不能简写成<code>yml</code>，一定要是<code>yaml</code>，否则会找不到这个配置文件</p></blockquote><h3 id="业务类" tabindex="-1"><a class="header-anchor" href="#业务类" aria-hidden="true">#</a> 业务类</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RefreshScope</span>\n<span class="token annotation punctuation">@RestController</span>\n<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/config&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConfigClientController</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;${config.info}&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> configInfo<span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/info&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getConfigInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> configInfo<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><blockquote><p>在控制器类加入<code>@RefreshScope</code>注解使当前类下的配置支持 <em>Nacos</em> 的动态刷新功能。</p></blockquote><h3 id="nacos中加入配置文件" tabindex="-1"><a class="header-anchor" href="#nacos中加入配置文件" aria-hidden="true">#</a> nacos中加入配置文件</h3><p>我们直接在nacos的web端，点击配置管理，新增一个就行</p>',15),e=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20220218223754169.png",data:"aurora"})],-1),c=(0,p._)("p",null,[(0,p.Uk)("这里我们需要注意"),(0,p._)("code",null,"Data Id"),(0,p.Uk)("的书写规范，否则在启动的时候，就会报错")],-1),o=(0,p.Uk)("请看"),l={href:"https://nacos.io/zh-cn/docs/quick-start-spring-cloud.html",target:"_blank",rel:"noopener noreferrer"},u=(0,p.Uk)("官方介绍"),i=(0,p._)("p",null,"这里我们增加一个yaml类型的配置",-1),r=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20220218223937537.png",data:"aurora"})],-1),k=(0,p.uE)('<blockquote><p><code>Data Id</code>和<code>Group</code>发布了之后，就不能进行修改了</p></blockquote><p>我们上面增加了一个<code>config.info</code>的配置项，那么我们现在可以直接在业务类中使用该配置项</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;${config.info}&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">private</span> <span class="token class-name">String</span> configInfo<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>一定要注意，这里得<code>config.info</code>并不是在<code>bootstrap.yml</code>和<code>application.yml</code>中配置的，这个是直接使用nacos配置中心的，一定要注意，在配置中心的配置项，我们可以直接使用，不然配置中心有何用</p></blockquote><p>如果我们现在修改nacos中的<code>config.info</code>的值，那么我们不需要做额外的操作，直接访问，配置项便已经更新到最新的，并且nacos的配置中心支持回滚操作</p><h2 id="配置中心分类管理" tabindex="-1"><a class="header-anchor" href="#配置中心分类管理" aria-hidden="true">#</a> 配置中心分类管理</h2><p>在实际开发的过程中，我们会遇到以下情况</p><ol><li><p>开发的时候，通常会准备</p><ul><li>dev开发环境</li><li>test测试环境</li><li>prod生产环境</li></ul><p>如何保证指定环境启动时服务能正确读取到nacos上相应环境的配置文件？</p></li><li><p>一个大型分布式服务系统会有很多微服务子项目，每个微服务项目又会有相应的开发环境，测试环境，预发环境，正式环境等，那怎么对这些为服务的配置进行管理？</p></li></ol><p>那么解决这个问题，就可以使用nacos的<code>Data Id</code>和<code>Group</code>和<code>Namespace</code>三种方案进行管理</p><p>他们之间的区别和联系如下</p><p>他们三者相当于Java中的包名和类名，<code>最外层的namespace是可以用于区分部署环境的，Group和DataID逻辑上区分两个目标对象。</code></p>',11),g=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20220218225837673.png",data:"aurora"})],-1),d=(0,p.uE)('<blockquote><p>他们的默认值为：</p><p>Namespace=public</p><p>Group=DEFAULT_GROUP</p><p>Cluster是DEFAULT</p></blockquote><p>Nacos默认的命名空间是public，Namespace主要用来实现隔离。 比方说我们现在有三个环境：开发、测试、生产环境，我们就可以创建三个Namespace，不同的Namespace之间是隔离的。</p><p>Group默认是DEFAULT_GROUP，Group可以把不同的微服务划分到同一个分组里面去</p><p>Service就是微服务；一个Service可以包含多个Cluster（集群），Nacos默认Cluster是DEFAULT，Cluster是对指定微服务的一个虚拟划分。</p><p>比方说为了容灾，将Service微服务分别部署在了杭州机房和广州机房， 这时就可以给杭州机房的Service微服务起一个集群名称（HZ）， 给广州机房的Service微服务起一个集群名称（GZ），还可以尽量让同一个机房的微服务互相调用，以提升性能。</p><p>最后是Instance，就是微服务的实例。</p><h3 id="data-id方案" tabindex="-1"><a class="header-anchor" href="#data-id方案" aria-hidden="true">#</a> Data ID方案</h3><p>我们可以使用默认的namespace和group新建不同的开发环境的配置文件，在nacos中，根据<code>${prefix}-${spring.profiles.active}.${file-extension}</code>新建不用环境的配置文件，然后我们只需要在模块配置文件中，指定<code>spring.profiles.active</code>项的值，便可以在test/prod/dev三个环境中进行切换(前提是nacos中新建了这三个开发环境的配置文件)</p><h3 id="group方案" tabindex="-1"><a class="header-anchor" href="#group方案" aria-hidden="true">#</a> Group方案</h3><p>除了dataId，我们还可以在配置中心创建配置文件的时候，指定<code>group</code>的值，然后在<code>bootstrap.yml</code>文件中，将<code>spring.cloud.nacos.config.group</code>的值和web端设置的group相同</p><h3 id="namespace方案" tabindex="-1"><a class="header-anchor" href="#namespace方案" aria-hidden="true">#</a> Namespace方案</h3><p>我们还可以创建Namespace，然后在<code>bootstrap.yml</code>中，将<code>spring.cloud.nacos.config.namespace</code>的值和web端设置的namespace相同</p>',12),b=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20220218231001974.png",data:"aurora"})],-1),m={},h=(0,s(83744).Z)(m,[["render",function(n,a){const s=(0,p.up)("ExternalLinkIcon");return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,e,c,(0,p._)("p",null,[o,(0,p._)("a",l,[u,(0,p.Wm)(s)])]),i,r,k,g,d,b],64)}]])}}]);
"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[5788],{45240:(a,n,t)=>{t.r(n),t.d(n,{data:()=>s});const s={key:"v-9de50612",path:"/thinking/%E6%9C%8D%E5%8A%A1%E5%99%A8.html",title:"<context-param>标签作用",lang:"en-US",frontmatter:{},excerpt:"",headers:[],git:{updatedTime:1654857597e3,contributors:[{name:"qsyyke",email:"2291308094@qq.com",commits:1}]}}},31484:(a,n,t)=>{t.r(n),t.d(n,{default:()=>p});const s=(0,t(66252).uE)('<h1 id="context-param-标签作用" tabindex="-1"><a class="header-anchor" href="#context-param-标签作用" aria-hidden="true">#</a> <code>&lt;context-param&gt;</code>标签作用</h1><p>1.启动一个WEB项目的时候,容器(如:Tomcat)会去读它的配置文件web.xml.读两个节点: <code>&lt;listener&gt;&lt;/listener&gt; </code>和 <code>&lt;context-param&gt;&lt;/context-param&gt;</code></p><p>2.紧接着,容器创建一个ServletContext(上下文),这个WEB项目所有部分都将共享这个上下文.</p><p>3.容器将<code>&lt;context-param&gt;&lt;/context-param&gt;</code>转化为键值对,并交给ServletContext.</p><p>4.容器创建<code>&lt;listener&gt;&lt;/listener&gt;</code>中的类实例,即创建监听.</p><p>5.在监听中会有contextInitialized(ServletContextEvent args)初始化方法,在这个方法中获得ServletContext = ServletContextEvent.getServletContext(); context-param的值 = ServletContext.getInitParameter(&quot;context-param的键&quot;);</p><p>6.得到这个context-param的值之后,你就可以做一些操作了.注意,这个时候你的WEB项目还没有完全启动完成.这个动作会比所有的Servlet都要早. 换句话说,这个时候,你对<code>&lt;context-param&gt;</code>中的键值做的操作,将在你的WEB项目完全启动之前被执行.</p><p>7.举例.你可能想在项目启动之前就打开数据库. 那么这里就可以在<code>&lt;context-param&gt;</code>中设置数据库的连接方式,在监听类中初始化数据库的连接.</p><p>所以，此<code>&lt;context-param&gt;</code>标签，我们应该配合监听器一起使用，因为监听器中的init()方法，会进行处理化ServletContext，从而加载资源文件</p><p>但是，如果我们使用了<code>DispatcherServlet</code>，因为在创建这个对象的时候，也存在init方法，也可以进行处理化，所以在<code>DispatcherServlet</code>配置中，也可以使用<code>&lt;init-param&gt;</code>进行资源文件的加载，这样就可以不用监听器</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>dispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">&gt;</span></span>org.springframework.web.servlet.DispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>contextConfigLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>classpath:applicationContext.xml,classpath:dubbo-zk-consumer.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',11),e={},p=(0,t(83744).Z)(e,[["render",function(a,n){return s}]])}}]);
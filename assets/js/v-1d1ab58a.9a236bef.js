"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1735],{48374:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-1d1ab58a",path:"/spring/springmvc/%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90.html",title:"执行流程图",lang:"en-US",frontmatter:{tag:["java","spring mvc","异常处理"]},excerpt:"",headers:[],git:{updatedTime:1654857597e3,contributors:[{name:"qsyyke",email:"2291308094@qq.com",commits:1}]}}},63411:(n,a,s)=>{s.r(a),s.d(a,{default:()=>i});var e=s(66252);const l=(0,e._)("h1",{id:"执行流程图",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#执行流程图","aria-hidden":"true"},"#"),(0,e.Uk)(" 执行流程图")],-1),t=(0,e._)("p",null,[(0,e._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210601164443299.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),o=(0,e._)("ul",null,[(0,e._)("li",null,"过程分析")],-1),c=(0,e._)("ol",null,[(0,e._)("li",null,[(0,e._)("p",null,"用户发起请求some.do")]),(0,e._)("li",null,[(0,e._)("p",null,[(0,e._)("code",null,"DispatcherServlet"),(0,e.Uk)("接收请求some.do，把请求转交给处理器映射器")]),(0,e._)("p",null,[(0,e.Uk)("处理器映射器： 是springmvc框架中的一种对象，只要实现了"),(0,e._)("code",null,"HandlerMapping"),(0,e.Uk)("接口的类，都叫做映射器，存在多个")]),(0,e._)("p",null,"作用：处理器映射器根据请求，从springmvc容器中获取处理器对象，也就是"),(0,e._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,e._)("pre",{class:"language-java"},[(0,e._)("code",null,[(0,e._)("span",{class:"token class-name"},"Object"),(0,e.Uk)(" o "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" context"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"getBean"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},'"bean`s id"'),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br")])]),(0,e._)("p",null,[(0,e.Uk)("框架会把找到的这个处理器对象放到一个叫做处理器执行链("),(0,e._)("code",null,"HandlerExecutionChain"),(0,e.Uk)(")")]),(0,e._)("p",null,[(0,e.Uk)("这个过程对应着"),(0,e._)("code",null,"doDispatch()"),(0,e.Uk)("方法中的，获取处理器执行链")]),(0,e._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,e._)("pre",{class:"language-java"},[(0,e._)("code",null,[(0,e._)("span",{class:"token class-name"},"HandlerExecutionChain"),(0,e.Uk)(" mappedHandler "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"this"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"getHandler"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("processedRequest"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br")])]),(0,e._)("p",null,[(0,e._)("code",null,"HandlerExecutionChain"),(0,e.Uk)("类中保存着处理器对象"),(0,e._)("code",null,"Controller"),(0,e.Uk)("，项目中所有的拦截器"),(0,e._)("code",null,"List<HandlerInterceptor>")]),(0,e._)("p",null,[(0,e.Uk)("在执行"),(0,e._)("code",null,"doDispatch()"),(0,e.Uk)("方法的时候，"),(0,e._)("code",null,"HandleMapping"),(0,e.Uk)("对象中的集合")]),(0,e._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,e._)("pre",{class:"language-java"},[(0,e._)("code",null,[(0,e._)("span",{class:"token punctuation"},"["),(0,e._)("span",{class:"token class-name"},[(0,e._)("span",{class:"token namespace"},[(0,e.Uk)("org"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("springframework"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("web"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("servlet"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("mvc"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("method"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("annotation"),(0,e._)("span",{class:"token punctuation"},".")]),(0,e.Uk)("RequestMappingHandlerMapping")]),(0,e._)("span",{class:"token annotation punctuation"},"@1033fc8c"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},[(0,e._)("span",{class:"token namespace"},[(0,e.Uk)("org"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("springframework"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("web"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("servlet"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("handler"),(0,e._)("span",{class:"token punctuation"},".")]),(0,e.Uk)("BeanNameUrlHandlerMapping")]),(0,e._)("span",{class:"token annotation punctuation"},"@1ef400fa"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},[(0,e._)("span",{class:"token namespace"},[(0,e.Uk)("org"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("springframework"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("web"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("servlet"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("handler"),(0,e._)("span",{class:"token punctuation"},".")]),(0,e.Uk)("SimpleUrlHandlerMapping")]),(0,e._)("span",{class:"token annotation punctuation"},"@1acb97fc"),(0,e._)("span",{class:"token punctuation"},"]"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br")])]),(0,e._)("p",null,[(0,e.Uk)("获取"),(0,e._)("code",null,"HandlerExecutionChain"),(0,e.Uk)("对象方法分析")]),(0,e._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,e._)("pre",{class:"language-java"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"public"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"final"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"HandlerExecutionChain"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"getHandler"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token class-name"},"HttpServletRequest"),(0,e.Uk)(" request"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"throws"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"Exception"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token class-name"},"Object"),(0,e.Uk)(" handler "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"this"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"getHandlerInternal"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("request"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("handler "),(0,e._)("span",{class:"token operator"},"=="),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"null"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n        handler "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"this"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"getDefaultHandler"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br")])]),(0,e._)("p",null,[(0,e._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210601173335831.png?x-oss-process=style/pictureProcess1",data:"aurora"})]),(0,e._)("p",null,[(0,e.Uk)("从图中，可以看到，执行"),(0,e._)("code",null,"Object handler = this.getHandlerInternal(request);"),(0,e.Uk)("方法时，返回的对象就是控制器对象，并且对象中，保存了控制器对象中的方法，这个方法就是我们请求的时候，对应的那个方法")]),(0,e._)("p",null,"最终"),(0,e._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,e._)("pre",{class:"language-java"},[(0,e._)("code",null,[(0,e._)("span",{class:"token class-name"},"HandlerExecutionChain"),(0,e.Uk)(" mappedHandler "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"this"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"getHandler"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("processedRequest"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token comment"},"//mappedHandler=HandlerExecutionChain with [vin.cco.controller.MyControllerParameter#doAuto(String, Integer)] and 2 interceptors"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br")])]),(0,e._)("p",null,[(0,e.Uk)("所以处理器执行链"),(0,e._)("code",null,"HandlerExecutionChain"),(0,e.Uk)("中存放了控制器对象（当前请求对应的控制器对象）")])]),(0,e._)("li",null,[(0,e._)("p",null,[(0,e._)("code",null,"DispatcherServlet"),(0,e.Uk)("把2中的处理器执行链中的处理器对象交给适配器对象，存在多个")]),(0,e._)("p",null,[(0,e.Uk)("处理器适配器：springmvc框架中的对象，需要实现"),(0,e._)("code",null,"HandlerAdapter"),(0,e.Uk)("接口")]),(0,e._)("p",null,[(0,e.Uk)("作用：执行处理器方法（调用"),(0,e._)("code",null,"Controller类中的方法"),(0,e.Uk)("），从而通过方法得到返回值"),(0,e._)("code",null,"ModeAndView"),(0,e.Uk)("，这个过程就是")]),(0,e._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,e._)("pre",{class:"language-java"},[(0,e._)("code",null,[(0,e._)("span",{class:"token class-name"},"HandlerAdapter"),(0,e.Uk)(" ha "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"this"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"getHandlerAdapter"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("mappedHandler"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"getHandler"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},"//获取ModeAndView对象"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token class-name"},"ModeAndView"),(0,e.Uk)(" mv "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" ha"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"handle"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("processedRequest"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" response"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" mappedHandler"),(0,e._)("span",{class:"token punctuation"},"."),(0,e._)("span",{class:"token function"},"getHandler"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token comment"},'//结果ModelAndView [view="parameter"; model={name=sdf, age=2}]'),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br")])]),(0,e._)("p",null,[(0,e._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210601184213286.png?x-oss-process=style/pictureProcess1",data:"aurora"})])]),(0,e._)("li",null,[(0,e._)("p",null,[(0,e._)("code",null,"DispatcherServlet"),(0,e.Uk)("把3中获取的"),(0,e._)("code",null,"ModeAndView"),(0,e.Uk)("交给视图解析器对象")]),(0,e._)("p",null,[(0,e.Uk)("视图解析器：springmvc中的对象，需要实现"),(0,e._)("code",null,"ViewResoler"),(0,e.Uk)("接口（可以存在多个）")]),(0,e._)("p",null,[(0,e._)("code",null,"View"),(0,e.Uk)("是一个接口，表示视图的，在框架中jsp，HTML不是String表示，而是使用"),(0,e._)("code",null,"View"),(0,e.Uk)("和他的实现类表示视图")]),(0,e._)("p",null,[(0,e._)("code",null,"InternalResourceView"),(0,e.Uk)("：视图类，表示jsp文件，视图解析器会创建"),(0,e._)("code",null,"InternalResourceView"),(0,e.Uk)("对象，这个对象里面存在属性"),(0,e._)("code",null,"url = .....*jsp"),(0,e.Uk)("，路径")])]),(0,e._)("li",null,[(0,e._)("p",null,[(0,e._)("code",null,"DispatcherServlet"),(0,e.Uk)("把4步骤中创建的View对象获取到，调用view类中的方法，把Model数据放入到requers作用域中，执行视图的forward，现在请求就已经结束了")])])],-1),p=(0,e.uE)("<blockquote><p>（1）浏览器提交请求到中央调度器</p><p>（2）中央调度器直接将请求转给处理器映射器。</p><p>（3）处理器映射器会根据请求，找到处理该请求的处理器，并将其封装为处理器执行链后</p><p>返回给中央调度器。</p><p>（4）中央调度器根据处理器执行链中的处理器，找到能够执行该处理器的处理器适配器。</p><p>（5）处理器适配器调用执行处理器。</p><p>（6）处理器将处理结果及要跳转的视图封装到一个对象 ModelAndView 中，并将其返回给</p><p>处理器适配器。</p><p>（7）处理器适配器直接将结果返回给中央调度器。</p><p>（8）中央调度器调用视图解析器，将 ModelAndView 中的视图名称封装为视图对象。</p><p>（9）视图解析器将封装了的视图对象返回给中央调度器</p><p>（10）中央调度器调用视图对象，让其自己进行渲染，即进行数据填充，形成响应对象。</p><p>（11）中央调度器响应浏览器。</p></blockquote><p>这个过程最好自己整理一下，可能面试会问到</p>",2),u={},i=(0,s(83744).Z)(u,[["render",function(n,a){return(0,e.wg)(),(0,e.iD)(e.HY,null,[l,t,o,c,p],64)}]])}}]);
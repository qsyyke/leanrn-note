"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1449],{34180:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-53824749",path:"/spring/springboot/%E5%90%AF%E5%8A%A8%E5%8E%9F%E7%90%86.html",title:"springboot启动原理分析",lang:"en-US",frontmatter:{tag:["源码分析","高级特性"]},excerpt:"",headers:[{level:2,title:"创建SpringApplication",slug:"创建springapplication",children:[]},{level:2,title:"运行SpringApplication",slug:"运行springapplication",children:[]}],git:{updatedTime:1654857597e3,contributors:[{name:"qsyyke",email:"2291308094@qq.com",commits:1}]}}},52393:(n,s,a)=>{a.r(s),a.d(s,{default:()=>_});var p=a(66252);const t=(0,p._)("h1",{id:"springboot启动原理分析",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#springboot启动原理分析","aria-hidden":"true"},"#"),(0,p.Uk)(" springboot启动原理分析")],-1),e=(0,p._)("h2",{id:"创建springapplication",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#创建springapplication","aria-hidden":"true"},"#"),(0,p.Uk)(" 创建"),(0,p._)("strong",null,"SpringApplication")],-1),o=(0,p._)("ol",null,[(0,p._)("li",null,[(0,p._)("p",null,[(0,p.Uk)("进入"),(0,p._)("code",null,"SpringApplication"),(0,p.Uk)("时，会初始化参数")])]),(0,p._)("li",null,[(0,p._)("p",null,[(0,p.Uk)("执行构造方法"),(0,p._)("code",null,"SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources)")])]),(0,p._)("li",null,[(0,p._)("p",null,"this.webApplicationType = WebApplicationType.deduceFromClasspath()就是判断当前web应用的类型，是响应式的还是servlet")]),(0,p._)("li",null,[(0,p._)("p",null,"this.bootstrapRegistryInitializers = getBootstrapRegistryInitializersFromSpringFactories()"),(0,p._)("p",null,[(0,p.Uk)("在该项目的所有依赖中的"),(0,p._)("code",null,"spring.factories"),(0,p.Uk)("文件中，寻找Bootstrapper，也就像这个一样")]),(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210710221531976.png?x-oss-process=style/pictureProcess1",data:"aurora"})]),(0,p._)("p",null,"根据EnableAutoConfiguration进行查找"),(0,p._)("p",null,"getSpringFactoriesInstances(type, new Class<?>[] {})")]),(0,p._)("li",null,[(0,p._)("p",null,"setInitializers((Collection) getSpringFactoriesInstances(ApplicationContextInitializer.class))同样也是在factories中，查找ApplicationContextInitializer.class")]),(0,p._)("li",null,[(0,p._)("p",null,"this.mainApplicationClass = deduceMainApplicationClass()寻找主类方法，也就是含有main方法的类"),(0,p._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,p._)("pre",{class:"language-java"},[(0,p._)("code",null,[(0,p._)("span",{class:"token keyword"},"private"),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},"Class"),(0,p._)("span",{class:"token generics"},[(0,p._)("span",{class:"token punctuation"},"<"),(0,p._)("span",{class:"token operator"},"?"),(0,p._)("span",{class:"token punctuation"},">")]),(0,p.Uk)(),(0,p._)("span",{class:"token function"},"deduceMainApplicationClass"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token punctuation"},")"),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"{"),(0,p.Uk)("\n    "),(0,p._)("span",{class:"token keyword"},"try"),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"{"),(0,p.Uk)("\n        "),(0,p._)("span",{class:"token class-name"},"StackTraceElement"),(0,p._)("span",{class:"token punctuation"},"["),(0,p._)("span",{class:"token punctuation"},"]"),(0,p.Uk)(" stackTrace "),(0,p._)("span",{class:"token operator"},"="),(0,p.Uk)(),(0,p._)("span",{class:"token keyword"},"new"),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},"RuntimeException"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"getStackTrace"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n        "),(0,p._)("span",{class:"token keyword"},"for"),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token class-name"},"StackTraceElement"),(0,p.Uk)(" stackTraceElement "),(0,p._)("span",{class:"token operator"},":"),(0,p.Uk)(" stackTrace"),(0,p._)("span",{class:"token punctuation"},")"),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"{"),(0,p.Uk)("\n            "),(0,p._)("span",{class:"token keyword"},"if"),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token string"},'"main"'),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"equals"),(0,p._)("span",{class:"token punctuation"},"("),(0,p.Uk)("stackTraceElement"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"getMethodName"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},")"),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"{"),(0,p.Uk)("\n                "),(0,p._)("span",{class:"token keyword"},"return"),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},"Class"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"forName"),(0,p._)("span",{class:"token punctuation"},"("),(0,p.Uk)("stackTraceElement"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"getClassName"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n            "),(0,p._)("span",{class:"token punctuation"},"}"),(0,p.Uk)("\n        "),(0,p._)("span",{class:"token punctuation"},"}"),(0,p.Uk)("\n    "),(0,p._)("span",{class:"token punctuation"},"}"),(0,p.Uk)("\n    "),(0,p._)("span",{class:"token keyword"},"catch"),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token class-name"},"ClassNotFoundException"),(0,p.Uk)(" ex"),(0,p._)("span",{class:"token punctuation"},")"),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"{"),(0,p.Uk)("\n        "),(0,p._)("span",{class:"token comment"},"// Swallow and continue"),(0,p.Uk)("\n    "),(0,p._)("span",{class:"token punctuation"},"}"),(0,p.Uk)("\n    "),(0,p._)("span",{class:"token keyword"},"return"),(0,p.Uk)(),(0,p._)("span",{class:"token keyword"},"null"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n"),(0,p._)("span",{class:"token punctuation"},"}"),(0,p.Uk)("\n")])]),(0,p._)("div",{class:"line-numbers"},[(0,p._)("span",{class:"line-number"},"1"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"2"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"3"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"4"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"5"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"6"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"7"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"8"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"9"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"10"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"11"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"12"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"13"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"14"),(0,p._)("br")])]),(0,p._)("p",null,'"main".equals(stackTraceElement.getMethodName()如果循环到的类，方法名是main，那么就是主类，并且会使用这个主类创建一个对象')])],-1),c=(0,p._)("blockquote",null,[(0,p._)("p",null,"上面的创建SpringApplication的过程，其实就是return new SpringApplication(primarySources).run(args)中的new SpringApplication(primarySources)过程，当创建springApplication完成后，就会调用后面的run()方法运行springapplication")],-1),l=(0,p._)("h2",{id:"运行springapplication",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#运行springapplication","aria-hidden":"true"},"#"),(0,p.Uk)(" 运行"),(0,p._)("strong",null,"SpringApplication")],-1),i=(0,p._)("ol",null,[(0,p._)("li",null,[(0,p._)("p",null,"记录应用启动的开始时间"),(0,p._)("p",null,"stopWatch.start()")]),(0,p._)("li",null,[(0,p._)("p",null,"创建Bootstrap，这个Bootstrap就是我们从spring.factories中配置的"),(0,p._)("p",null,"DefaultBootstrapContext bootstrapContext = createBootstrapContext()"),(0,p._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,p._)("pre",{class:"language-java"},[(0,p._)("code",null,[(0,p._)("span",{class:"token keyword"},"private"),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},"DefaultBootstrapContext"),(0,p.Uk)(),(0,p._)("span",{class:"token function"},"createBootstrapContext"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token punctuation"},")"),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"{"),(0,p.Uk)("\n    "),(0,p._)("span",{class:"token class-name"},"DefaultBootstrapContext"),(0,p.Uk)(" bootstrapContext "),(0,p._)("span",{class:"token operator"},"="),(0,p.Uk)(),(0,p._)("span",{class:"token keyword"},"new"),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},"DefaultBootstrapContext"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n    "),(0,p._)("span",{class:"token keyword"},"this"),(0,p._)("span",{class:"token punctuation"},"."),(0,p.Uk)("bootstrapRegistryInitializers"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"forEach"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token punctuation"},"("),(0,p.Uk)("initializer"),(0,p._)("span",{class:"token punctuation"},")"),(0,p.Uk)(),(0,p._)("span",{class:"token operator"},"->"),(0,p.Uk)(" initializer"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"initialize"),(0,p._)("span",{class:"token punctuation"},"("),(0,p.Uk)("bootstrapContext"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n    "),(0,p._)("span",{class:"token keyword"},"return"),(0,p.Uk)(" bootstrapContext"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n"),(0,p._)("span",{class:"token punctuation"},"}"),(0,p.Uk)("\n")])]),(0,p._)("div",{class:"line-numbers"},[(0,p._)("span",{class:"line-number"},"1"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"2"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"3"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"4"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"5"),(0,p._)("br")])]),(0,p._)("p",null,[(0,p.Uk)("获取到所有之前的 "),(0,p._)("strong",null,"bootstrappers 挨个执行"),(0,p.Uk)(" intitialize() 来完成对引导启动器上下文环境设置")])]),(0,p._)("li",null,[(0,p._)("p",null,"让当前应用进入headless模式"),(0,p._)("p",null,"configureHeadlessProperty()----\x3e java.awt.headless...")]),(0,p._)("li",null,[(0,p._)("p",null,"获取当前程序的运行监听器"),(0,p._)("p",null,[(0,p.Uk)("SpringApplicationRunListeners listeners = getRunListeners(args)，是从"),(0,p._)("code",null,"spring.factories"),(0,p.Uk)("中调用getSpringFactoriesInstances()拿取的 SpringApplicationRunListener")]),(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210711095042913.png?x-oss-process=style/pictureProcess1",data:"aurora"})])])],-1),u=(0,p.uE)('<p>​ 在此文件中，也是存在一个</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code># <span class="token class-name">Run</span> <span class="token class-name">Listeners</span>\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span>SpringApplicationRunListener</span><span class="token operator">=</span>\\\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>context<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span>EventPublishingRunListener</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',2),r=(0,p._)("ol",{start:"5"},[(0,p._)("li",null,[(0,p._)("p",null,[(0,p.Uk)("遍历 "),(0,p._)("strong",null,"SpringApplicationRunListener 调用 starting 方法；")]),(0,p._)("p",null,"相当于通知所有感兴趣系统正在启动过程的人，项目正在 starting"),(0,p._)("p",null,"listeners.starting(bootstrapContext, this.mainApplicationClass)")]),(0,p._)("li",null,[(0,p._)("p",null,"保存命令行参数"),(0,p._)("p",null,"ApplicationArguments applicationArguments = new DefaultApplicationArguments(args)")]),(0,p._)("li",null,[(0,p._)("p",null,"准备环境 prepareEnvironment（）;"),(0,p._)("p",null,[(0,p.Uk)("返回或者创建基础环境信息对象。"),(0,p._)("strong",null,"StandardServletEnvironment")]),(0,p._)("p",null,[(0,p._)("strong",null,"配置环境信息对象。")]),(0,p._)("ul",null,[(0,p._)("li",null,[(0,p._)("strong",null,"读取所有的配置源的配置属性值。")])]),(0,p._)("p",null,"绑定环境信息 监听器调用 listener.environmentPrepared()；通知所有的监听器当前环境准备完成")]),(0,p._)("li",null,[(0,p._)("p",null,"创建ioc容器，这是最重要的一步，根据当前的web应用类型，是servlet还是其他的，创建对应容器"),(0,p._)("p",null,"context = createApplicationContext()"),(0,p._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,p._)("pre",{class:"language-java"},[(0,p._)("code",null,[(0,p._)("span",{class:"token class-name"},"ApplicationContextFactory"),(0,p.Uk)(" DEFAULT "),(0,p._)("span",{class:"token operator"},"="),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"("),(0,p.Uk)("webApplicationType"),(0,p._)("span",{class:"token punctuation"},")"),(0,p.Uk)(),(0,p._)("span",{class:"token operator"},"->"),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"{"),(0,p.Uk)("\n    "),(0,p._)("span",{class:"token keyword"},"try"),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"{"),(0,p.Uk)("\n        "),(0,p._)("span",{class:"token keyword"},"switch"),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"("),(0,p.Uk)("webApplicationType"),(0,p._)("span",{class:"token punctuation"},")"),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"{"),(0,p.Uk)("\n            "),(0,p._)("span",{class:"token keyword"},"case"),(0,p.Uk)(" SERVLET"),(0,p._)("span",{class:"token operator"},":"),(0,p.Uk)("\n                "),(0,p._)("span",{class:"token keyword"},"return"),(0,p.Uk)(),(0,p._)("span",{class:"token keyword"},"new"),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},"AnnotationConfigServletWebServerApplicationContext"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n            "),(0,p._)("span",{class:"token keyword"},"case"),(0,p.Uk)(" REACTIVE"),(0,p._)("span",{class:"token operator"},":"),(0,p.Uk)("\n                "),(0,p._)("span",{class:"token keyword"},"return"),(0,p.Uk)(),(0,p._)("span",{class:"token keyword"},"new"),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},"AnnotationConfigReactiveWebServerApplicationContext"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n            "),(0,p._)("span",{class:"token keyword"},"default"),(0,p._)("span",{class:"token operator"},":"),(0,p.Uk)("\n                "),(0,p._)("span",{class:"token keyword"},"return"),(0,p.Uk)(),(0,p._)("span",{class:"token keyword"},"new"),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},"AnnotationConfigApplicationContext"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n        "),(0,p._)("span",{class:"token punctuation"},"}"),(0,p.Uk)("\n    "),(0,p._)("span",{class:"token punctuation"},"}"),(0,p.Uk)("\n    "),(0,p._)("span",{class:"token keyword"},"catch"),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token class-name"},"Exception"),(0,p.Uk)(" ex"),(0,p._)("span",{class:"token punctuation"},")"),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"{"),(0,p.Uk)("\n        "),(0,p._)("span",{class:"token keyword"},"throw"),(0,p.Uk)(),(0,p._)("span",{class:"token keyword"},"new"),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},"IllegalStateException"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token string"},'"Unable create a default ApplicationContext instance, "'),(0,p.Uk)("\n                                        "),(0,p._)("span",{class:"token operator"},"+"),(0,p.Uk)(),(0,p._)("span",{class:"token string"},'"you may need a custom ApplicationContextFactory"'),(0,p._)("span",{class:"token punctuation"},","),(0,p.Uk)(" ex"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n    "),(0,p._)("span",{class:"token punctuation"},"}"),(0,p.Uk)("\n"),(0,p._)("span",{class:"token punctuation"},"}"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n")])]),(0,p._)("div",{class:"line-numbers"},[(0,p._)("span",{class:"line-number"},"1"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"2"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"3"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"4"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"5"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"6"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"7"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"8"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"9"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"10"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"11"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"12"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"13"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"14"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"15"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"16"),(0,p._)("br")])])]),(0,p._)("li",null,[(0,p._)("p",null,"准备当前容器的基本信息"),(0,p._)("p",null,"prepareContext(bootstrapContext, context, environment, listeners, applicationArguments, printedBanner)"),(0,p._)("ul",null,[(0,p._)("li",null,[(0,p._)("p",null,"设置环境")]),(0,p._)("li",null,[(0,p._)("p",null,"ioc容器的后置处理流程"),(0,p._)("p",null,"postProcessApplicationContext(context)")]),(0,p._)("li",null,[(0,p._)("p",null,"应用初始化器---\x3eapplyInitializers(context)"),(0,p._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,p._)("pre",{class:"language-java"},[(0,p._)("code",null,[(0,p._)("span",{class:"token keyword"},"protected"),(0,p.Uk)(),(0,p._)("span",{class:"token keyword"},"void"),(0,p.Uk)(),(0,p._)("span",{class:"token function"},"applyInitializers"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token class-name"},"ConfigurableApplicationContext"),(0,p.Uk)(" context"),(0,p._)("span",{class:"token punctuation"},")"),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"{"),(0,p.Uk)("\n    "),(0,p._)("span",{class:"token keyword"},"for"),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token class-name"},"ApplicationContextInitializer"),(0,p.Uk)(" initializer "),(0,p._)("span",{class:"token operator"},":"),(0,p.Uk)(),(0,p._)("span",{class:"token function"},"getInitializers"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},")"),(0,p.Uk)(),(0,p._)("span",{class:"token punctuation"},"{"),(0,p.Uk)("\n        "),(0,p._)("span",{class:"token class-name"},"Class"),(0,p._)("span",{class:"token generics"},[(0,p._)("span",{class:"token punctuation"},"<"),(0,p._)("span",{class:"token operator"},"?"),(0,p._)("span",{class:"token punctuation"},">")]),(0,p.Uk)(" requiredType "),(0,p._)("span",{class:"token operator"},"="),(0,p.Uk)(),(0,p._)("span",{class:"token class-name"},"GenericTypeResolver"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"resolveTypeArgument"),(0,p._)("span",{class:"token punctuation"},"("),(0,p.Uk)("initializer"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"getClass"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},","),(0,p.Uk)("\n                                                                        "),(0,p._)("span",{class:"token class-name"},"ApplicationContextInitializer"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token keyword"},"class"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n        "),(0,p._)("span",{class:"token class-name"},"Assert"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"isInstanceOf"),(0,p._)("span",{class:"token punctuation"},"("),(0,p.Uk)("requiredType"),(0,p._)("span",{class:"token punctuation"},","),(0,p.Uk)(" context"),(0,p._)("span",{class:"token punctuation"},","),(0,p.Uk)(),(0,p._)("span",{class:"token string"},'"Unable to call initializer."'),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n        initializer"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"initialize"),(0,p._)("span",{class:"token punctuation"},"("),(0,p.Uk)("context"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n    "),(0,p._)("span",{class:"token punctuation"},"}"),(0,p.Uk)("\n"),(0,p._)("span",{class:"token punctuation"},"}"),(0,p.Uk)("\n")])]),(0,p._)("div",{class:"line-numbers"},[(0,p._)("span",{class:"line-number"},"1"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"2"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"3"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"4"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"5"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"6"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"7"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"8"),(0,p._)("br")])]),(0,p._)("ul",null,[(0,p._)("li",null,[(0,p._)("p",null,[(0,p.Uk)("遍历所有的 "),(0,p._)("strong",null,"ApplicationContextInitializer 。调用"),(0,p.Uk)(),(0,p._)("strong",null,"initialize.。来对ioc容器进行初始化扩展功能")]),(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210711100540227.png?x-oss-process=style/pictureProcess1",data:"aurora"})])]),(0,p._)("li",null,[(0,p._)("p",null,[(0,p.Uk)("遍历所有的 listener 调用 "),(0,p._)("strong",null,"contextPrepared。EventPublishRunListenr；通知所有的监听器****contextPrepared")])])])]),(0,p._)("li",null,[(0,p._)("p",null,[(0,p._)("strong",null,"所有的监听器 调用"),(0,p.Uk)(),(0,p._)("strong",null,"contextLoaded。通知所有的监听器"),(0,p.Uk)(),(0,p._)("strong",null,"contextLoaded；")]),(0,p._)("p",null,"listeners.contextPrepared(context)")]),(0,p._)("li",null,[(0,p._)("p",null,"得到所有的bean，并且注册"),(0,p._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,p._)("pre",{class:"language-java"},[(0,p._)("code",null,[(0,p._)("span",{class:"token class-name"},"ConfigurableListableBeanFactory"),(0,p.Uk)(" beanFactory "),(0,p._)("span",{class:"token operator"},"="),(0,p.Uk)(" context"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"getBeanFactory"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\nbeanFactory"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"registerSingleton"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token string"},'"springApplicationArguments"'),(0,p._)("span",{class:"token punctuation"},","),(0,p.Uk)(" applicationArguments"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n")])]),(0,p._)("div",{class:"line-numbers"},[(0,p._)("span",{class:"line-number"},"1"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"2"),(0,p._)("br")])])])])]),(0,p._)("li",null,[(0,p._)("p",null,"**刷新IOC容器。**refreshContext()"),(0,p._)("p",null,"创建容器中的所有组件（Spring注解")]),(0,p._)("li",null,[(0,p._)("p",null,"容器刷新完成后工作？afterRefresh")]),(0,p._)("li",null,[(0,p._)("p",null,[(0,p.Uk)("所有监听 器 调用 listeners."),(0,p._)("strong",null,"started"),(0,p.Uk)("(context); "),(0,p._)("strong",null,"通知所有的监听器"),(0,p.Uk)(),(0,p._)("strong",null,"started")])]),(0,p._)("li",null,[(0,p._)("p",null,"*调用所有runners；**callRunners()")])],-1),k=(0,p.uE)('<ul><li><p><strong>获取容器中的</strong> <strong>ApplicationRunner</strong></p></li><li><p><strong>获取容器中的</strong> <strong>CommandLineRunner</strong></p></li><li><p><strong>合并所有runner并且按照@Order进行排序</strong></p></li><li><p><strong>遍历所有的runner。调用 run</strong> <strong>方法</strong></p></li></ul><ol start="14"><li>如果以上有异常，**</li></ol><ul><li><strong>调用Listener 的 failed</strong></li></ul><ol start="15"><li><strong>调用所有监听器的 running 方法</strong> listeners.running(context); <strong>通知所有的监听器</strong> <strong>running</strong></li><li>**running如果有问题。继续通知 failed 。**<strong>调用所有 Listener 的</strong> **failed；**<strong>通知所有的监听器</strong> <strong>failed</strong></li></ol><h1 id="自定义事件监听事件组" tabindex="-1"><a class="header-anchor" href="#自定义事件监听事件组" aria-hidden="true">#</a> 自定义事件监听事件组</h1><p>我们自定义事件监听，只需要考虑程序启动的时候，是去哪里找到这个监听器就行，在程序启动的时候，监听器会从<code>spring.factories</code>和context容器中进行拿取</p><p>其中，从<code>spring.factories</code>中拿取的有</p><blockquote><p>org.springframework.context.ApplicationContextInitializer</p><p>org.springframework.context.ApplicationListener</p><p>org.springframework.boot.SpringApplicationRunListener</p><p>这三个</p></blockquote><p>从容器中拿取的有</p><blockquote><p>CommandLineRunner</p><p>ApplicationRunner</p></blockquote><p>因为有三个需要从<code>spring.factories</code>中拿取，所以我们就要在<code>META-INF</code>下创建一个<code>spring.factories</code>文件</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">cn<span class="token punctuation">.</span>vipblogs<span class="token punctuation">.</span>test<span class="token punctuation">.</span>listener</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">ApplicationContextInitializer</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">ConfigurableApplicationContext</span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyApplicationContextInitializer</span> <span class="token keyword">implements</span> <span class="token class-name">ApplicationContextInitializer</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">initialize</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MyApplicationContextInitializer ....initialize.... &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">package</span> <span class="token namespace">cn<span class="token punctuation">.</span>vipblogs<span class="token punctuation">.</span>test<span class="token punctuation">.</span>listener</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">ApplicationEvent</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">ApplicationListener</span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyApplicationListener</span> <span class="token keyword">implements</span> <span class="token class-name">ApplicationListener</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onApplicationEvent</span><span class="token punctuation">(</span><span class="token class-name">ApplicationEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MyApplicationListener.....onApplicationEvent...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">package</span> <span class="token namespace">cn<span class="token punctuation">.</span>vipblogs<span class="token punctuation">.</span>test<span class="token punctuation">.</span>listener</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">ApplicationArguments</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">ApplicationRunner</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Order</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span><span class="token punctuation">;</span>\n\n\n<span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Component</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyApplicationRunner</span> <span class="token keyword">implements</span> <span class="token class-name">ApplicationRunner</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ApplicationArguments</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MyApplicationRunner...run...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">package</span> <span class="token namespace">cn<span class="token punctuation">.</span>vipblogs<span class="token punctuation">.</span>test<span class="token punctuation">.</span>listener</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">CommandLineRunner</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Order</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span><span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\n * 应用启动做一个一次性事情\n */</span>\n<span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Component</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyCommandLineRunner</span> <span class="token keyword">implements</span> <span class="token class-name">CommandLineRunner</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MyCommandLineRunner....run....&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">package</span> <span class="token namespace">cn<span class="token punctuation">.</span>vipblogs<span class="token punctuation">.</span>test<span class="token punctuation">.</span>listener</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">ConfigurableBootstrapContext</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplicationRunListener</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">ConfigurableApplicationContext</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>env<span class="token punctuation">.</span></span><span class="token class-name">ConfigurableEnvironment</span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MySpringApplicationRunListener</span> <span class="token keyword">implements</span> <span class="token class-name">SpringApplicationRunListener</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">private</span> <span class="token class-name">SpringApplication</span> application<span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token class-name">MySpringApplicationRunListener</span><span class="token punctuation">(</span><span class="token class-name">SpringApplication</span> application<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>application <span class="token operator">=</span> application<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">starting</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableBootstrapContext</span> bootstrapContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MySpringApplicationRunListener....starting....&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">environmentPrepared</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableBootstrapContext</span> bootstrapContext<span class="token punctuation">,</span> <span class="token class-name">ConfigurableEnvironment</span> environment<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MySpringApplicationRunListener....environmentPrepared....&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">contextPrepared</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableApplicationContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MySpringApplicationRunListener....contextPrepared....&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">contextLoaded</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableApplicationContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MySpringApplicationRunListener....contextLoaded....&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">started</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableApplicationContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MySpringApplicationRunListener....started....&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">running</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableApplicationContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MySpringApplicationRunListener....running....&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">failed</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableApplicationContext</span> context<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> exception<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MySpringApplicationRunListener....failed....&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span>ApplicationContextInitializer</span><span class="token operator">=</span>\\\n  <span class="token class-name"><span class="token namespace">cn<span class="token punctuation">.</span>vipblogs<span class="token punctuation">.</span>test<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span>MyApplicationContextInitializer</span>\n\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span>ApplicationListener</span><span class="token operator">=</span>\\\n  <span class="token class-name"><span class="token namespace">cn<span class="token punctuation">.</span>vipblogs<span class="token punctuation">.</span>test<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span>MyApplicationListener</span>\n\n<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span>SpringApplicationRunListener</span><span class="token operator">=</span>\\\n  <span class="token class-name"><span class="token namespace">cn<span class="token punctuation">.</span>vipblogs<span class="token punctuation">.</span>test<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span>MySpringApplicationRunListener</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>从启动打印就可以看出，他们执行的时机</p>',14),b=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210711103426344.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),m={},_=(0,a(83744).Z)(m,[["render",function(n,s){return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,e,o,c,l,i,u,r,k,b],64)}]])}}]);
"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[7263],{29030:(e,s,l)=>{l.r(s),l.d(s,{data:()=>t});const t={key:"v-777e3538",path:"/redis/Redis5%E7%A7%8D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html",title:"Redis5种数据结构",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"字符串类型 string",slug:"字符串类型-string",children:[]},{level:2,title:"列表类型  list",slug:"列表类型-list",children:[]},{level:2,title:"集合类型 set",slug:"集合类型-set",children:[]},{level:2,title:"哈希类型  hash",slug:"哈希类型-hash",children:[]},{level:2,title:"有序集合类型 zset (sorted set)",slug:"有序集合类型-zset-sorted-set",children:[]},{level:2,title:"查询所有的key(*号可以是一个，也可以查看多个)",slug:"查询所有的key-号可以是一个-也可以查看多个",children:[]},{level:2,title:"?号通配符",slug:"号通配符",children:[]},{level:2,title:"[]通配符",slug:"通配符",children:[]},{level:2,title:"exists判断某个key值是否存在",slug:"exists判断某个key值是否存在",children:[]},{level:2,title:"move key index",slug:"move-key-index",children:[]},{level:2,title:"ttl key",slug:"ttl-key",children:[]},{level:2,title:"设置key值的剩余时间",slug:"设置key值的剩余时间",children:[]},{level:2,title:"语法：type key",slug:"语法-type-key",children:[]},{level:2,title:"rename key newkey",slug:"rename-key-newkey",children:[]},{level:2,title:"del",slug:"del",children:[]},{level:2,title:"set",slug:"set",children:[]},{level:2,title:"get",slug:"get",children:[]},{level:2,title:"append",slug:"append",children:[]},{level:2,title:"strlen",slug:"strlen",children:[]},{level:2,title:"incr",slug:"incr",children:[]},{level:2,title:"decr",slug:"decr",children:[]},{level:2,title:"incrby",slug:"incrby",children:[]},{level:2,title:"decrby",slug:"decrby",children:[]},{level:2,title:"getrange",slug:"getrange",children:[]},{level:2,title:"setrange",slug:"setrange",children:[]},{level:2,title:"setex",slug:"setex",children:[]},{level:2,title:"setnx",slug:"setnx",children:[]},{level:2,title:"mset",slug:"mset",children:[]},{level:2,title:"mget",slug:"mget",children:[]},{level:2,title:"msetnx",slug:"msetnx",children:[]}],git:{updatedTime:1654857597e3,contributors:[{name:"qsyyke",email:"2291308094@qq.com",commits:1}]}}},57073:(e,s,l)=>{l.r(s),l.d(s,{default:()=>ts});var t=l(66252);const r=(0,t._)("h1",{id:"redis5种数据结构",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#redis5种数据结构","aria-hidden":"true"},"#"),(0,t.Uk)(" Redis5种数据结构")],-1),n=(0,t._)("p",null,"程序是用来处理数据的，Redis是用来存储数据的；程序处理完的数据要存储到redis中，不同特点的数据要存储在Redis中不同类型的数据结构中。",-1),i=(0,t._)("h2",{id:"字符串类型-string",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#字符串类型-string","aria-hidden":"true"},"#"),(0,t.Uk)(" 字符串类型 string")],-1),a=(0,t._)("p",null,"字符串类型是Redis中最基本的数据结构，它能存储任何类型的数据，包括二进制数",-1),c=(0,t._)("p",null,"据，序列化后的数据，JSON化的对象甚至是一张图片。最大512M。",-1),p=(0,t._)("p",null,[(0,t._)("code",null,"这种存储方式，一个K只能存储一个value")],-1),d=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps7.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),o=(0,t._)("h2",{id:"列表类型-list",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#列表类型-list","aria-hidden":"true"},"#"),(0,t.Uk)(" 列表类型 list")],-1),u=(0,t._)("p",null,"Redis列表是简单的字符串列表，按照插入顺序排序，元素可以重复。你可以添加一个元素到列表的头部（左边）或者尾部（右边）,底层是个链表结构。",-1),h=(0,t._)("p",null,[(0,t._)("code",null,"一个K可以存储多个value"),(0,t.Uk)("，并且是有序的，因为取的时候是通过下标进行取的")],-1),y=(0,t._)("p",null,"这是一种链表的结构",-1),g=(0,t._)("p",null,"像java中的那样，通过K找到存储在哪个下标，然后在添加到这个下标上的链表上",-1),k=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps8.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),x=(0,t._)("h2",{id:"集合类型-set",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#集合类型-set","aria-hidden":"true"},"#"),(0,t.Uk)(" 集合类型 set")],-1),_=(0,t._)("p",null,"Redis的Set是string类型的无序无重复集合。",-1),b=(0,t._)("p",null,[(0,t._)("code",null,"一个K，多个value"),(0,t.Uk)("，这是一种无序的，但是存储的数据是有序，存进去的数据顺序和取出来的循序是不同的")],-1),m=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps9.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),v=(0,t._)("h2",{id:"哈希类型-hash",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#哈希类型-hash","aria-hidden":"true"},"#"),(0,t.Uk)(" 哈希类型 hash")],-1),f=(0,t._)("p",null,"​ Redis hash 是一个string类型的field和value的映射表，hash特别适合用于存储对象。",-1),z=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps10.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),j=(0,t._)("h2",{id:"有序集合类型-zset-sorted-set",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#有序集合类型-zset-sorted-set","aria-hidden":"true"},"#"),(0,t.Uk)(" 有序集合类型 zset (sorted set)")],-1),w=(0,t._)("p",null,"Redis 有序集合zset和集合set一样也是string类型元素的集合，且不允许重复的成员。",-1),q=(0,t._)("p",null,"不同的是zset的每个元素都会关联一个分数（分数可以重复），redis通过分数来为集合中的成员进行从小到大的排序。",-1),S=(0,t._)("p",null,[(0,t._)("code",null,"无序，存进去的顺序和取出来的顺序不用，但是里面的数据，是按照一定的顺序进行存储的")],-1),U=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps11.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),P=(0,t.uE)('<blockquote><p>字符串:zhangsan 20 true tring 单key:单value: username:zhangsan age:20 list列表:13900009999 zs@163.com 321321 list 单key:多有序value: contacts:13900009999,xxx,xxxx set集合:beijing shanghai chongqing tianjin set 单key:多无序value:city:bj sh cq tj pojo:id :1001,name:zhangsan,age:20 hash 单key: 对象(属性:值): student🆔1001,name:zhangsan,age:20 zset 单key:多有序vlaue: city: 1000 tj,1200 cq,1500 sh,2000 bj</p></blockquote><h1 id="redis中key的常用命令" tabindex="-1"><a class="header-anchor" href="#redis中key的常用命令" aria-hidden="true">#</a> Redis中key的常用命令</h1><p>查询Redis库中的key值，可以使用命令</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>语法：keys pattern\n作用：查找所有符合模式pattern的key.  pattern可以使用通配符。\n通配符：\n*：表示0或多个字符，例如：keys * 查询所有的key。\n？：表示单个字符，例如：wo?d , 匹配 word , wood\n[] ：表示选择[]内的一个字符，例如wo[or]d, 匹配word, wood, 不匹配wold、woord\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="查询所有的key-号可以是一个-也可以查看多个" tabindex="-1"><a class="header-anchor" href="#查询所有的key-号可以是一个-也可以查看多个" aria-hidden="true">#</a> 查询所有的key(<code>*号可以是一个，也可以查看多个</code>)</h2><pre><code>所有：`keys *`\n\n单独一个：`keys k`\n\n```\n127.0.0.1:6379&gt; keys c*\n1) &quot;chuchen&quot;\n2) &quot;chun&quot;\n查询以c开头的所有的key\n\n127.0.0.1:6379&gt; keys c*n\n1) &quot;chuchen&quot;\n2) &quot;chun&quot;\n查询以c开头，第二个字母随意，以n结尾的key\n```\n</code></pre><h2 id="号通配符" tabindex="-1"><a class="header-anchor" href="#号通配符" aria-hidden="true">#</a> ?号通配符</h2><pre><code>```\n127.0.0.1:6379&gt; keys ch?n\n1) &quot;chun&quot;\n```\n\n`?`号就像mysql中的`_`只能匹配一个字符\n</code></pre><h2 id="通配符" tabindex="-1"><a class="header-anchor" href="#通配符" aria-hidden="true">#</a> <code>[]</code>通配符</h2><pre><code>这个就像mysql中的`in`，从`[]`中匹配一个进行查找\n\n```\n127.0.0.1:6379&gt; keys he[lfd]lo\n1) &quot;hello&quot;\n从[lfd]每一个进行查找匹配\n```\n</code></pre><h2 id="exists判断某个key值是否存在" tabindex="-1"><a class="header-anchor" href="#exists判断某个key值是否存在" aria-hidden="true">#</a> <code>exists</code>判断某个key值是否存在</h2><pre><code>&gt; 存在：返回1\n&gt;\n&gt; 单个不存在：0\n&gt;\n&gt; 判断多个：返回存在的个数\n\n![image-20210306161821509](C:\\Users\\chuchen\\Pictures\\视频截图\\redis\\image-20210306161821509.png)\n</code></pre><h2 id="move-key-index" tabindex="-1"><a class="header-anchor" href="#move-key-index" aria-hidden="true">#</a> <code>move key index</code></h2><pre><code>将键`key`移动到index库中\n</code></pre><h2 id="ttl-key" tabindex="-1"><a class="header-anchor" href="#ttl-key" aria-hidden="true">#</a> <code>ttl key</code></h2><pre><code>查看key值的剩余生存时间，以秒为单位，因为key是保存在内存中，可以设置key值在内存中的时间\n\n如果key值不存在，那么返回`-2`\n\n如果返回`-1`，则代表永久存活，默认就是-1\n</code></pre><h2 id="设置key值的剩余时间" tabindex="-1"><a class="header-anchor" href="#设置key值的剩余时间" aria-hidden="true">#</a> 设置key值的剩余时间</h2><pre><code>&gt;  语法：expire key seconds\n\n作用：设置key的生存时间，超过时间，key自动删除。单位是秒。\n\n返回值：设置成功返回数字 1，其他情况是 0 。\n</code></pre><h2 id="语法-type-key" tabindex="-1"><a class="header-anchor" href="#语法-type-key" aria-hidden="true">#</a> 语法：type key</h2><pre><code>作用：查看key所存储值的数据类型\n\n返回值：字符串表示的数据类型\n</code></pre><blockquote><p>none (key不存在)</p><p>string (字符串)</p><p>list (列表)</p><p>set (集合)</p><p>zset (有序集)</p><p>hash (哈希表)</p></blockquote><h2 id="rename-key-newkey" tabindex="-1"><a class="header-anchor" href="#rename-key-newkey" aria-hidden="true">#</a> rename key newkey</h2><pre><code>作用：将key改为名newkey。当 key 和 newkey 相同，或者 key 不存在时，返回一个错误。\n\n当 newkey 已经存在时， RENAME 命令将覆盖旧值。\n</code></pre>',23),R=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps1-1615022381305.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),E=(0,t._)("h2",{id:"del",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#del","aria-hidden":"true"},"#"),(0,t.Uk)(" del")],-1),I=(0,t._)("p",null,"语法：del key [key…]",-1),K=(0,t._)("p",null,"作用：删除存在的key，不存在的key忽略。",-1),B=(0,t._)("p",null,"返回值：数字，删除的key的数量。",-1),C=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps2-1615022381304.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),O=(0,t.uE)('<h1 id="string类型" tabindex="-1"><a class="header-anchor" href="#string类型" aria-hidden="true">#</a> String类型</h1><p>字符串类型是Redis中最基本的数据类型，它能存储任何形式的字符串，包括二进制数</p><p>据，序列化后的数据，JSON化的对象甚至是一张图片。</p><p>字符串类型的数据操作总的思想是通过key操作value，key是数据标识，value是我们感</p><p>兴趣的业务数据。</p><h2 id="set" tabindex="-1"><a class="header-anchor" href="#set" aria-hidden="true">#</a> set</h2><blockquote><p>语法：set key value</p></blockquote><p>功能：将字符串值 value 设置到 key 中，如果key已存在，后放的值会把前放的值覆盖掉。</p><p>返回值：OK表示成功</p>',9),D=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps3-1615025468036.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),N=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps4-1615025468036.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),A=(0,t._)("h2",{id:"get",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#get","aria-hidden":"true"},"#"),(0,t.Uk)(" get")],-1),Y=(0,t._)("blockquote",null,[(0,t._)("p",null,"语法：get key")],-1),J=(0,t._)("p",null,"功能：获取 key 中设置的字符串值",-1),M=(0,t._)("p",null,"返回值：key存在，返回key对应的value；",-1),H=(0,t._)("p",null,"​ key不存在，返回nil",-1),T=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps5-1615025468037.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),Z=(0,t._)("h2",{id:"append",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#append","aria-hidden":"true"},"#"),(0,t.Uk)(" append")],-1),F=(0,t._)("blockquote",null,[(0,t._)("p",null,"语法：append key value")],-1),G=(0,t._)("p",null,"功能：如果 key 存在，则将 value 追加到 key 原来旧值的末尾",-1),L=(0,t._)("p",null,"​ 如果 key 不存在，则将key 设置值为 value",-1),Q=(0,t._)("p",null,"返回值：追加字符串之后的总长度(字符个数)",-1),V=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps6-1615025468037.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),W=(0,t._)("h2",{id:"strlen",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#strlen","aria-hidden":"true"},"#"),(0,t.Uk)(" strlen")],-1),X=(0,t._)("blockquote",null,[(0,t._)("p",null,"语法：strlen key")],-1),$=(0,t._)("p",null,"功能：返回 key 所储存的字符串值的长度",-1),ee=(0,t._)("p",null,"返回值：如果key存在，返回字符串值的长度；",-1),se=(0,t._)("p",null,"​ key不存在，返回0",-1),le=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps7-1615025468037.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),te=(0,t._)("h2",{id:"incr",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#incr","aria-hidden":"true"},"#"),(0,t.Uk)(" incr")],-1),re=(0,t._)("p",null,"语法：incr key",-1),ne=(0,t._)("p",null,"功能：将key中储存的数字值加1，如果key不存在，则key的值先被初始化为0再执行incr操作。",-1),ie=(0,t._)("p",null,"返回值：返回加1后的key值",-1),ae=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps8-1615027305590.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),ce=(0,t._)("h2",{id:"decr",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#decr","aria-hidden":"true"},"#"),(0,t.Uk)(" decr")],-1),pe=(0,t._)("p",null,"语法：decr key",-1),de=(0,t._)("p",null,"功能：将 key 中储存的数字值减1，如果 key 不存在，则么 key 的值先被初始化为 0 再执行 decr 操作。",-1),oe=(0,t._)("p",null,"返回值：返回减1后的key值",-1),ue=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps9-1615027305591.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),he=(0,t._)("h2",{id:"incrby",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#incrby","aria-hidden":"true"},"#"),(0,t.Uk)(" incrby")],-1),ye=(0,t._)("p",null,"语法：incrby key offset",-1),ge=(0,t._)("p",null,"功能：将 key 所储存的值加上增量值，如果 key 不存在，则 key 的值先被初始化为 0 再执行 INCRBY 命令。",-1),ke=(0,t._)("p",null,"返回值：返回增量之后的key值。",-1),xe=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps10-1615027305591.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),_e=(0,t._)("h2",{id:"decrby",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#decrby","aria-hidden":"true"},"#"),(0,t.Uk)(" decrby")],-1),be=(0,t._)("p",null,"语法：decrby key offset",-1),me=(0,t._)("p",null,"功能：将 key 所储存的值减去减量值，如果 key 不存在，则 key 的值先被初始化为 0 再执行 DECRBY 命令。",-1),ve=(0,t._)("p",null,"返回值：返回减量之后的key值。",-1),fe=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps11-1615027305591.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),ze=(0,t._)("h2",{id:"getrange",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#getrange","aria-hidden":"true"},"#"),(0,t.Uk)(" getrange")],-1),je=(0,t._)("p",null,"语法：getrange key startIndex endIndex",-1),we=(0,t._)("p",null,"功能：获取 key 中字符串值从 startIndex 开始到 endIndex 结束的子字符串,包括startIndex和endIndex, 负数表示从字符串的末尾开始，-1 表示最后一个字符。",-1),qe=(0,t._)("p",null,[(0,t._)("code",null,"如果endInxex"),(0,t.Uk)("的长度大于字符串长度的时候，不会报错，会截取全部的字符串")],-1),Se=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps12.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),Ue=(0,t._)("h2",{id:"setrange",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#setrange","aria-hidden":"true"},"#"),(0,t.Uk)(" setrange")],-1),Pe=(0,t._)("p",null,"语法：setrange key offsetIndex value",-1),Re=(0,t._)("p",null,"功能：用value覆盖key的存储的值从offset开始。",-1),Ee=(0,t._)("p",null,"返回值：修改后的字符串的长度。",-1),Ie=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps13.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),Ke=(0,t.uE)('<p><code>如果此key不存在的话，那么会set这个key，value就是其值，并且从offsetIndex处开始，将value值填入此key中，offsetIndex前面的几位，使用“\\x00”</code>代替</p><blockquote><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>127.0.0.1:6379&gt; setrange f2 1 cfcf\n(integer) 5\n127.0.0.1:6379&gt; get f2\n&quot;\\x00cfcf&quot;\n127.0.0.1:6379&gt; \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></blockquote><h2 id="setex" tabindex="-1"><a class="header-anchor" href="#setex" aria-hidden="true">#</a> setex</h2><p>语法：setex key seconds value</p><p>功能：设置key的值，并将 key 的生存时间设为 seconds (以秒为单位) ，如果key已经存在，将覆盖旧值。</p><p>返回值：设置成功，返回OK。</p>',6),Be=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps14.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),Ce=(0,t._)("h2",{id:"setnx",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#setnx","aria-hidden":"true"},"#"),(0,t.Uk)(" setnx")],-1),Oe=(0,t._)("p",null,"语法：setnx key value",-1),De=(0,t._)("p",null,"功能：setnx 是 set if not exists 的简写，如果key不存在，则 set 值，存在则不设置值。",-1),Ne=(0,t._)("p",null,"返回值：设置成功，返回1",-1),Ae=(0,t._)("p",null,"设置失败，返回0",-1),Ye=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps15.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),Je=(0,t._)("h2",{id:"mset",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#mset","aria-hidden":"true"},"#"),(0,t.Uk)(" mset")],-1),Me=(0,t._)("p",null,"语法：mset key value [key value…]",-1),He=(0,t._)("p",null,"功能：同时设置一个或多个 key-value 对",-1),Te=(0,t._)("p",null,"返回值：设置成功，返回OK。",-1),Ze=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps16.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),Fe=(0,t._)("h2",{id:"mget",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#mget","aria-hidden":"true"},"#"),(0,t.Uk)(" mget")],-1),Ge=(0,t._)("p",null,"语法：mget key [key …]",-1),Le=(0,t._)("p",null,"功能：获取所有(一个或多个)给定 key 的值",-1),Qe=(0,t._)("p",null,"返回值：包含所有key的列表，如果key不存在，则返回nil。",-1),Ve=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps17.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),We=(0,t._)("h2",{id:"msetnx",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#msetnx","aria-hidden":"true"},"#"),(0,t.Uk)(" msetnx")],-1),Xe=(0,t._)("p",null,"语法：msetnx key value[key value…]",-1),$e=(0,t._)("p",null,"功能：同时设置一个或多个 key-value 对，如果有一个key是存在的，则设置不成功。",-1),es=(0,t._)("p",null,"返回值：设置成功，返回1",-1),ss=(0,t._)("p",null,"设置失败，返回0",-1),ls={},ts=(0,l(83744).Z)(ls,[["render",function(e,s){return(0,t.wg)(),(0,t.iD)(t.HY,null,[r,n,i,a,c,p,d,o,u,h,y,g,k,x,_,b,m,v,f,z,j,w,q,S,U,P,R,E,I,K,B,C,O,D,N,A,Y,J,M,H,T,Z,F,G,L,Q,V,W,X,$,ee,se,le,te,re,ne,ie,ae,ce,pe,de,oe,ue,he,ye,ge,ke,xe,_e,be,me,ve,fe,ze,je,we,qe,Se,Ue,Pe,Re,Ee,Ie,Ke,Be,Ce,Oe,De,Ne,Ae,Ye,Je,Me,He,Te,Ze,Fe,Ge,Le,Qe,Ve,We,Xe,$e,es,ss],64)}]])}}]);
"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6433],{81340:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-7fc709aa",path:"/spring/springboot/yaml.html",title:"yaml使用",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:3,title:"基本语法",slug:"基本语法",children:[]},{level:3,title:"数据类型",slug:"数据类型",children:[]},{level:2,title:"idea依赖",slug:"idea依赖",children:[]}],git:{updatedTime:1654857597e3,contributors:[{name:"qsyyke",email:"2291308094@qq.com",commits:1}]}}},36979:(n,s,a)=>{a.r(s),a.d(s,{default:()=>o});var p=a(66252);const t=(0,p.uE)('<h1 id="yaml使用" tabindex="-1"><a class="header-anchor" href="#yaml使用" aria-hidden="true">#</a> yaml使用</h1><p>YAML 是 &quot;YAML Ain&#39;t Markup Language&quot;（YAML 不是一种标记语言）的递归缩写。在开发的这种语言时，YAML 的意思其实是：&quot;Yet Another Markup Language&quot;（仍是一种标记语言）。</p><p>非常适合用来做以数据为中心的配置文件</p><p>在springboot中，推荐使用这种yaml文件作为配置文件</p><h3 id="基本语法" tabindex="-1"><a class="header-anchor" href="#基本语法" aria-hidden="true">#</a> 基本语法</h3><ul><li><p>key: value；kv之间有空格</p></li><li><p>大小写敏感</p></li><li><p>使用缩进表示层级关系</p></li><li><p>缩进不允许使用tab，只允许空格</p></li><li><p>缩进的空格数不重要，只要相同层级的元素左对齐即可</p></li><li><p>&#39;#&#39;表示注释</p></li><li><p>字符串无需加引号，如果要加，&#39;&#39;与&quot;&quot;表示字符串内容 会被 转义/不转义</p></li></ul><h3 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h3><ul><li><p>字面量：单个的、不可再分的值。date、boolean、string、number、null</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">k</span><span class="token punctuation">:</span> v\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>对象：键值对的集合。map、hash、set、object</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">行内写法：  k</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>k1<span class="token punctuation">:</span>v1<span class="token punctuation">,</span>k2<span class="token punctuation">:</span>v2<span class="token punctuation">,</span>k3<span class="token punctuation">:</span>v3<span class="token punctuation">}</span>\n<span class="token comment">#或</span>\n<span class="token key atrule">k</span><span class="token punctuation">:</span> \n\t<span class="token key atrule">k1</span><span class="token punctuation">:</span> v1\n  <span class="token key atrule">k2</span><span class="token punctuation">:</span> v2\n  <span class="token key atrule">k3</span><span class="token punctuation">:</span> v3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><p>数组：一组按次序排列的值。array、list、queue</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">行内写法：  k</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>v1<span class="token punctuation">,</span>v2<span class="token punctuation">,</span>v3<span class="token punctuation">]</span>\n<span class="token comment">#或者</span>\n<span class="token key atrule">k</span><span class="token punctuation">:</span>\n <span class="token punctuation">-</span> v1\n <span class="token punctuation">-</span> v2\n <span class="token punctuation">-</span> v3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li></ul><p>使用下面的这个实例作为演示</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>\n<span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>\n        prefix <span class="token operator">=</span> <span class="token string">&quot;person&quot;</span>\n<span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> userName<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">Boolean</span> boss<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">Date</span> birth<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">Pet</span> pet<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> interests<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> animal<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> score<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> salarys<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Pet</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> allPets<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Pet</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">Double</span> weight<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">person</span><span class="token punctuation">:</span>\n  <span class="token key atrule">userName</span><span class="token punctuation">:</span> chuchen\n  <span class="token key atrule">boss</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n  <span class="token key atrule">birth</span><span class="token punctuation">:</span> 2019/12/9\n  <span class="token key atrule">age</span><span class="token punctuation">:</span> <span class="token number">22</span>\n  <span class="token key atrule">interests</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>coding<span class="token punctuation">,</span> com<span class="token punctuation">,</span> video<span class="token punctuation">]</span>\n  <span class="token key atrule">animal</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> 小八\n    <span class="token punctuation">-</span> 小猫\n    <span class="token punctuation">-</span> 小马\n  <span class="token key atrule">score</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">math</span><span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token key atrule">english</span><span class="token punctuation">:</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token key atrule">chinese</span><span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">}</span>\n  <span class="token key atrule">salarys</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> <span class="token number">324.65</span>\n    <span class="token punctuation">-</span> <span class="token number">56.8</span>\n  <span class="token key atrule">pet</span><span class="token punctuation">:</span>\n    <span class="token key atrule">name</span><span class="token punctuation">:</span> 无牙仔\n    <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">80.4</span>\n  <span class="token key atrule">allPets</span><span class="token punctuation">:</span>\n    <span class="token key atrule">allpet1</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> allname\n        <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">34.34</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><blockquote><p><code>Date</code>格式不能写成2021.7.2这种形式</p><p>像map这种对象的书写形式，可以有两种</p><ul><li><p>score: {math: 80, english: 90, chinese: 80}</p></li><li><p>获取这种</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code>Map&lt;String<span class="token punctuation">,</span>String<span class="token punctuation">&gt;</span> map\n\n<span class="token key atrule">map</span><span class="token punctuation">:</span> \n  <span class="token key atrule">key1</span><span class="token punctuation">:</span> v1\n  <span class="token key atrule">key2</span><span class="token punctuation">:</span> v2\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ul><p>同样数组也是有两种书写格式</p><ul><li><p>interests: [coding, com, video]</p></li><li><p>或者</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code>List&lt;String<span class="token punctuation">&gt;</span> animal\n<span class="token key atrule">animal</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> 小八\n    <span class="token punctuation">-</span> 小猫\n    <span class="token punctuation">-</span> 小马\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ul></blockquote><p>其实yaml就是嵌套的形式</p><p>使用‘’和“”都可以代表字符串，但是他们却有区别，如果我们<code>‘chu\\nchen’</code>和<code>“chu\\nchen”</code>，那么在控制台输出这个结果，<code>“chu\\nchen”</code>这种打印的时候，会换行，但是<code>‘chu\\nchen’</code>不会换行，在控制台中测试，不要在浏览器中</p><h2 id="idea依赖" tabindex="-1"><a class="header-anchor" href="#idea依赖" aria-hidden="true">#</a> idea依赖</h2><p>但是如果我们像上面这种做的话，那么我们在写这些配置属性的时候，idea没有提示，就需要加入一个依赖，此依赖可以在这里进行查看，并且如果不添加这个依赖的话，idea会一直提示</p>',16),e=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210702152558377.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),l=(0,p.uE)('<p>https://docs.spring.io/spring-boot/docs/2.5.2/reference/htmlsingle/#configuration-metadata.format.repeated-items</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-configuration-processor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>添加这个依赖，刷新之后，我们在yml中写的时候，就会出现提示，但是我加入之后，idea还是爆红，也不提示，不影响程序运行</p><p>但是这个依赖，并不是我们项目必须的，其只是方便我们开发，推荐添加下面的插件，这样进行打包的时候，不会将此依赖打包进去</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>excludes</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">&gt;</span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-configuration-processor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>excludes</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>',5),c={},o=(0,a(83744).Z)(c,[["render",function(n,s){return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,e,l],64)}]])}}]);
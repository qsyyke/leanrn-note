"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3452],{91799:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-bee28ea4",path:"/datastructure/B%E6%A0%91/23%E6%A0%91.html",title:"数据结构B树之23树结构",lang:"en-US",frontmatter:{date:"2021/12/14 13:40",title:"数据结构B树之23树结构"},excerpt:"",headers:[{level:2,title:"多叉树概念",slug:"多叉树概念",children:[]},{level:2,title:"2-3树",slug:"_2-3树",children:[{level:3,title:"2-3树插入节点演示",slug:"_2-3树插入节点演示",children:[]}]},{level:2,title:"2-3-4树",slug:"_2-3-4树",children:[]}],git:{updatedTime:1654857597e3,contributors:[{name:"qsyyke",email:"2291308094@qq.com",commits:1}]}}},78547:(s,n,a)=>{a.r(n),a.d(n,{default:()=>f});var e=a(66252);const l=(0,e._)("p",null,"为何会需要B树？单纯的二叉树不是已经能够满足我们的需要了么",-1),t=(0,e._)("p",null,[(0,e._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20211214134146276.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),p=(0,e.uE)('<blockquote><p>二叉树需要加载到内存的，如果二叉树的节点少，没有什么问题，但是如果二叉树的节点很多(比如1亿)， 就存在如下问题:</p><ol><li>在构建二叉树时，需要多次进行i/o操作(海量数据存在数据库或文件中)，节点海量，构建二叉树时，速度有影响</li><li>节点海量，也会造成二叉树的高度很大，会降低操作速度.</li></ol><p><code>所以我们就需要使用一种新的结构，来减少二叉树的层数</code></p></blockquote><h2 id="多叉树概念" tabindex="-1"><a class="header-anchor" href="#多叉树概念" aria-hidden="true">#</a> 多叉树概念</h2><p>在二叉树中，每个节点有数据项，最多有两个子节点。</p><p>如果允许每个节点可以有更多的数据项和更多的子节点，就是<code>多叉树</code>（multiway tree） 后面我们讲解的2-3树，2-3-4树就是多叉树，多叉树通过重新组织节点，减少树的高度，能对二叉树进行优化。</p>',4),c=(0,e._)("p",null,[(0,e._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20211214134604467.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),o=(0,e._)("blockquote",null,[(0,e._)("p",null,[(0,e.Uk)("此图就是一颗2-3树，同时，"),(0,e._)("code",null,"2-3也是最简单的B树结构")])],-1),i=(0,e._)("p",null,"B树通过重新组织节点，降低树的高度，并且减少i/o读写次数来提升效率(如下图)",-1),r=(0,e._)("p",null,[(0,e._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20211214134720182.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),u=(0,e._)("blockquote",null,[(0,e._)("p",null,"文件系统及数据库系统的设计者利用了磁盘预读原理，将一个节点的大小设为等于一个页(页得大小通常为4k)，这样每个节点只需要一次I/O就可以完全载入"),(0,e._)("p",null,"将树的度M设置为1024，在600亿个元素中最多只需要4次I/O操作就可以读取到想要的元素, B树(B+)广泛应用于文件存储系统以及数据库系统中")],-1),g=(0,e._)("h2",{id:"_2-3树",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#_2-3树","aria-hidden":"true"},"#"),(0,e.Uk)(" 2-3树")],-1),d=(0,e._)("p",null,[(0,e._)("code",null,"2-3树是最简单的B树结构")],-1),_=(0,e._)("ol",null,[(0,e._)("li",null,[(0,e._)("p",null,"2-3树的所有叶子节点都在同一层.(只要是B树都满足这个条件，比如下图)"),(0,e._)("p",null,[(0,e._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20211214135203782.png?x-oss-process=style/pictureProcess1",data:"aurora"})]),(0,e._)("blockquote",null,[(0,e._)("p",null,"但是下图就不是一颗2-3树")]),(0,e._)("p",null,[(0,e._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20211214135247911.png?x-oss-process=style/pictureProcess1",data:"aurora"})])]),(0,e._)("li",null,[(0,e._)("p",null,"有两个子节点的节点叫二节点，二节点要么没有子节点，要么有两个子节点.，有三个子节点的节点叫三节点，三节点要么没有子节点，要么有三个子节点."),(0,e._)("p",null,[(0,e._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20211214135343646.png?x-oss-process=style/pictureProcess1",data:"aurora"})]),(0,e._)("p",null,"2-3树，一个节点不能存在3个元素，如果存在3个元素，那就是2-3-4树了，比如下面这种情况，便是2-3-4树"),(0,e._)("p",null,[(0,e._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20211214135519965.png?x-oss-process=style/pictureProcess1",data:"aurora"})]),(0,e._)("p",null,"同时2-3树，第一个节点也是可以存在两个元素的，比如下图"),(0,e._)("p",null,[(0,e._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20211214135616868.png?x-oss-process=style/pictureProcess1",data:"aurora"})])]),(0,e._)("li",null,[(0,e._)("p",null,"2-3树是由二节点和三节点构成的树。")])],-1),m=(0,e.uE)('<h3 id="_2-3树插入节点演示" tabindex="-1"><a class="header-anchor" href="#_2-3树插入节点演示" aria-hidden="true">#</a> 2-3树插入节点演示</h3><p>使用下面数组构建一颗2-3树</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>最终形成的2-3树为</p>',4),b=(0,e._)("p",null,[(0,e._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20211214135802007.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),h=(0,e._)("blockquote",null,[(0,e._)("p",null,"下图是我自己构建的过程图")],-1),y=(0,e._)("p",null,[(0,e._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20211214135959511.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),k=(0,e._)("h2",{id:"_2-3-4树",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#_2-3-4树","aria-hidden":"true"},"#"),(0,e.Uk)(" 2-3-4树")],-1),x=(0,e._)("p",null,"除了23树，还有234树等，概念和23树类似，也是一种B树",-1),z=(0,e._)("p",null,[(0,e._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20211214140106782.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),v={},f=(0,a(83744).Z)(v,[["render",function(s,n){return(0,e.wg)(),(0,e.iD)(e.HY,null,[l,t,p,c,o,i,r,u,g,d,_,m,b,h,y,k,x,z],64)}]])}}]);
"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3278],{15825:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-1014ece5",path:"/javaweb/jQuery.html",title:"jQuery使用",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"1. 入口函数的区别",slug:"_1-入口函数的区别",children:[]},{level:2,title:"2. jquery对象",slug:"_2-jquery对象",children:[]},{level:2,title:"3. 隐式迭代",slug:"_3-隐式迭代",children:[]},{level:2,title:"4. 优先级问题",slug:"_4-优先级问题",children:[{level:3,title:"4.1 释放$的使用权",slug:"_4-1-释放-的使用权",children:[]}]},{level:2,title:"5. jQuery是一个匿名函数",slug:"_5-jquery是一个匿名函数",children:[]},{level:2,title:"6. 入口函数",slug:"_6-入口函数",children:[]},{level:2,title:"7. jQuery和DOM",slug:"_7-jquery和dom",children:[{level:3,title:"7.1 dom对象转换为jQuery对象",slug:"_7-1-dom对象转换为jquery对象",children:[]},{level:3,title:"7.2 jquery对象转换为dom对象",slug:"_7-2-jquery对象转换为dom对象",children:[]}]},{level:2,title:"8. jQuery核心函数",slug:"_8-jquery核心函数",children:[]},{level:2,title:"9. JavaScript中的静态方法和实例方法",slug:"_9-javascript中的静态方法和实例方法",children:[]},{level:2,title:"10. forEach方法",slug:"_10-foreach方法",children:[{level:3,title:"10.1 原生",slug:"_10-1-原生",children:[]},{level:3,title:"10.2 jQuery的each方法",slug:"_10-2-jquery的each方法",children:[]}]},{level:2,title:"11. map",slug:"_11-map",children:[{level:3,title:"11.1 原生遍历",slug:"_11-1-原生遍历",children:[]},{level:3,title:"11.2 jQuery进行map遍历",slug:"_11-2-jquery进行map遍历",children:[]},{level:3,title:"11.3 区别",slug:"_11-3-区别",children:[]}]},{level:2,title:"12. 其他方法",slug:"_12-其他方法",children:[]},{level:2,title:"13. vscod快速生成HTML文档",slug:"_13-vscod快速生成html文档",children:[]},{level:2,title:"14. 内容选择器",slug:"_14-内容选择器",children:[]},{level:2,title:"15. 属性",slug:"_15-属性",children:[]},{level:2,title:"16. attr()",slug:"_16-attr",children:[]},{level:2,title:"18. prop()",slug:"_18-prop",children:[]},{level:2,title:"19. 操作class",slug:"_19-操作class",children:[]},{level:2,title:"20. 获取文本值",slug:"_20-获取文本值",children:[]},{level:2,title:"21. 操作css样式",slug:"_21-操作css样式",children:[]},{level:2,title:"22. 获取尺寸和位置",slug:"_22-获取尺寸和位置",children:[]},{level:2,title:"23. 事件",slug:"_23-事件",children:[{level:3,title:"23.1 事件的绑定方式",slug:"_23-1-事件的绑定方式",children:[]},{level:3,title:"23.2 移除事件",slug:"_23-2-移除事件",children:[]},{level:3,title:"23.3 阻止事件冒泡",slug:"_23-3-阻止事件冒泡",children:[]},{level:3,title:"23.4 阻止默认行为",slug:"_23-4-阻止默认行为",children:[]},{level:3,title:"23.5 执行自动事件",slug:"_23-5-执行自动事件",children:[]},{level:3,title:"23.6 自动触发自定义事件",slug:"_23-6-自动触发自定义事件",children:[]},{level:3,title:"23.7 事件的命名空间",slug:"_23-7-事件的命名空间",children:[]}]},{level:2,title:"24. 事件委托",slug:"_24-事件委托",children:[]},{level:2,title:"25. 事件的移入移出",slug:"_25-事件的移入移出",children:[]},{level:2,title:"显示和隐藏效果",slug:"显示和隐藏效果",children:[]},{level:2,title:"滑动效果",slug:"滑动效果",children:[]},{level:2,title:"stop()",slug:"stop",children:[]},{level:2,title:"自定义动画animate()",slug:"自定义动画animate",children:[]},{level:2,title:"实现无限循环的效果",slug:"实现无限循环的效果",children:[]},{level:2,title:"操作文档",slug:"操作文档",children:[{level:3,title:"内部插入",slug:"内部插入",children:[]},{level:3,title:"外部插入",slug:"外部插入",children:[]}]}],git:{updatedTime:1654857597e3,contributors:[{name:"qsyyke",email:"2291308094@qq.com",commits:1}]}}},59994:(n,s,a)=>{a.r(s),a.d(s,{default:()=>x});var p=a(66252);const t=(0,p.uE)('<h1 id="jquery使用" tabindex="-1"><a class="header-anchor" href="#jquery使用" aria-hidden="true">#</a> jQuery使用</h1><h2 id="_1-入口函数的区别" tabindex="-1"><a class="header-anchor" href="#_1-入口函数的区别" aria-hidden="true">#</a> 1. 入口函数的区别</h2><blockquote><ol><li>原生JS和jQuery入口函数的加载模式不同 原生JS会等到DOM元素加载完毕,并且图片也加载完毕才会执行 jQuery会等到DOM元素加载完毕,但不会等到图片也加载完毕就会执行</li></ol></blockquote><h2 id="_2-jquery对象" tabindex="-1"><a class="header-anchor" href="#_2-jquery对象" aria-hidden="true">#</a> 2. jquery对象</h2><p><code>jQuery</code>和<code>$</code>就是一个顶级对象</p><p>可以看一下源码</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\t<span class="token comment">// Define a local copy of jQuery</span>\n\t<span class="token keyword">var</span> <span class="token function-variable function">jQuery</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">selector<span class="token punctuation">,</span> context</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n\t\t<span class="token comment">// The jQuery object is actually just the init constructor &#39;enhanced&#39;</span>\n\t\t<span class="token comment">// Need init if jQuery is called (just allow error to be thrown if not included)</span>\n\t\t<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">jQuery<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>init</span><span class="token punctuation">(</span> selector<span class="token punctuation">,</span> context <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><code>jQuery</code>获取到的是元素的jQuery对象，尽管是通过<code>id</code>进行获取，得到的也是对象，只能使用jQuery中的方法和属性，并且获取到的对象是一个伪数组的形式存在</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\njQuery.fn.init(3) [div#div, div, div, prevObject: jQuery.fn.init(1)]\njQuery.fn.init [div#div]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="_3-隐式迭代" tabindex="-1"><a class="header-anchor" href="#_3-隐式迭代" aria-hidden="true">#</a> 3. 隐式迭代</h2><p>执行相同的操作的时候，jQuery会在内部进行for循环的遍历，如果是调用<code>$(&quot;div&quot;).css(&quot;background&quot;,&quot;red&quot;);</code>，HTML中div有三个，<code>$(&quot;div&quot;).css()</code>会为网页中所有的div标签设置背景色为<code>red</code>，执行的顺序为</p><ol><li>使用for循环，遍历<code>$(&quot;div&quot;)</code>中多有的元素，因为<code>$(&quot;div&quot;)</code>是一个伪数组，jQuery对象</li><li>遍历得到的每一个<code>div</code>都会调用<code>.css(&quot;background&quot;,&quot;red&quot;)</code>进行背景颜色的设置</li></ol><p><code>隐式迭代是发生在内部的，自动就进行的</code>，很大程度上免去了我们一个一个的for循环的遍历</p><h2 id="_4-优先级问题" tabindex="-1"><a class="header-anchor" href="#_4-优先级问题" aria-hidden="true">#</a> 4. 优先级问题</h2><p>如果假设存在有两个库，一个<code>jquery</code>，另一个库中使用的简便符号也是<code>$</code>，那么这个使用使用<code>$()...</code>操作就会发生冲突问题，后面引入的那个库，会直接替换掉最开始引入的那个</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;./jquery-3.5.1.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;./myself-1.1.1.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>\n<span class="token comment">//简便符号都是`$`</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>那么我们使用<code>$()</code>时，调用的就是<code>&lt;script src=&quot;./myself-1.1.1.js&quot;&gt;&lt;/script&gt;</code></p><h3 id="_4-1-释放-的使用权" tabindex="-1"><a class="header-anchor" href="#_4-1-释放-的使用权" aria-hidden="true">#</a> 4.1 释放$的使用权</h3><p>我们也可以释放<code>$</code>的使用权来解决这个问题，</p><p>使用<code>jQuery</code>调用<code>jQuery.noConflict();</code>以此来释放<code>$</code>的使用权，以后就不能使用<code>$</code>这个函数了，就只能通过<code>jQuery()...</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;background&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nUncaught TypeError<span class="token operator">:</span> $ is not a <span class="token keyword">function</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>也可以重新设置新的符号来替换<code>$</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\n    <span class="token keyword">var</span> j <span class="token operator">=</span> jQuery<span class="token punctuation">.</span><span class="token function">noConflict</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">j</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;background&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nj相当于$\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="_5-jquery是一个匿名函数" tabindex="-1"><a class="header-anchor" href="#_5-jquery是一个匿名函数" aria-hidden="true">#</a> 5. jQuery是一个匿名函数</h2><h2 id="_6-入口函数" tabindex="-1"><a class="header-anchor" href="#_6-入口函数" aria-hidden="true">#</a> 6. 入口函数</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1.第一种写法</span>\n<span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// alert(&quot;hello lnj&quot;);</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 2.第二种写法</span>\n<span class="token function">jQuery</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// alert(&quot;hello lnj&quot;);</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 3.第三种写法(推荐)</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// alert(&quot;hello lnj&quot;);</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 4.第四种写法</span>\n<span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;hello lnj&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>jQuery已经为我们封装了入口函数，可以使dom结构渲染完毕之后就执行内部代码，不必等到外部的资源加载完毕才执行</p><p>相当于原生js中的<code>DOMContentLoaded</code></p><p>但是这个不用于原生中的<code>load</code>事件，是等页面文档，外部的js文件，css文件，图片加载完毕才会执行内部代码</p><h2 id="_7-jquery和dom" tabindex="-1"><a class="header-anchor" href="#_7-jquery和dom" aria-hidden="true">#</a> 7. jQuery和DOM</h2><p><code>DOM和jQuery之间是可以进行相互转换的</code></p><p>原生的js比jQuery大，jQuery相当于将原生中的一些方法和属性进行了封装，简便了我们的操作，但是还有原生js中的一些属性和方法，jQuery并没有进行封装</p><p><code>jQuery对象不能够去调用原生js中的方法和属性</code></p><h3 id="_7-1-dom对象转换为jquery对象" tabindex="-1"><a class="header-anchor" href="#_7-1-dom对象转换为jquery对象" aria-hidden="true">#</a> 7.1 dom对象转换为jQuery对象</h3><p><code>格式</code></p><blockquote><p><code>$(DOM对象)</code></p></blockquote><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//dom对象</span>\n    <span class="token comment">//转换为jQuery对象</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_7-2-jquery对象转换为dom对象" tabindex="-1"><a class="header-anchor" href="#_7-2-jquery对象转换为dom对象" aria-hidden="true">#</a> 7.2 jquery对象转换为dom对象</h3><ol><li><p>方式一：</p><blockquote><p><code>$(&quot;div&quot;)[index]</code></p><p>index是一个索引，因为<code>$(&quot;div&quot;)</code>是一个伪数组的形式，所以使用下标方式取出就是一个DOM对象</p></blockquote></li><li><p>方式二：</p><blockquote><p><code>$(&quot;div&quot;).get(index)</code></p><p>index是索引</p></blockquote></li></ol><h2 id="_8-jquery核心函数" tabindex="-1"><a class="header-anchor" href="#_8-jquery核心函数" aria-hidden="true">#</a> 8. jQuery核心函数</h2><p><code>jQuery() or $()</code>是一个核心函数</p><p>可以接收标签选择器和DOM对象，还可以接收字符串</p><ol><li><p>接收字符串</p><blockquote><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">var</span> te <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;h1&gt;这是标签&lt;/h1&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// var te = $(&quot;这是标签&quot;);</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>te<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>te<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>console.log(var te = $(&quot;这是标签&quot;))的长度为<code>0</code>，也就是说，如果传入的不是一个标签，那么就无效</p><p>$(&quot;body&quot;).append(te);将传入的文本标签追加在body页面中</p></blockquote></li></ol><h2 id="_9-javascript中的静态方法和实例方法" tabindex="-1"><a class="header-anchor" href="#_9-javascript中的静态方法和实例方法" aria-hidden="true">#</a> 9. JavaScript中的静态方法和实例方法</h2><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n        <span class="token comment">//定义一个类</span>\n        <span class="token keyword">function</span> <span class="token function">Aclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n        <span class="token comment">//添加静态方法</span>\n        Aclass<span class="token punctuation">.</span><span class="token function-variable function">staticMethod</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        Aclass<span class="token punctuation">.</span><span class="token function">staticMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//定义一个实例方法</span>\n        <span class="token class-name">Aclass</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">instance</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;instance&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">new</span> <span class="token class-name">Aclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">instance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><blockquote><p>function Aclass() {}是一个构造方法，相当于是一个类</p><p>Aclass.staticMethod = function() {}是创建一个静态方法，staticMethod是这个静态方法的名字，并不是js中的属性或者方法</p><p><code>Aclass.prototype</code>可以获取这个对象，Aclass.prototype.instance = function() {}是创建一个实例方法</p></blockquote><p><code>静态方法通过类名直接进行调用，实例方法需要使用对象进行调用</code></p><h2 id="_10-foreach方法" tabindex="-1"><a class="header-anchor" href="#_10-foreach方法" aria-hidden="true">#</a> 10. forEach方法</h2><h3 id="_10-1-原生" tabindex="-1"><a class="header-anchor" href="#_10-1-原生" aria-hidden="true">#</a> 10.1 原生</h3><p>可以使用这个方法进行数组的遍历，但是不能对对象进行遍历</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">23</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">java</span><span class="token operator">:</span><span class="token string">&#39;javaweb&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//数组的遍历</span>\narr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token operator">+</span><span class="token string">&quot;:&quot;</span><span class="token operator">+</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">//对象的遍历</span>\nobj<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token operator">+</span><span class="token string">&quot;:&quot;</span><span class="token operator">+</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p><code>obj是一个对象，此方法不能对对象进行遍历，报错TypeError: obj.forEach is not a function</code></p><blockquote><p><code>arr.forEach(function(value,index) {});</code>需要两个参数，第一个是数组每个下标的值，第二个参数index是数组的下标，会自动获取，不需要手动传值</p></blockquote><h3 id="_10-2-jquery的each方法" tabindex="-1"><a class="header-anchor" href="#_10-2-jquery的each方法" aria-hidden="true">#</a> 10.2 jQuery的each方法</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//jQuery的foreach方法</span>\n$<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token operator">+</span><span class="token string">&#39;:&#39;</span><span class="token operator">+</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//jQuery的foreach方法遍历对象</span>\n$<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token operator">+</span><span class="token string">&#39;:&#39;</span><span class="token operator">+</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p>jQuery的each方法不仅可以遍历数组，还可以遍历对象，</p><p><code>each()</code>方法需要两个参数</p><p>第一个：遍历对象</p><p>第二个：回调函数</p><p>function(index,value)只是为了在方法一种便于使用，获取这个下标和值</p><p>对于对象的话，第二个参数是对象中属性的名称，第二个是值</p><p>下标和值都是内部自动获取，</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">23</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">java</span><span class="token operator">:</span><span class="token string">&#39;javaweb&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n$<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">//结果</span>\nname\nage\nava\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><code>jQuery对象的each方法可以遍历数组和对象</code></p><h2 id="_11-map" tabindex="-1"><a class="header-anchor" href="#_11-map" aria-hidden="true">#</a> 11. map</h2><h3 id="_11-1-原生遍历" tabindex="-1"><a class="header-anchor" href="#_11-1-原生遍历" aria-hidden="true">#</a> 11.1 原生遍历</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>\n<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">,</span>\n<span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">23</span><span class="token punctuation">,</span>\n<span class="token literal-property property">java</span><span class="token operator">:</span><span class="token string">&#39;javaweb&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\narr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>value<span class="token punctuation">,</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">//遍历对象</span>\nobj<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>value<span class="token punctuation">,</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><blockquote><p><code>map(function(value,index,array)</code></p><p>第一个参数是值，第二个是下标，第三个是正在遍历的数组</p><p><code>原生map</code>不能遍历对象</p></blockquote><h3 id="_11-2-jquery进行map遍历" tabindex="-1"><a class="header-anchor" href="#_11-2-jquery进行map遍历" aria-hidden="true">#</a> 11.2 jQuery进行map遍历</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//jQuery进行遍历</span>\n$<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//遍历对象</span>\n$<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p><code>$.map(this,callback)</code></p><p>第一个参数是遍历的对象</p><p>第二个参数是回调函数</p><p>回调函数<code>function(value,index)</code>的第一个参数是值，第二个是下标或者是对象的名称</p><p><code>jQuery的map()可以遍历对象</code>伪数组也可以</p></blockquote><h3 id="_11-3-区别" tabindex="-1"><a class="header-anchor" href="#_11-3-区别" aria-hidden="true">#</a> 11.3 区别</h3><p><code>jQuery中的each方法和map方法的区别</code></p><blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></blockquote>',68),o=(0,p._)("blockquote",null,[(0,p._)("p",null,"jQuery中的each静态方法和map静态方法的区别: each静态方法默认的返回值就是, 遍历谁就返回谁 map静态方法默认的返回值是一个空数组"),(0,p._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,p._)("pre",{class:"language-javascript"},[(0,p._)("code",null,[(0,p._)("span",{class:"token keyword"},"var"),(0,p.Uk)(" arr1 "),(0,p._)("span",{class:"token operator"},"="),(0,p.Uk)(" $"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"map"),(0,p._)("span",{class:"token punctuation"},"("),(0,p.Uk)("arr"),(0,p._)("span",{class:"token punctuation"},","),(0,p._)("span",{class:"token keyword"},"function"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token parameter"},[(0,p.Uk)("value"),(0,p._)("span",{class:"token punctuation"},","),(0,p.Uk)("index")]),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},"{"),(0,p.Uk)("\n        console"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"log"),(0,p._)("span",{class:"token punctuation"},"("),(0,p.Uk)("index"),(0,p._)("span",{class:"token punctuation"},","),(0,p.Uk)("value"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n    "),(0,p._)("span",{class:"token punctuation"},"}"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n    console"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"log"),(0,p._)("span",{class:"token punctuation"},"("),(0,p.Uk)("arr1"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p._)("span",{class:"token comment"},"//是一个空数组"),(0,p.Uk)("\n\n")])]),(0,p._)("div",{class:"line-numbers"},[(0,p._)("span",{class:"line-number"},"1"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"2"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"3"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"4"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"5"),(0,p._)("br")])]),(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210228121807431",originSrc:"C:%5CUsers%5Cchuchen%5CPictures%5C%E8%A7%86%E9%A2%91%E6%88%AA%E5%9B%BE%5Cjavaweb%5Cweb%5Cimage-20210228121807431.png",data:"aurora"})]),(0,p._)("p",null,"each静态方法不支持在回调函数中对遍历的数组进行处理 map静态方法可以在回调函数中通过return对遍历的数组进行处理, 然后生成一个新的数组返回"),(0,p._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,p._)("pre",{class:"language-javascript"},[(0,p._)("code",null,[(0,p._)("span",{class:"token keyword"},"var"),(0,p.Uk)(" arr1 "),(0,p._)("span",{class:"token operator"},"="),(0,p.Uk)(" $"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"map"),(0,p._)("span",{class:"token punctuation"},"("),(0,p.Uk)("arr"),(0,p._)("span",{class:"token punctuation"},","),(0,p._)("span",{class:"token keyword"},"function"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token parameter"},[(0,p.Uk)("value"),(0,p._)("span",{class:"token punctuation"},","),(0,p.Uk)("index")]),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},"{"),(0,p.Uk)("\n    "),(0,p._)("span",{class:"token keyword"},"return"),(0,p.Uk)(" index"),(0,p._)("span",{class:"token operator"},"+"),(0,p._)("span",{class:"token string"},"':'"),(0,p._)("span",{class:"token operator"},"+"),(0,p.Uk)("value"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n"),(0,p._)("span",{class:"token punctuation"},"}"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\nconsole"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"log"),(0,p._)("span",{class:"token punctuation"},"("),(0,p.Uk)("arr1"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\nconsole"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"log"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token string"},'"---------"'),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n"),(0,p._)("span",{class:"token keyword"},"var"),(0,p.Uk)(" arr2 "),(0,p._)("span",{class:"token operator"},"="),(0,p.Uk)(" $"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"each"),(0,p._)("span",{class:"token punctuation"},"("),(0,p.Uk)("arr"),(0,p._)("span",{class:"token punctuation"},","),(0,p._)("span",{class:"token keyword"},"function"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token parameter"},[(0,p.Uk)("index"),(0,p._)("span",{class:"token punctuation"},","),(0,p.Uk)("value")]),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},"{"),(0,p.Uk)("\n    "),(0,p._)("span",{class:"token keyword"},"return"),(0,p.Uk)(" index"),(0,p._)("span",{class:"token operator"},"+"),(0,p._)("span",{class:"token string"},"':'"),(0,p._)("span",{class:"token operator"},"+"),(0,p.Uk)("value"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n"),(0,p._)("span",{class:"token punctuation"},"}"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\nconsole"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"log"),(0,p._)("span",{class:"token punctuation"},"("),(0,p.Uk)("arr2"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\nconsole"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"log"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token string"},'"-----------"'),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n")])]),(0,p._)("div",{class:"line-numbers"},[(0,p._)("span",{class:"line-number"},"1"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"2"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"3"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"4"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"5"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"6"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"7"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"8"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"9"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"10"),(0,p._)("br")])]),(0,p._)("p",null,"输出结果"),(0,p._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,p._)("pre",{class:"language-javascript"},[(0,p._)("code",null,[(0,p._)("span",{class:"token punctuation"},"["),(0,p._)("span",{class:"token string"},'"0:1"'),(0,p._)("span",{class:"token punctuation"},","),(0,p.Uk)(),(0,p._)("span",{class:"token string"},'"1:3"'),(0,p._)("span",{class:"token punctuation"},","),(0,p.Uk)(),(0,p._)("span",{class:"token string"},'"2:5"'),(0,p._)("span",{class:"token punctuation"},","),(0,p.Uk)(),(0,p._)("span",{class:"token string"},'"3:7"'),(0,p._)("span",{class:"token punctuation"},"]"),(0,p.Uk)("\n"),(0,p._)("span",{class:"token number"},"31"),(0,p.Uk)(),(0,p._)("span",{class:"token operator"},"--"),(0,p._)("span",{class:"token operator"},"--"),(0,p._)("span",{class:"token operator"},"--"),(0,p._)("span",{class:"token operator"},"--"),(0,p._)("span",{class:"token operator"},"-"),(0,p.Uk)("\n"),(0,p._)("span",{class:"token punctuation"},"["),(0,p._)("span",{class:"token number"},"1"),(0,p._)("span",{class:"token punctuation"},","),(0,p.Uk)(),(0,p._)("span",{class:"token number"},"3"),(0,p._)("span",{class:"token punctuation"},","),(0,p.Uk)(),(0,p._)("span",{class:"token number"},"5"),(0,p._)("span",{class:"token punctuation"},","),(0,p.Uk)(),(0,p._)("span",{class:"token number"},"7"),(0,p._)("span",{class:"token punctuation"},"]"),(0,p.Uk)("\n")])]),(0,p._)("div",{class:"line-numbers"},[(0,p._)("span",{class:"line-number"},"1"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"2"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"3"),(0,p._)("br")])]),(0,p._)("p",null,"从结果中可以看出，jQuery的each方法不能对回调函数的返回值进行处理")],-1),c=(0,p.uE)('<h2 id="_12-其他方法" tabindex="-1"><a class="header-anchor" href="#_12-其他方法" aria-hidden="true">#</a> 12. 其他方法</h2><ul><li><code>trim()</code>去除字符串两端的空格</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&quot;   str    &quot;</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;--&#39;</span><span class="token operator">+</span>str<span class="token operator">+</span><span class="token string">&#39;--&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> str1 <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;--&#39;</span><span class="token operator">+</span>str1<span class="token operator">+</span><span class="token string">&#39;--&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>运行结果</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">--</span>   str    <span class="token operator">--</span>\n<span class="token operator">--</span>str<span class="token operator">--</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>如果字符串的一端没有空格，那么并不会去除空格，像这样var str = &quot;- str &quot;;，调用此方法之后，还是var str = &quot; str &quot;;</code></p><ul><li><p><code>$.isArray();</code></p><blockquote><p>作用: 判断传入的对象是否是真数组 返回值: true/false</p></blockquote></li><li><p><code>$.isWindow();</code></p><blockquote><p>作用: 判断传入的对象是否是window对象 返 回值: true/false</p></blockquote></li><li><p><code>holdReady()</code></p><blockquote><p>作用就是可以展厅<code>ready()</code>函数的执行</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;ready&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">//只要页面的DOM元素加载完成就会出现弹框</span>\n$<span class="token punctuation">.</span><span class="token function">holdReady</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//可以阻止ready()函数的执行</span>\n$<span class="token punctuation">.</span><span class="token function">holdReady</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//恢复ready()函数的执行，</span>\n<span class="token function">ready</span><span class="token punctuation">(</span><span class="token punctuation">)</span>函数只会执行一次\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li></ul><h2 id="_13-vscod快速生成html文档" tabindex="-1"><a class="header-anchor" href="#_13-vscod快速生成html文档" aria-hidden="true">#</a> 13. vscod快速生成HTML文档</h2>',8),e=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210228145107918.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),l=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210228145137130.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),u=(0,p.uE)('<div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n\t<span class="token property">&quot;Html5-js&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n\t\t<span class="token property">&quot;prefix&quot;</span><span class="token operator">:</span> <span class="token string">&quot;js&quot;</span><span class="token punctuation">,</span>\n\t\t<span class="token property">&quot;body&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n\t\t\t<span class="token string">&quot;&lt;!DOCTYPE html&gt;&quot;</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">&quot;&lt;html lang=\\&quot;zh-CN\\&quot;&gt;&quot;</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">&quot;&lt;head&gt;&quot;</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">&quot;\\t&lt;meta charset=\\&quot;UTF-8\\&quot;&gt;&quot;</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">&quot;\\t&lt;meta name=\\&quot;viewport\\&quot; content=\\&quot;width=device-width, initial-scale=1.0\\&quot;&gt;&quot;</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">&quot;\\t&lt;meta http-equiv=\\&quot;X-UA-Compatible\\&quot; content=\\&quot;ie=edge\\&quot;&gt;&quot;</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">&quot;\\t&lt;title&gt;chuchen&lt;/title&gt;&quot;</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">&quot;\\t&lt;script src=\\&quot;./jquery-3.5.1.js\\&quot;&gt;&lt;/script&gt;&quot;</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">&quot;&lt;/head&gt;&quot;</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">&quot;&lt;body&gt;\\n&quot;</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">&quot;\\t&lt;script&gt;&quot;</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">&quot;\\t\\t$(document).ready(function() {&quot;</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">&quot;\\n&quot;</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">&quot;\\t\\t});&quot;</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">&quot;\\t&lt;/script&gt;&quot;</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">&quot;&lt;/body&gt;&quot;</span><span class="token punctuation">,</span>\n\t\t\t<span class="token string">&quot;&lt;/html&gt;&quot;</span>\n\t\t<span class="token punctuation">]</span><span class="token punctuation">,</span>\n\t\t<span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;快速创建在html5编写的js模板&quot;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">//&quot;prefix&quot;: &quot;js&quot;,是输入的快捷键的名称，输入js按tab就可以快速生成</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="_14-内容选择器" tabindex="-1"><a class="header-anchor" href="#_14-内容选择器" aria-hidden="true">#</a> 14. 内容选择器</h2><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>我是内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>我是内容那个div<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// :contains(text)</span>\n        <span class="token comment">// var div = $(&quot;div:contains(&#39;我是内容&#39;)&quot;);</span>\n        <span class="token comment">// console.log(div);</span>\n        <span class="token comment">// :empty</span>\n        <span class="token comment">// var div = $(&quot;div:empty&quot;);</span>\n        <span class="token comment">// console.log(div);</span>\n        <span class="token comment">// :has(selector)</span>\n        <span class="token comment">// var div = $(&quot;div:has(&#39;span&#39;)&quot;);</span>\n        <span class="token comment">// console.log(div);</span>\n        <span class="token comment">// :parent</span>\n        <span class="token keyword">var</span> div <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div:parent&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><ul><li><p>:contains(text) var div = $(&quot;div:contains(&#39;我是内容&#39;)&quot;); console.log(div);</p><blockquote><p>选择在选取的节点中查找含有内容为(text)的节点，不是等于，只要包含有这个文本就行</p></blockquote></li><li><p>:empty</p><p>在所有找到的$(“div”)节点中寻找节点为空的，如果该节点中还有其他的子节点元素，那跳过，像这种<code>&lt;div&gt;&lt;/div&gt;</code></p><p>var div = $(&quot;div:empty&quot;); console.log(div);</p></li><li><p>:has(selector)</p><p>查找拥有(selector)子节点标签的元素，是子标签，不能含有内容</p><p>var div = $(&quot;div:has(&#39;span&#39;)&quot;);，所有的div中是否子节点有span</p></li><li><p>:parent</p><p>返回该节点中还有子节点的元素</p><p>var div = $(&quot;div:parent&quot;)</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>我是内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>我是内容那个div<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!--返回\n&lt;div&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;\n&lt;div&gt;我是内容&lt;/div&gt;\n&lt;div&gt;&lt;span&gt;我是内容那个div&lt;/span&gt;&lt;/div&gt;\n--&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li></ul><h2 id="_15-属性" tabindex="-1"><a class="header-anchor" href="#_15-属性" aria-hidden="true">#</a> 15. 属性</h2>',5),i=(0,p._)("ul",null,[(0,p._)("li",null,[(0,p._)("p",null,"什么是属性？"),(0,p._)("blockquote",null,[(0,p._)("p",null,"在对象中的名称就是属性，其值是属性值")])]),(0,p._)("li",null,[(0,p._)("p",null,"什么是属性节点"),(0,p._)("blockquote",null,[(0,p._)("p",null,[(0,p._)("code",null,'<div class="div" name="chuchen"></div>'),(0,p.Uk)("这个节点是一个对象，那么其中就有很多的属性，属性节点就是"),(0,p._)("code",null,"class,name..."),(0,p.Uk)("写在后面的值，也可以在浏览器中进行查看")]),(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210228153256215.png?x-oss-process=style/pictureProcess1",data:"aurora"})]),(0,p._)("p",null,[(0,p.Uk)("在"),(0,p._)("code",null,"attributes"),(0,p.Uk)("中的值，才是属性节点，其他的都不是，我们可以使用原生js操作这些节点")])])])],-1),k=(0,p.uE)('<h2 id="_16-attr" tabindex="-1"><a class="header-anchor" href="#_16-attr" aria-hidden="true">#</a> 16. <code>attr()</code></h2><p>使用这个方法可以操作属性节点</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>chu<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>chen<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>参数</p><blockquote><p>可以有一个，两个</p><ol><li><p>一个参数：获取属性节点值</p><p><code>var div = $(&quot;div&quot;).attr(&quot;class&quot;);console.log(div);</code>只会打印一个值，无论获取到的元素有多少个，都只会返回第一个节点的属性值</p></li><li><p>两个参数：设置属性节点值</p><p><code>$(&quot;div&quot;).attr(&quot;class&quot;,&quot;beizi&quot;);</code>会将所有获取到的div的class设置为<code>beizi</code>，说实话，这个方法没有原生的好用</p></li></ol></blockquote><p>##17. <code>removeAttr()</code></p><p><code>$(&quot;div&quot;).removeAttr(&quot;class&quot;);</code>移除所有找到的节点的class值，是所有，如果想要一次性移除多个，可以使用这种方式进行</p><p><code>$(&quot;div&quot;).removeAttr(&quot;class name&quot;);</code>中间使用空格，不要使用逗号</p><h2 id="_18-prop" tabindex="-1"><a class="header-anchor" href="#_18-prop" aria-hidden="true">#</a> 18. prop()</h2><p>此方法和<code>attr()</code>方法的使用是一样的，但是这个获取的是属性的值，或者操作属性的值，<code>还可以获取或者设置属性节点的值</code></p><p>参数也是一样，同样可以接收两个参数</p><p><code>不能更改默认属性的值，像attributes，会报错</code>，如果有两个参数，那么会添加属性</p><p><code> $(&quot;span&quot;).prop(&quot;avip&quot;,&quot;vipblogs.cn&quot;);</code></p><p>获取属性节点的值，或者设置</p><blockquote><p><code>var span1 = $(&quot;span:eq(0)&quot;).prop(&quot;class&quot;);</code></p><p>通过这个方式可以获取到属性节点的值</p></blockquote><ul><li><p>通过prop()和attr()都可以获取到属性节点的值，那么该如果选择？</p><blockquote><p>具有 true 和 false 两个属性的属性节点，如 checked, selected 或者 disabled 使用prop()，其他的使用 attr()</p></blockquote></li></ul><h2 id="_19-操作class" tabindex="-1"><a class="header-anchor" href="#_19-操作class" aria-hidden="true">#</a> 19. 操作class</h2><ul><li><p>addClass()</p><p>此方法可以在元素中添加class属性节点值，可以添加多个，使用空格隔开<code>addClass(&quot;div1&quot;)</code></p></li><li><p>removeClass(&quot;div1&quot;)移除此节点中的指定class值，可以同时移除多个，使用空格隔开</p></li><li><p>toggleClass(&quot;div1 div2&quot;)如果此节点中存在这个class值，那么就删除，否则就添加，进行切换</p></li></ul><h2 id="_20-获取文本值" tabindex="-1"><a class="header-anchor" href="#_20-获取文本值" aria-hidden="true">#</a> 20. 获取文本值</h2><ul><li><p>html([val|fn])</p><p>获取或者设置HTML前端，如果参数为0，就是获取HTML</p><p><code>$(&quot;div&quot;).html(&quot;&lt;h1&gt;h1标签&lt;/h1&gt;&quot;)</code></p></li><li><p>text([val|fn])</p><p>和html()方法的使用一样，只是这个获取的是文本，原生js中的<code>innerText</code></p></li><li><p>val([val|fn|arr])</p><p>设置或者获取<code>input</code>的值，只能获取<code>value</code>的值</p></li></ul><h2 id="_21-操作css样式" tabindex="-1"><a class="header-anchor" href="#_21-操作css样式" aria-hidden="true">#</a> 21. 操作css样式</h2><ul><li><p>第一种方式</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;width&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;100px&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;height&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;100px&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;background&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>第二种方式</p><p><code>jQuery支持链式编程</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;width&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;100px&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;height&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;100px&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;background&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>第三种方式</p><p>使用对象的写法(推荐做法，因为这种方式和写css时一样的)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">width</span><span class="token operator">:</span><span class="token string">&quot;100px&quot;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">height</span><span class="token operator">:</span><span class="token string">&quot;100px&quot;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">background</span><span class="token operator">:</span><span class="token string">&quot;pink&quot;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ul><h2 id="_22-获取尺寸和位置" tabindex="-1"><a class="header-anchor" href="#_22-获取尺寸和位置" aria-hidden="true">#</a> 22. 获取尺寸和位置</h2>',23),r=(0,p._)("ul",null,[(0,p._)("li",null,[(0,p._)("p",null,"获取尺寸"),(0,p._)("blockquote",null,[(0,p._)("ul",null,[(0,p._)("li",null,[(0,p._)("p",null,"height([val|fn])"),(0,p._)("p",null,"获取或者设置高度"),(0,p._)("p",null,[(0,p._)("code",null,'$("div").height("100px")'),(0,p.Uk)("设置高度为"),(0,p._)("code",null,"100px")]),(0,p._)("p",null,[(0,p._)("code",null,'$("div").height()'),(0,p.Uk)("获取高度")])]),(0,p._)("li",null,[(0,p._)("p",null,"width([val|fn])")]),(0,p._)("li",null,[(0,p._)("p",null,"innerHeight()")]),(0,p._)("li",null,[(0,p._)("p",null,"innerWidth(")]),(0,p._)("li",null,[(0,p._)("p",null,"outerHeight([options])")]),(0,p._)("li",null,[(0,p._)("p",null,"outerWidth([options])")])])])]),(0,p._)("li",null,[(0,p._)("p",null,"位置"),(0,p._)("blockquote",null,[(0,p._)("ul",null,[(0,p._)("li",null,[(0,p._)("p",null,"offset([coordinates])"),(0,p._)("blockquote",null,[(0,p._)("p",null,"获取或者设置元素距离窗口的偏移位")]),(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210228182656927.png?x-oss-process=style/pictureProcess1",data:"aurora"})]),(0,p._)("p",null,"设置"),(0,p._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,p._)("pre",{class:"language-javascript"},[(0,p._)("code",null,[(0,p._)("span",{class:"token function"},"$"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token string"},'"div"'),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"offset"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token punctuation"},"{"),(0,p.Uk)("\n   "),(0,p._)("span",{class:"token literal-property property"},"left"),(0,p._)("span",{class:"token operator"},":"),(0,p.Uk)(),(0,p._)("span",{class:"token number"},"10"),(0,p.Uk)("\n"),(0,p._)("span",{class:"token punctuation"},"}"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n")])]),(0,p._)("div",{class:"line-numbers"},[(0,p._)("span",{class:"line-number"},"1"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"2"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"3"),(0,p._)("br")])])]),(0,p._)("li",null,[(0,p._)("p",null,"position()"),(0,p._)("p",null,"获取元素距离定位位置的距离，也就是css中的left，top等值"),(0,p._)("p",null,[(0,p._)("code",null,'$("div").position().left'),(0,p.Uk)("获取距离左边定位位置的值")]),(0,p._)("p",null,[(0,p._)("code",null,"position()"),(0,p.Uk)("只能获取，不能设置，如果需要设置的话，可以使用css()进行设置")]),(0,p._)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,p._)("pre",{class:"language-javascript"},[(0,p._)("code",null,[(0,p._)("span",{class:"token function"},"$"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token string"},'".son"'),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},"."),(0,p._)("span",{class:"token function"},"position"),(0,p._)("span",{class:"token punctuation"},"("),(0,p._)("span",{class:"token punctuation"},"{"),(0,p.Uk)("\n    "),(0,p._)("span",{class:"token literal-property property"},"left"),(0,p._)("span",{class:"token operator"},":"),(0,p.Uk)(),(0,p._)("span",{class:"token number"},"10"),(0,p.Uk)("\n"),(0,p._)("span",{class:"token punctuation"},"}"),(0,p._)("span",{class:"token punctuation"},")"),(0,p._)("span",{class:"token punctuation"},";"),(0,p.Uk)("\n无效\n")])]),(0,p._)("div",{class:"line-numbers"},[(0,p._)("span",{class:"line-number"},"1"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"2"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"3"),(0,p._)("br"),(0,p._)("span",{class:"line-number"},"4"),(0,p._)("br")])])])])])]),(0,p._)("li",null,[(0,p._)("p",null,"scrollTop([val])"),(0,p._)("p",null,"这个是设置或者获取滚动的偏移量"),(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210228215904371.png?x-oss-process=style/pictureProcess1",data:"aurora"})]),(0,p._)("blockquote",null,[(0,p._)("ul",null,[(0,p._)("li",null,"获取偏移量")]),(0,p._)("p",null,[(0,p._)("code",null,'$("html").scrollTop()')]),(0,p._)("p",null,[(0,p.Uk)("对于像谷歌这种高级浏览器，"),(0,p._)("code",null,'$("body").scrollTop()'),(0,p.Uk)("获取到的是0，但是对于ie浏览器，只有"),(0,p._)("code",null,'$("body").scrollTop()'),(0,p.Uk)("才可以获取到")]),(0,p._)("p",null,"兼容方式:"),(0,p._)("p",null,[(0,p._)("code",null,'$("html").scrollTop()+$("body").scrollTop()'),(0,p.Uk)("，对于高级浏览器，"),(0,p._)("code",null,"body"),(0,p.Uk)("方式获取是0，低版本浏览器，通过"),(0,p._)("code",null,"html"),(0,p.Uk)("获取为0，")]),(0,p._)("ul",null,[(0,p._)("li",null,[(0,p._)("p",null,"设置偏移量"),(0,p._)("p",null,[(0,p._)("code",null,'$("html").scrollTop(400);'),(0,p.Uk)("，注意这里不能加上"),(0,p._)("code",null,"px"),(0,p.Uk)("，只要数字就可以")]),(0,p._)("p",null,[(0,p._)("code",null,"为了保证兼容方式，设置偏移量的时候，必须按照这种方式进行设置")]),(0,p._)("p",null,[(0,p._)("code",null,'$("html,body").scrollTop(400);')])])])]),(0,p._)("p",null,"scrollLeft([val])")])],-1),b=(0,p.uE)('<h2 id="_23-事件" tabindex="-1"><a class="header-anchor" href="#_23-事件" aria-hidden="true">#</a> 23. 事件</h2><h3 id="_23-1-事件的绑定方式" tabindex="-1"><a class="header-anchor" href="#_23-1-事件的绑定方式" aria-hidden="true">#</a> 23.1 事件的绑定方式</h3><ul><li><p>第一种方式</p><blockquote><p>通过<code>$(&quot;button&quot;).事件名称(function() {事件处理});</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;点击事件&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></blockquote></li></ul><p>缺点：这种方式绑定的事件，只能是jQuery已经封装的事件，对于部分没有封装的原生事件，此方式不能使用</p><p>优点：同一个事件可以绑定不同的实现体，同一个事件源也可以绑定不同的事件，</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;点击事件&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    \n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;点击事件+11&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    \n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mouseenter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;鼠标进入&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    \n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mouseleave</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;鼠标离开&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    \n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ul><li><p>第二种方式</p><blockquote><p><code>$(&quot;button&quot;).on(&#39;事件名称&#39;,function() {...});</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;点击事件+11&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    \n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></blockquote><p>这种方式中的事件名称不仅可以设置jQuery已经封装的，还可以绑定原生js中的事件，适用所有的事件，这种方式同一个事件源也可以绑定不同的事件，并且同一个事件可以执行不同的处理方式</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;点击事件+11&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    \n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;mouseenter&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;进入&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    \n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;mouseleave&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;离开&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    \n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_23-2-移除事件" tabindex="-1"><a class="header-anchor" href="#_23-2-移除事件" aria-hidden="true">#</a> 23.2 移除事件</h3><p>使用<code>off(&quot;需移除的事件名称&quot;)</code></p><p>传入的参数不同，最后的效果也不同</p><ul><li><p>零个参数</p><blockquote><p><code>$(&quot;...&quot;).off(&quot;&quot;)</code>无参，移除该事件源中所有的事件类型</p></blockquote></li><li><p>一个参数</p><blockquote><p><code>$(&quot;...&quot;).off(&quot;click&quot;)</code>移除该事件源中指定(参数)事件的所有事件类型</p></blockquote></li><li><p>两个参数</p><blockquote><p><code>$(&quot;...&quot;).off(&quot;click&quot;,test1)</code>test1是一个函数，移除该事件源中指定事件类型的指定事件</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">function</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test1...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">function</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;test2...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;mouseenter&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;进入&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    \n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>test1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>test2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;mouseleave&#39;</span><span class="token punctuation">,</span>test1<span class="token punctuation">)</span><span class="token punctuation">;</span>    \n            <span class="token comment">// $(&quot;button&quot;).off(&quot;click&quot;);</span>\n            <span class="token comment">// $(&quot;button&quot;).off(&quot;click&quot;,test1);移除click类型中的test1事件</span>\n            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&quot;mouseleave&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div></blockquote></li></ul><h3 id="_23-3-阻止事件冒泡" tabindex="-1"><a class="header-anchor" href="#_23-3-阻止事件冒泡" aria-hidden="true">#</a> 23.3 阻止事件冒泡</h3><p>如果子元素没有添加事件，而父元素添加了事件，那么点击子元素，浏览器就会在子元素中寻找子元素是否有事件，如果没有找到，就会向上取找，也就是父元素，父元素有，那么就会执行父元素的事件，所以<code>冒泡事件无论你有没有事件，都会从当前元素寻找，接着向上寻找</code></p><p>点击子元素的事件，就会向上冒泡，使用原生的方式也可以阻止，这里就通过jQuery的方式进行阻止</p><blockquote><p>阻止事件冒泡</p><ul><li><p>方式一</p><p>在事件类型函数参数中，<code>return false</code>，可以阻止</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.son&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">even</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n     <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;son&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n     <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>方式二</p><p>调用<code>even.stopPropagation();</code>也可以阻止事件冒泡</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token string">&quot;.son&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">even</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n   <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;son&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n   even<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ul></blockquote><h3 id="_23-4-阻止默认行为" tabindex="-1"><a class="header-anchor" href="#_23-4-阻止默认行为" aria-hidden="true">#</a> 23.4 阻止默认行为</h3><p>像form表单，锚链接这种，点击之后，会出现跳转的，可以阻止这种默认行为的发生</p><ul><li><p>方式一</p><p>返回<code>return false</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">even</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;注册&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n     <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>方式二</p><p>调用<code>even.preventDefault();</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">even</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;注册&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    even<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ul><h3 id="_23-5-执行自动事件" tabindex="-1"><a class="header-anchor" href="#_23-5-执行自动事件" aria-hidden="true">#</a> 23.5 执行自动事件</h3><p>有时候，我们需要在当用户进入页面的时候，就会让浏览器自动去执行一些事件，这个时候，就可以使用自动触发事件</p><p>添加步骤</p><ol><li>为需要执行自动触发的事件源绑定事件</li><li>调用<code>$(&quot;.son&quot;).trigger(&quot;事件类型&quot;)</code><ul><li>或者调用<code>$(&quot;.son&quot;).triggerHandler(&quot;事件类型&quot;);</code></li></ul></li></ol><blockquote><p><code>trigger()</code>和<code>triggerHandler()</code>的区别</p><ol><li>trigger()会触发冒泡事件</li></ol><p>​ 对于submit，会触发默认行为</p><ol start="2"><li><p>triggerHandler()不会触发冒泡事件</p><p>不会触发默认行为</p></li></ol></blockquote><p><code>但是对于&lt;a&gt;标签，上面两个方法都不会触发默认行为，如果想要是锚链接自动触发事件，并且执行默认行为，需要使用下面这种方式</code></p><blockquote><p><code>&lt;a href=&quot;https://www.vipblogs.cn&quot;&gt;&lt;span&gt;博客&lt;/span&gt;&lt;/a&gt;</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;span&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;span&quot;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// $(&quot;span&quot;).trigger(&quot;click&quot;);</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;span&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">triggerHandler</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>为<code>&lt;a&gt;</code>添加一个<code>span</code>，并且为这个span标签添加事件，添加自动触发事件</p></blockquote><h3 id="_23-6-自动触发自定义事件" tabindex="-1"><a class="header-anchor" href="#_23-6-自动触发自定义事件" aria-hidden="true">#</a> 23.6 自动触发自定义事件</h3><p>我们也可以自己定义事件，但是这个事件，我测试发现，只有设置自动触发，才会执行</p><p>使用步骤</p><ol><li><p>使用<code>$(&quot;&quot;).on(&#39;自定义事件名称&#39;,function(){})</code></p></li><li><p>调用自动触发函数，</p><p><code>trigger(&quot;自定义事件名&quot;)</code>，<code>triggerHandler(&quot;自定义事件名&quot;)</code></p></li></ol><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.son&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;mySelf&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;son&quot;</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.son&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;mySelf&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>father<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>son<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>这里不能使用<code>$(&quot;&quot;).事件类型名称()</code>方式，因为这种方式只能调用jQuery已经封装好的事件类型名称，有限制，只能使用<code>$(&quot;&quot;).on(&quot;自定义事件名称&quot;,function(){})</code></p><h3 id="_23-7-事件的命名空间" tabindex="-1"><a class="header-anchor" href="#_23-7-事件的命名空间" aria-hidden="true">#</a> 23.7 事件的命名空间</h3><p>什么是事件的命名空间？</p><p>在写一个项目的时候，每一个项目都是很多个人一起共同协同开发的，对于一个事件源，可能存在不同的开发人员对其进行不同的事件的添加，那么这个时候，同一个事件源可以添加不同的事件，那么就会存在不知道这个事件是谁添加的，造成混乱，而且在执行的时候，也不能保证单独执行某个开发人员绑定的事件，<code>命名空间就是解决这个问题</code></p><p>使用命名空间需要满足两个要求</p><ol><li><p>使用<code>$(&quot;...&quot;).on(&quot;&quot;)</code>进行事件的绑定</p></li><li><p>事件名满足格式<code>click.开发人员标志</code>，开发人员标志随意，能够进行分辨就可以</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.son&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;click.zs&quot;</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;son1&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.son&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;click.ls&quot;</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;son2&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.son&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&quot;click.ls&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>如何执行不同开发人员绑定的事件</p><p>调用<code>$(&quot;.son&quot;).trigger(&quot;click.ls&quot;);</code>注意:格式 <code>事件类型名.标志名</code>需要和绑定事件名一致</p><h4 id="_23-7-1-事件命名空间面试题" tabindex="-1"><a class="header-anchor" href="#_23-7-1-事件命名空间面试题" aria-hidden="true">#</a> 23.7.1 事件命名空间面试题</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.father&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;click.ls&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;father click1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.father&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;father click2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.son&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;click.ls&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;son click1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// $(&quot;.son&quot;).trigger(&quot;click.ls&quot;);</span>\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.son&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><code>利用trigger触发子元素带命名空间的事件, 那么父元素带相同命名空间的事件也会被触发. 而父元素没有命名空间的事件不会被触发 利用trigger触发子元素不带命名空间的事件,那么子元素所有相同类型的事件和父元素所有相同类型的事件都会被触发</code></p><h2 id="_24-事件委托" tabindex="-1"><a class="header-anchor" href="#_24-事件委托" aria-hidden="true">#</a> 24. 事件委托</h2><p>什么是事件委托？</p><p>像生活中的事情，把一件事委托给另一个人去完成，这个就是委托，</p><p>在js中，事件委托就是，把一个元素的某个事件，委托给另一个元素去帮他完成</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>我是第1个li<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>我是第2个li<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>我是第3个li<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>新增一个li<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n   <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n       <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n           <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;li&gt;我是新增的li&lt;/li&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n       <span class="token punctuation">}</span><span class="token punctuation">)</span>\n       <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n           console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n       <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>如果是上面这个程序，为<code>li</code>绑定一个点击事件，最开始有三个<code>li</code>，并且绑定的点击事件是在入口函数中编写的，也就是等页面中的<code>DOM</code>元素都加载完成之后，才会执行js代码，但是等<code>DOM</code>元素加载完毕，这个时候浏览器看到的<code>li</code>只是已经加载的那三个<code>li</code>，对于点击按钮添加的事件，浏览器并不会发生，这个时候，点击新添加的<code>li</code>并不会触发事件，因为这个新添加的<code>li</code>是在入口函数执行之后才添加的，浏览器找不到，</p><p>解决这个问题的核心就是，使用事件委托机制，也就是找一个在执行入口函数的时候，已经加载完成的元素，进行委托，帮助其完成这个事件，可以使用<code>ul</code>进行委托，因为ul在执行入口函数的时候，就已经存在的了</p><p>委托事件的使用步骤</p><blockquote><p>调用<code>$(&quot;委托谁&quot;).delegate(&quot;谁委托&quot;,&quot;事件类型&quot;,&quot;函数&quot;)</code></p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delegate</span><span class="token punctuation">(</span><span class="token string">&quot;li&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nli标签委托ul执行点击事件\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="_25-事件的移入移出" tabindex="-1"><a class="header-anchor" href="#_25-事件的移入移出" aria-hidden="true">#</a> 25. 事件的移入移出</h2><ul><li><p><code>mouseover()</code>是鼠标进入此事件源，便会触发事件</p></li><li><p><code>mouseout()</code>鼠标离开此事件源，便会触发事件</p></li></ul><p>缺点：</p>',56),d=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210302175925070.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),g=(0,p.uE)('<blockquote><p>为大盒子添加了移出和移入事件，但是当鼠标进入子盒子，也会触发进入和离开事件，但是这种情况是不允许的，因为子盒子在父盒子内，是父盒子的一部分，我们想要的是，鼠标进入子盒子，不会触发进入和离开事件，可以使用下面两个事件进行解决</p></blockquote><ul><li><p><code>mouseenter()</code>监听移入事件，可以解决移入子盒子触发事件的情况</p></li><li><p><code>mouseleave()</code>监听移出事件，同样可以解决移出子盒子触发事件的情况</p></li><li><p><code>hover()</code>此事件可以同时监听鼠标移入和移出事件，根据参数的不同，效果也是不同</p><blockquote><ul><li><p>一个参数</p><p><code>hover(function(){....})</code></p><p>同时监听移入和移出事件，如果传入的只是一个函数的话，移入和移出事件源都会触发此函数</p></li><li><p>两个参数</p><p><code>hover(function(){....},function(){})</code></p><p>第一个函数的监听移入事件，第二个是监听移出事件</p></li></ul></blockquote></li></ul><h2 id="显示和隐藏效果" tabindex="-1"><a class="header-anchor" href="#显示和隐藏效果" aria-hidden="true">#</a> 显示和隐藏效果</h2><p>下面的方法需要两个参数，可以有一个</p><p>如果是无参，那么基本上没有什么动画的效果</p><p>第一个参数，动画产生的时间</p><p>第二个参数，动画显示或者隐藏之后执行的代码</p><ul><li><code>show()</code></li><li><code>hide()</code></li><li><code>toggle()</code></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button:eq(0)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>f\n        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span>fu\n            <span class="token comment">// alert(&quot;显示&quot;)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button:eq(1)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>f\n        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span>fu\n            <span class="token comment">// alert(&quot;隐藏&quot;)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button:eq(2)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>f\n        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><code>需要注意一下，显示和隐藏的移动方向</code></p>',10),m=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210302205859044.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),q=(0,p._)("ul",null,[(0,p._)("li",null,[(0,p._)("p",null,"显示与隐藏的对联案例"),(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210302205523499.png?x-oss-process=style/pictureProcess1",data:"aurora"})])])],-1),v=(0,p.uE)('<p>实现这种对联广告的案例</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n        <span class="token selector">.left</span> <span class="token punctuation">{</span>\n            <span class="token comment">/*display: none;*/</span>\n            <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>\n            <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>\n            <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>\n            <span class="token property">left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>\n            <span class="token property">top</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token selector">.right</span> <span class="token punctuation">{</span>\n            <span class="token comment">/*display: none;*/</span>\n            <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>\n            <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n            <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>\n            <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>\n            <span class="token property">right</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>\n            <span class="token property">top</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../jquery-3.5.1.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scroll</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">var</span> scrol <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;html,body&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>scrol<span class="token punctuation">)</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>scrol <span class="token operator">&gt;</span> <span class="token number">900</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>\n                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>left<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./photo/left.jpg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>right<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./photo/right.jpg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>\n    *20\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><h2 id="滑动效果" tabindex="-1"><a class="header-anchor" href="#滑动效果" aria-hidden="true">#</a> 滑动效果</h2><blockquote><ul><li>slideDown([s],[e],[fn])</li><li>slideUp([s,[e],[fn]])</li><li>slideToggle([s],[e],[fn])</li></ul></blockquote><p>如果某个盒子的css样式为</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token property">display</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>那么，如果为这个盒子添加滑动效果，会显示这个盒子</p><p><code>slideToggle()</code></p><p>折叠菜单案例</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>42-折叠菜单上<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n        <span class="token selector">*</span><span class="token punctuation">{</span>\n            <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n            <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token selector">.nav</span><span class="token punctuation">{</span>\n            <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n            <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>\n            <span class="token property">margin</span><span class="token punctuation">:</span> 100px auto<span class="token punctuation">;</span>\n            <span class="token comment">/*border: 1px solid #000;*/</span>\n        <span class="token punctuation">}</span>\n        <span class="token selector">.nav&gt;li</span><span class="token punctuation">{</span>\n            <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #000<span class="token punctuation">;</span>\n            <span class="token property">line-height</span><span class="token punctuation">:</span> 35px<span class="token punctuation">;</span>\n            <span class="token property">border-bottom</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n            <span class="token property">text-indent</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span>\n            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token selector">.nav&gt;li:last-child</span><span class="token punctuation">{</span>\n            <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px solid #000<span class="token punctuation">;</span>\n            <span class="token property">border-bottom-right-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n            <span class="token property">border-bottom-left-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token selector">.nav&gt;li:first-child</span><span class="token punctuation">{</span>\n            <span class="token property">border-top-right-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n            <span class="token property">border-top-left-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token selector">.nav&gt;li&gt;span</span><span class="token punctuation">{</span>\n            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&quot;./photo/arrow_right.png&quot;</span><span class="token punctuation">)</span></span> no-repeat center center<span class="token punctuation">;</span>\n            <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>\n            <span class="token property">width</span><span class="token punctuation">:</span> 32px<span class="token punctuation">;</span>\n            <span class="token property">height</span><span class="token punctuation">:</span> 32px<span class="token punctuation">;</span>\n            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n            <span class="token property">right</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n            <span class="token property">top</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token selector">.sub</span> <span class="token punctuation">{</span>\n            <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token selector">.sub&gt;li</span><span class="token punctuation">{</span>\n            <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n            <span class="token property">background</span><span class="token punctuation">:</span> mediumpurple<span class="token punctuation">;</span>\n            <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px solid white<span class="token punctuation">;</span>\n            <span class="token comment">/*display: none;*/</span>\n        <span class="token punctuation">}</span>\n        <span class="token selector">.sub&gt;li:hover</span><span class="token punctuation">{</span>\n            <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../jquery-3.5.1.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// $(&quot;.nav&gt;li&gt;ul&quot;).css(&quot;display&quot;,&quot;none&quot;);</span>\n            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.nav&gt;li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment">//为当前元素的子元素添加动画</span>\n                <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">&quot;.sub&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideToggle</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token comment">//清除当前元素的其他兄弟元素的子元素的动画</span>\n                <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">siblings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nav<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>一级菜单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sub<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>二级菜单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>二级菜单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>二级菜单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>二级菜单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>二级菜单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n    。。。。*4\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br></div></div><h2 id="stop" tabindex="-1"><a class="header-anchor" href="#stop" aria-hidden="true">#</a> <code>stop()</code></h2><p>此方法可以停止所有在执行元素上执行的动画，是所有，<code>必须确定是指定元素上</code></p><blockquote><p>停止所有在指定元素上正在运行的动画。</p><p>如果队列中有等待执行的动画(并且clearQueue没有设为true)，他们将被马上执行</p></blockquote>',13),h=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210302214720438.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),f=(0,p.uE)('<p>如果一直点这个的话，那么动画队列中还有很多的队列还没有执行完，只有等全部的动画执行完毕之后，才会停止，这种我们应该避免，可以使用<code>stop()</code>可以避免</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.nav&gt;li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mouseenter</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">&quot;.sub&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">&quot;.sub&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideToggle</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.nav&gt;li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mouseleave</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">&quot;.sub&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">&quot;.sub&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideToggle</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="自定义动画animate" tabindex="-1"><a class="header-anchor" href="#自定义动画animate" aria-hidden="true">#</a> 自定义动画<code>animate()</code></h2><ul><li><p>第一个参数</p><p>更改样式的一个<code>对象集合</code>，在里面写需要更改的样式，对于<code>width</code>，不需要加上<code>px</code>，否则报错</p><p>多个样式之间使用逗号隔开，最后一个不需要</p><p><code>累加属性</code>：对象中，像width,height可以使用<code>+=100</code>这种形式，也就是宽度在前一次动画的基础之上，再加上100，能够使用<code>int</code>的样式都可以使用这种方式</p><p><code>关键字属性</code>：<code>width</code>等等可以使用之前的效果的关键字进行，<code>hide,toggle</code>等效果，同样可以在这里使用</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.one&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">300</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// alert(1);</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.one&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&quot;+=100&quot;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.two&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token comment">// width:&quot;hide&quot;</span>\n        <span class="token literal-property property">width</span><span class="token operator">:</span><span class="token string">&quot;toggle&quot;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></li><li><p>第二个参数</p><p>执行的时间</p></li><li><p>第三个参数</p><p>速度，</p></li><li><p>第四个参数</p><p>动画执行完毕之后需要执行的函数</p></li></ul><blockquote><p>样式参数中，如果一次性写多个，它是一起执行的，有时候我们想要比如，先等宽度先变化，然后在去变化高度，这个就可以分开写</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.one&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">400</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.one&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">400</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>同时jQuery是支持链式编程的，所以我们可以使用链式编程，减少代码的编写量</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//链式编程</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.one&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">400</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">height</span><span class="token operator">:</span><span class="token number">300</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//但是这种方式，只能对于在同一个元素上进行的动画</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></blockquote><p><code>delay()</code>延迟时间</p><p>使用这个方法，可以让一个动画执行完毕之后，延迟一定的时间，参数传递一个时间</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.one&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">400</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">height</span><span class="token operator">:</span><span class="token number">300</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>stop()</code>方法的使用</p><blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 立即停止当前动画, 继续执行后续的动画</span>\n    <span class="token comment">// $(&quot;div&quot;).stop();</span>\n    <span class="token comment">// $(&quot;div&quot;).stop(false);</span>\n    <span class="token comment">// $(&quot;div&quot;).stop(false, false);</span>\n\n    <span class="token comment">// 立即停止当前和后续所有的动画</span>\n    <span class="token comment">// $(&quot;div&quot;).stop(true);</span>\n    <span class="token comment">// $(&quot;div&quot;).stop(true, false);</span>\n\n    <span class="token comment">// 立即完成当前的, 继续执行后续动画</span>\n    <span class="token comment">// $(&quot;div&quot;).stop(false, true);</span>\n\n    <span class="token comment">// 立即完成当前的, 并且停止后续所有的</span>\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div></blockquote><h2 id="实现无限循环的效果" tabindex="-1"><a class="header-anchor" href="#实现无限循环的效果" aria-hidden="true">#</a> 实现无限循环的效果</h2><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>50-无限循环滚动<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n        <span class="token selector">*</span><span class="token punctuation">{</span>\n            <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n            <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token selector">div</span><span class="token punctuation">{</span>\n            <span class="token property">width</span><span class="token punctuation">:</span> 600px<span class="token punctuation">;</span>\n            <span class="token property">height</span><span class="token punctuation">:</span> 161px<span class="token punctuation">;</span>\n            <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #000<span class="token punctuation">;</span>\n            <span class="token property">margin</span><span class="token punctuation">:</span> 100px auto<span class="token punctuation">;</span>\n            <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token selector">ul</span><span class="token punctuation">{</span>\n            <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n            <span class="token property">width</span><span class="token punctuation">:</span> 1800px<span class="token punctuation">;</span>\n            <span class="token property">height</span><span class="token punctuation">:</span> 161px<span class="token punctuation">;</span>\n            <span class="token property">background</span><span class="token punctuation">:</span> #000<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token selector">ul&gt;li</span><span class="token punctuation">{</span>\n            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>js/jquery-1.12.4.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 0.定义变量保存偏移位</span>\n            <span class="token keyword">var</span> offset <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n            <span class="token comment">// 1.让图片滚动起来</span>\n            <span class="token keyword">var</span> timer<span class="token punctuation">;</span>\n            <span class="token keyword">function</span> <span class="token function">autoPlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    offset <span class="token operator">+=</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">;</span>\n                    <span class="token keyword">if</span><span class="token punctuation">(</span>offset <span class="token operator">&lt;=</span> <span class="token operator">-</span><span class="token number">1200</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                        offset <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;marginLeft&quot;</span><span class="token punctuation">,</span> offset<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token function">autoPlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n           <span class="token comment">// 2.监听li的移入和移出事件</span>\n            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hover</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment">// 停止滚动</span>\n                <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token comment">// 给非当前选中添加蒙版</span>\n                <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">siblings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeTo</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token comment">// 去除当前选中的蒙版</span>\n                <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeTo</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment">// 继续滚动</span>\n                <span class="token function">autoPlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token comment">// 去除所有的蒙版</span>\n                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeTo</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>images/a.jpg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>images/b.jpg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>images/c.jpg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>images/d.jpg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>images/a.jpg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>images/b.jpg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br></div></div>',12),y=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210302233926359.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),_=(0,p.uE)('<p>鼠标点击每一张图片，其余图片会自动添加一个蒙版，鼠标移开，有自动循环，蒙版消失</p><p>使用知识点：</p><blockquote><p>定时器的使用</p><p><code>fadeTo()</code>方法</p></blockquote><h2 id="操作文档" tabindex="-1"><a class="header-anchor" href="#操作文档" aria-hidden="true">#</a> 操作文档</h2><ul><li><h3 id="内部插入" tabindex="-1"><a class="header-anchor" href="#内部插入" aria-hidden="true">#</a> 内部插入</h3><ul><li>append(content|fn)</li><li>appendTo(content)</li></ul><p><code>append()/appendTo()会将元素添加到指定元素内部的最后</code></p><ul><li>prepend(content|fn)</li><li>prependTo(content)</li></ul><p><code>prepend()/prependTo()会将元素添加到指定元素内部的最前面</code></p><blockquote><p>这两种内部添加的方式的区别：</p></blockquote></li><li><h3 id="外部插入" tabindex="-1"><a class="header-anchor" href="#外部插入" aria-hidden="true">#</a> 外部插入</h3><ul><li><p>after(content|fn)</p><p><code>会将元素添加到指定元素外部的后面</code></p><img src="http://ooszy.cco.vin/img/blog-note/image-20210303125001188.png?x-oss-process=style/pictureProcess1" alt="image-20210303125001188" style="zoom:33%;"></li><li><p>before(content|fn)</p><p><code>会将元素添加到指定元素外部的前面</code></p></li><li><p>insertAfter(content)</p></li><li><p>insertBefore(content)</p></li></ul></li><li><p>删除</p><ul><li><p>empty()</p><p>删除指定元素的内容和子元素, 指定元素自身不会被删除</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>sdfkjsdfl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>sdfsdf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\t\t\t变为\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>remove([expr]))</p><p>利用remove删除之后再重新添加,原有的事件无法响应</p></li><li><p>detach([expr]))</p><p>利用detach删除之后再重新添加,原有事件可以响应</p></li></ul></li></ul>',5),j={},x=(0,a(83744).Z)(j,[["render",function(n,s){return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,o,c,e,l,u,i,k,r,b,d,g,m,q,v,h,f,y,_],64)}]])}}]);
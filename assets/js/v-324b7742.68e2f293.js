"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6190],{99020:(n,s,e)=>{e.r(s),e.d(s,{data:()=>a});const a={key:"v-324b7742",path:"/redis/Redis%E5%88%97%E8%A1%A8.html",title:"Redis 列表",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"lpush",slug:"lpush",children:[]},{level:2,title:"lrange",slug:"lrange",children:[]},{level:2,title:"rpush",slug:"rpush",children:[]},{level:2,title:"rpop and lpop",slug:"rpop-and-lpop",children:[]},{level:2,title:"lindex key index",slug:"lindex-key-index",children:[]},{level:2,title:"lerm",slug:"lerm",children:[]},{level:2,title:"llen",slug:"llen",children:[]},{level:2,title:"ltrim",slug:"ltrim",children:[]},{level:2,title:"lset",slug:"lset",children:[]},{level:2,title:"linsert",slug:"linsert",children:[]}],git:{updatedTime:1654857597e3,contributors:[{name:"qsyyke",email:"2291308094@qq.com",commits:1}]}}},97539:(n,s,e)=>{e.r(s),e.d(s,{default:()=>I});var a=e(66252);const l=(0,a.uE)('<h1 id="redis-列表" tabindex="-1"><a class="header-anchor" href="#redis-列表" aria-hidden="true">#</a> Redis 列表</h1><p>Redis列表是简单的字符串列表，按照插入顺序排序，左边（头部）、右边（尾部）或者中间都可以添加元素。链表的操作无论是头或者尾效率都极高，但是如果对中间元素进行操作，那效率会大大降低了。</p><p>列表类型的数据操作总的思想是通过key和下标操作value，key是数据标识，下标是数据在列表中的位置，value是我们感兴趣的业务数据。</p><h2 id="lpush" tabindex="-1"><a class="header-anchor" href="#lpush" aria-hidden="true">#</a> lpush</h2><blockquote><p>语法：<code>lpush key value [value…]</code></p></blockquote><p>功能：将一个或多个值 value 插入到列表 key 的最左边（表头），各个value值依次插入到表头位置。</p><p>返回值：插入之后的列表的长度。</p>',7),r=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210306195549303.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),u=(0,a._)("p",null,"比如存入",-1),t=(0,a._)("p",null,[(0,a._)("code",null,"lpush list1 1 2 3 4 5")],-1),p=(0,a._)("p",null,[(0,a.Uk)("那么其的存放位置为"),(0,a._)("code",null,"5 4 3 2 1"),(0,a.Uk)("，因为第一个放入的是1，放在最右边，然后依次往左，因为是"),(0,a._)("code",null,"lpush")],-1),i=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210306200002441.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),o=(0,a.uE)('<p>放入之后，还可以通过<code>lpush</code>进行放入，同样也是在之前放入的位置上，往左进行存入</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>127.0.0.1:6379[1]&gt; lpush list1 6 7\n(integer) 7\n127.0.0.1:6379[1]&gt; lrange list1 0 1\n1) &quot;7&quot;\n2) &quot;6&quot;\n127.0.0.1:6379[1]&gt; \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="lrange" tabindex="-1"><a class="header-anchor" href="#lrange" aria-hidden="true">#</a> <code>lrange</code></h2><p>获取指定列表中指定下标区间的元素：<code>lrange key startIndex endIndex</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>127.0.0.1:6379[1]&gt; lpush list1 1 2 3 4 5\n(integer) 5\n127.0.0.1:6379[1]&gt; keys *\n1) &quot;list1&quot;\n存入的数组为5 4 3 2 1 \n127.0.0.1:6379[1]&gt; lrange list1 1 2\n1) &quot;4&quot;\n2) &quot;3&quot;\n127.0.0.1:6379[1]&gt; \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><code>最左边的位置的下标为0，最右边的位置下标为-1</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>lrange list1 0 -1\n获取全部的数据\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>没有<code>rrange</code>语法，<code>lrange</code>中的l是list的缩写</p><h2 id="rpush" tabindex="-1"><a class="header-anchor" href="#rpush" aria-hidden="true">#</a> <code>rpush</code></h2><p>从往右存入，</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>127.0.0.1:6379[1]&gt; rpush list2 1 2 3 4 5 6\n下标\n1 2 3 4 5 6 \n0 1 2 3 4 5\n(integer) 6\n127.0.0.1:6379[1]&gt; rrange list2 0 -1\n(error) ERR unknown command `rrange`, with args beginning with: `list2`, `0`, `-1`, \n127.0.0.1:6379[1]&gt; lrange list2 0 -1\n1) &quot;1&quot;\n2) &quot;2&quot;\n3) &quot;3&quot;\n4) &quot;4&quot;\n5) &quot;5&quot;\n6) &quot;6&quot;\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><code>查看执行列表中的数据，不可以用rrange ，没有这种命令，都是使用lrange</code>进行</p><p>使用lpush之后，还可以使用rpush进行存入，他们的规则没有发生改变</p><h2 id="rpop-and-lpop" tabindex="-1"><a class="header-anchor" href="#rpop-and-lpop" aria-hidden="true">#</a> <code>rpop and lpop</code></h2><p>rpop从右边移除元素，</p><blockquote><p>语法: <code>rpop key count</code></p><p>如果没有写count，那么默认是移除一个，其实就相当于弹栈操作</p></blockquote><p>lpop从右边移除元素，</p><blockquote><p>语法: <code>lpop key count</code></p><p>如果没有写count，那么默认是移除一个，其实就相当于弹栈操作</p></blockquote><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>127.0.0.1:6379[1]&gt; lrange list2 0 -1\n1) &quot;-3&quot;\n2) &quot;-2&quot;\n3) &quot;-1&quot;\n4) &quot;1&quot;\n5) &quot;2&quot;\n6) &quot;3&quot;\n7) &quot;4&quot;\n8) &quot;5&quot;\n9) &quot;6&quot;\n127.0.0.1:6379[1]&gt; lpop list2 \n&quot;-3&quot;\n127.0.0.1:6379[1]&gt; lpop list2 \n&quot;-2&quot;\n127.0.0.1:6379[1]&gt; lrange list2 0 -1\n1) &quot;-1&quot;\n2) &quot;1&quot;\n3) &quot;2&quot;\n4) &quot;3&quot;\n5) &quot;4&quot;\n6) &quot;5&quot;\n7) &quot;6&quot;\n127.0.0.1:6379[1]&gt; lpop list2  2\n1) &quot;-1&quot;\n2) &quot;1&quot;\n127.0.0.1:6379[1]&gt; lrange list2 0 -1\n1) &quot;2&quot;\n2) &quot;3&quot;\n3) &quot;4&quot;\n4) &quot;5&quot;\n5) &quot;6&quot;\n127.0.0.1:6379[1]&gt; rpop list2 2\n1) &quot;6&quot;\n2) &quot;5&quot;\n127.0.0.1:6379[1]&gt; lrange list2 0 -1\n1) &quot;2&quot;\n2) &quot;3&quot;\n3) &quot;4&quot;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h2 id="lindex-key-index" tabindex="-1"><a class="header-anchor" href="#lindex-key-index" aria-hidden="true">#</a> <code>lindex key index</code></h2><p>获取指定下标中的元素，从0开始</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>127.0.0.1:6379[1]&gt; lrange list1 0 -1\n 1) &quot;7&quot;\n 2) &quot;6&quot;\n 3) &quot;5&quot;\n 4) &quot;4&quot;\n 5) &quot;3&quot;\n 6) &quot;2&quot;\n 7) &quot;1&quot;\n 8) &quot;0&quot;\n 9) &quot;-1&quot;\n10) &quot;-2&quot;\n127.0.0.1:6379[1]&gt; lindex list1 2\n&quot;5&quot;\n127.0.0.1:6379[1]&gt; lindex list1 3\n&quot;4&quot;\n127.0.0.1:6379[1]&gt; lindex list1 -1\n&quot;-2&quot;\n127.0.0.1:6379[1]&gt; lindex list1 -6\n&quot;3&quot;\n127.0.0.1:6379[1]&gt; \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="lerm" tabindex="-1"><a class="header-anchor" href="#lerm" aria-hidden="true">#</a> <code>lerm </code></h2><blockquote><p>语法:<code>lrem key count value</code></p></blockquote><p>根据count值移除指定列表中跟value相等的数据：lrem key count value</p><ul><li>如果count&gt;0: <ul><li>从左边开始查找，移除count个value</li></ul></li><li>如果count&lt;0: <ul><li>从右边边开始查找，移除count个value</li></ul></li><li>如果count=0: <ul><li><code>移除所有的value</code></li></ul></li></ul><p>如果count大于其value的个数，那么会移除所有的</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>127.0.0.1:6379[1]&gt; rpush list4 e d g h d e s s a a g d e\n(integer) 13\n127.0.0.1:6379[1]&gt; lrange list4 0 -1\n 1) &quot;e&quot;\n 2) &quot;d&quot;\n 3) &quot;g&quot;\n 4) &quot;h&quot;\n 5) &quot;d&quot;\n 6) &quot;e&quot;\n 7) &quot;s&quot;\n 8) &quot;s&quot;\n 9) &quot;a&quot;\n10) &quot;a&quot;\n11) &quot;g&quot;\n12) &quot;d&quot;\n13) &quot;e&quot;\n127.0.0.1:6379[1]&gt; lrem list4 3 e\n(integer) 3\n127.0.0.1:6379[1]&gt; lrange list4 0 -1\n 1) &quot;d&quot;\n 2) &quot;g&quot;\n 3) &quot;h&quot;\n 4) &quot;d&quot;\n 5) &quot;s&quot;\n 6) &quot;s&quot;\n 7) &quot;a&quot;\n 8) &quot;a&quot;\n 9) &quot;g&quot;\n10) &quot;d&quot;\n127.0.0.1:6379[1]&gt; lrem list4 -1 d\n(integer) 1\n127.0.0.1:6379[1]&gt; lrange list4 0 -1\n1) &quot;d&quot;\n2) &quot;g&quot;\n3) &quot;h&quot;\n4) &quot;d&quot;\n5) &quot;s&quot;\n6) &quot;s&quot;\n7) &quot;a&quot;\n8) &quot;a&quot;\n9) &quot;g&quot;\n127.0.0.1:6379[1]&gt; lrem list4 -23 d\n(integer) 2\n127.0.0.1:6379[1]&gt; lrem list4 0 s\n(integer) 2\n127.0.0.1:6379[1]&gt; lrange list4 0 -1\n1) &quot;g&quot;\n2) &quot;h&quot;\n3) &quot;a&quot;\n4) &quot;a&quot;\n5) &quot;g&quot;\n127.0.0.1:6379[1]&gt; \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div><h2 id="llen" tabindex="-1"><a class="header-anchor" href="#llen" aria-hidden="true">#</a> llen</h2><p>语法：llen key</p><p>功能：获取列表 key 的长度</p><p>返回值：数值，列表的长度；key不存在返回0</p>',32),b=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps18.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),c=(0,a._)("h2",{id:"ltrim",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#ltrim","aria-hidden":"true"},"#"),(0,a.Uk)(" ltrim")],-1),d=(0,a._)("p",null,"语法：ltrim key startIndex endIndex",-1),m=(0,a._)("p",null,"功能：截取key的指定下标区间的元素，并且赋值给key。下标从0开始，一直到列表长度-1；下标也可以是负数，表示列表从后往前取，-1表示倒数第一个元素，-2表示倒数第二个元素，以此类推；startIndex和endIndex超出范围不会报错。",-1),q=(0,a._)("p",null,"返回值：执行成功返回ok",-1),g=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps20.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),h=(0,a._)("h2",{id:"lset",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#lset","aria-hidden":"true"},"#"),(0,a.Uk)(" lset")],-1),x=(0,a._)("p",null,"语法：lset key index value",-1),v=(0,a._)("p",null,"功能：将列表 key 下标为 index 的元素的值设置为 value。",-1),y=(0,a._)("p",null,"功能：设置成功返回ok ; key不存在或者index超出范围返回错误信息。",-1),k=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps21.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),_=(0,a._)("h2",{id:"linsert",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#linsert","aria-hidden":"true"},"#"),(0,a.Uk)(" linsert")],-1),f=(0,a._)("p",null,"语法：linsert key before/after pivot value",-1),z=(0,a._)("p",null,"功能：将值 value 插入到列表 key 当中位于值 pivot 之前或之后的位置。key不存在或者pivot不在列表中，不执行任何操作。",-1),j=(0,a._)("p",null,"返回值：命令执行成功，返回新列表的长度。没有找到pivot返回 -1， key不存在返回0。",-1),w=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps22.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),S={},I=(0,e(83744).Z)(S,[["render",function(n,s){return(0,a.wg)(),(0,a.iD)(a.HY,null,[l,r,u,t,p,i,o,b,c,d,m,q,g,h,x,v,y,k,_,f,z,j,w],64)}]])}}]);
"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3821],{33373:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-6654ef82",path:"/nginx/nginx%E5%AE%9E%E4%BE%8B%E4%B9%8B%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB.html",title:"Nginx实现动静分离",lang:"en-US",frontmatter:{date:"2022/1/7 22:12",title:"Nginx实现动静分离"},excerpt:"",headers:[{level:2,title:"准备资源",slug:"准备资源",children:[]},{level:2,title:"修改nginx.conf",slug:"修改nginx-conf",children:[]}],git:{updatedTime:1654857597e3,contributors:[{name:"qsyyke",email:"2291308094@qq.com",commits:1}]}}},25596:(n,s,a)=>{a.r(s),a.d(s,{default:()=>l});const e=(0,a(66252).uE)('<p>其实动静分离，也就是我们可以将动态资源(<code>jsp,php</code>)等和静态资源(<code>html,css,js</code>)等进行分开，比如动态资源放在tomcat，静态资源我们可以放在Linux根目录下的static(<code>未存在，需要自己创建</code>)中，我们通过nginx进行配置，可以通过ip:端口去访问<code>/static</code>目录下的静态文件</p><p>Nginx 动静分离简单来说就是把动态跟静态请求分开，不能理解成只是单纯的把动态页面和静态页面物理分离。严格意义上说应该是动态请求跟静态请求分开，可以理解成使用<code>Nginx</code>处理静态页面，Tomcat 处理动态页面。动静分离从目前实现角度来讲大致分为两种，一种是纯粹把静态文件独立成单独的域名，放在独立的服务器上，也是目前主流推崇的方案；</p><p>另外一种方法就是动态跟静态文件混合在一起发布，通过 nginx 来分开。</p><p>通过 location 指定不同的后缀名实现不同的请求转发。通过 expires 参数设置，可以使浏览器缓存过期时间，减少与服务器之前的请求和流量。</p><p>具体 Expires 定义：是给一个资源设定一个过期时间，也就是说无需去服务端验证，直接通过浏览器自身确认是否过期即可，所以不会产生额外的流量。</p><p>此种方法非常适合不经常变动的资源。（如果经常更新的文件，不建议使用 Expires 来缓存），我这里设置 3d，表示在这 3 天之内访问这个 URL，发送</p><p>一个请求，比对服务器该文件最后更新时间没有变化，则不会从服务器抓取，返回状态码304，如果有修改，则直接从服务器重新下载，返回状态码 200。</p><h2 id="准备资源" tabindex="-1"><a class="header-anchor" href="#准备资源" aria-hidden="true">#</a> 准备资源</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@qsyyke www<span class="token punctuation">]</span><span class="token comment"># ls</span>\na.html\n<span class="token punctuation">[</span>root@qsyyke www<span class="token punctuation">]</span><span class="token comment"># pwd</span>\n/static/www\n\n<span class="token punctuation">[</span>root@qsyyke www<span class="token punctuation">]</span><span class="token comment"># cd /static/image/</span>\n<span class="token punctuation">[</span>root@qsyyke image<span class="token punctuation">]</span><span class="token comment"># ls</span>\n<span class="token number">10</span>.jpg  <span class="token number">13</span>.jpg  <span class="token number">14</span>.jpg  <span class="token number">1</span>.jpg\n<span class="token punctuation">[</span>root@qsyyke image<span class="token punctuation">]</span><span class="token comment"># pwd</span>\n/static/image\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="修改nginx-conf" tabindex="-1"><a class="header-anchor" href="#修改nginx-conf" aria-hidden="true">#</a> 修改nginx.conf</h2><div class="language-conf ext-conf line-numbers-mode"><pre class="language-conf"><code>server {\n        listen       80;\n        server_name  192.168.86.142-tomcat;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n\n        location /www/ {\n           root  /static/;\n           index  index.html index.htm;\n        }\n\n\n        location /image/ {\n           root  /static/;\n           autoindex  on;\n        }\n\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><blockquote><p>这里的<code>root</code>就是这些静态资源的根目录在哪里，当nginx服务器去寻找这些静态文件时，是通过<code>{root}/{/www/ or /image/}</code>去寻找资源的</p></blockquote><p>访问</p><ul><li>http://192.168.86.142/image/13.jpg</li><li>http://192.168.86.142/www/a.html</li></ul><p>都成功访问到资源</p>',15),p={},l=(0,a(83744).Z)(p,[["render",function(n,s){return e}]])}}]);
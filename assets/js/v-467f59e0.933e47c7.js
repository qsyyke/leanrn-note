"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4410],{77786:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-467f59e0",path:"/vue/vue2/%E9%97%AE%E9%A2%98.html",title:"vue问题总结",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"template中必须包含根",slug:"template中必须包含根",children:[]},{level:2,title:"webstorm terminal安装npm问题",slug:"webstorm-terminal安装npm问题",children:[]},{level:2,title:"加入css-loader出现Module build failed: TypeError:",slug:"加入css-loader出现module-build-failed-typeerror",children:[]},{level:2,title:"路由不加/",slug:"路由不加",children:[]},{level:2,title:"动态使用createApp({})挂载组件之后,this为undefine",slug:"动态使用createapp-挂载组件之后-this为undefine",children:[]},{level:2,title:"获取滚动距离",slug:"获取滚动距离",children:[]},{level:2,title:'解决自定义事件declare it using the "emits" option.',slug:"解决自定义事件declare-it-using-the-emits-option",children:[]}],git:{updatedTime:1654857597e3,contributors:[{name:"qsyyke",email:"2291308094@qq.com",commits:1}]}}},25102:(n,s,a)=>{a.r(s),a.d(s,{default:()=>c});var t=a(66252);const p=(0,t.uE)('<h1 id="vue问题总结" tabindex="-1"><a class="header-anchor" href="#vue问题总结" aria-hidden="true">#</a> vue问题总结</h1><h2 id="template中必须包含根" tabindex="-1"><a class="header-anchor" href="#template中必须包含根" aria-hidden="true">#</a> template中必须包含根</h2><p>如果像这样写</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cpn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>我是组件标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{cmovies}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in cmovies<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{item}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>那么就会报错</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Error compiling template:\n\nComponent template should contain exactly one root element. If you are using v-if on multiple elements, use v-else-if to chain them instead.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>在template中，必须要包含一个根</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cpn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>我是组件标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{cmovies}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in cmovies<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{item}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="webstorm-terminal安装npm问题" tabindex="-1"><a class="header-anchor" href="#webstorm-terminal安装npm问题" aria-hidden="true">#</a> webstorm terminal安装npm问题</h2><p>如果安装出现</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm ERR! code EPERM\nnpm ERR! syscall open\n ERR! path D:\\Environment\\node\\node_cache\\_cacache\\tmp\\ec5035c6\nnpm ERR! errno -4048\nnpm ERR! Error: EPERM: operation not permitted, open &#39;D:\\Environment\\node\\node_cache\\_cacache\\tmp\\ec503\n5c6&#39;\nnpm ERR!  [OperationalError: EPERM: operation not permitted, open &#39;D:\\Environment\\node\\node_cache\\_caca\nche\\tmp\\ec5035c6&#39;] {\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>那么就关闭webstorm，然后以管理员运行打开</p><h2 id="加入css-loader出现module-build-failed-typeerror" tabindex="-1"><a class="header-anchor" href="#加入css-loader出现module-build-failed-typeerror" aria-hidden="true">#</a> 加入css-loader出现Module build failed: TypeError:</h2><p>出现这个问题的原因是因为css-loader的版本太高导致的，可以使用低版本，如<code>@3.3.0</code></p><h2 id="路由不加" tabindex="-1"><a class="header-anchor" href="#路由不加" aria-hidden="true">#</a> 路由不加<code>/</code></h2><p>如果在<code>&lt;router-link to=&quot;home/news&quot;&gt;news&lt;/router-link&gt;</code>我们不是<code>/home/news</code>的话，那么url就会出问题</p>',16),e=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20210721152757846.png",data:"aurora"})],-1),o=(0,t.uE)('<p>但是这个问题，如果是对于一级url，也就是<code>localhsot/xxx</code>来说，并没有影响，只是对于嵌套路由有影响，所以对于嵌套路由，需要加上<code>/</code></p><h2 id="动态使用createapp-挂载组件之后-this为undefine" tabindex="-1"><a class="header-anchor" href="#动态使用createapp-挂载组件之后-this为undefine" aria-hidden="true">#</a> 动态使用createApp({})挂载组件之后,this为undefine</h2><p>如果使用下面方式</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>const app = createApp(PosterImg).mount(&quot;#poster-append&quot;)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>在PosterImg组件中，打印this，结果为undefine，所以在挂载的时候，需要将this传入，通过在PosterImg的Props中设置一个属性接收</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>PosterImg\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> <span class="token punctuation">{</span>defineComponent<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Page&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">app</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;========执行create=========&quot;</span><span class="token punctuation">)</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>app<span class="token punctuation">.</span>$store<span class="token punctuation">)</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;--------------执行mount----------&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>use\nconst app = createApp(PosterImg,{\n        app: this\n      }).mount(&quot;#poster-append&quot;)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="获取滚动距离" tabindex="-1"><a class="header-anchor" href="#获取滚动距离" aria-hidden="true">#</a> 获取滚动距离</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>\n\t<span class="token operator">&lt;</span>a ref<span class="token operator">=</span><span class="token string">&quot;backTop&quot;</span> href<span class="token operator">=</span><span class="token string">&quot;#top&quot;</span><span class="token operator">&gt;</span>\n\t\t<span class="token operator">&lt;</span>van<span class="token operator">-</span>icon name<span class="token operator">=</span><span class="token string">&quot;back-top&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>\n\t<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>template<span class="token operator">/</span><span class="token operator">&gt;</span>\n\n<span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    　　<span class="token comment">// 滚动条的获取</span>\n    　　window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;scroll&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleScroll<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>\n   <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token function">handleScroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;滚动高度&#39;</span><span class="token punctuation">,</span> window<span class="token punctuation">.</span>pageYOffset<span class="token punctuation">)</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;距离顶部高度&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>backTop<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>top<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span> script<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="解决自定义事件declare-it-using-the-emits-option" tabindex="-1"><a class="header-anchor" href="#解决自定义事件declare-it-using-the-emits-option" aria-hidden="true">#</a> 解决自定义事件declare it using the &quot;emits&quot; option.</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">[</span>Vue warn<span class="token punctuation">]</span><span class="token operator">:</span> Extraneous non<span class="token operator">-</span>emits event <span class="token function">listeners</span> <span class="token punctuation">(</span>changeParentProps<span class="token punctuation">)</span> were passed to component but could not be automatically inherited because component renders fragment or text root nodes<span class="token punctuation">.</span> If the listener is intended to be a component custom event listener only<span class="token punctuation">,</span> declare it using the “emits” option<span class="token punctuation">.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>解决</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">emits</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;getHeadLine&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;getHeadLine&#39;</span><span class="token punctuation">,</span>page<span class="token punctuation">.</span>value<span class="token punctuation">.</span>title<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',13),l={},c=(0,a(83744).Z)(l,[["render",function(n,s){return(0,t.wg)(),(0,t.iD)(t.HY,null,[p,e,o],64)}]])}}]);
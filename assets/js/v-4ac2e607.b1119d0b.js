"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8727],{85305:(s,e,n)=>{n.r(e),n.d(e,{data:()=>a});const a={key:"v-4ac2e607",path:"/linux/%E6%97%A5%E5%BF%97%E7%AE%A1%E7%90%86.html",title:"Linux中的日志管理",lang:"en-US",frontmatter:{date:"2021/12/21 20:34",title:"Linux中的日志管理",tag:["linux","企业","面试"]},excerpt:"",headers:[{level:2,title:"日志服务rsyslogd",slug:"日志服务rsyslogd",children:[]},{level:2,title:"配置文件",slug:"配置文件",children:[{level:3,title:"日志类型",slug:"日志类型",children:[]},{level:3,title:"实战",slug:"实战",children:[]}]},{level:2,title:"日志轮替",slug:"日志轮替",children:[{level:3,title:"logrotate配置文件",slug:"logrotate配置文件",children:[]}]},{level:2,title:"把自己的日志加入日志轮替",slug:"把自己的日志加入日志轮替",children:[]},{level:2,title:"日志轮替原理",slug:"日志轮替原理",children:[]}],git:{updatedTime:1654857597e3,contributors:[{name:"qsyyke",email:"2291308094@qq.com",commits:1}]}}},967:(s,e,n)=>{n.r(e),n.d(e,{default:()=>z});var a=n(66252);const t=(0,a._)("div",{class:"custom-container tip"},[(0,a._)("p",{class:"custom-container-title"},"TIP"),(0,a._)("ol",null,[(0,a._)("li",null,[(0,a._)("p",null,"日志文件是重要的系统信息文件，其中记录了许多重要的系统事件，包括用户的登录信息、系统的启动信息、系统的安全信息、邮件相关信息、各种服务相关信息等。")]),(0,a._)("li",null,[(0,a._)("p",null,"日志对于安全来说也很重要，它记录了系统每天发生的各种事情，通过日志来检查错误发生的原因，或者受到攻击时攻击者留下的痕迹。")]),(0,a._)("li",null,[(0,a._)("p",null,"日志是用来记录重大事件的工具")]),(0,a._)("li",null,[(0,a._)("p",null,[(0,a._)("code",null,"/var/log"),(0,a.Uk)("这个目录就是记录系统所有的日志文件")])])])],-1),l=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20211221204120632.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),o=(0,a._)("blockquote",null,[(0,a._)("p",null,[(0,a.Uk)("比如我们可以测试"),(0,a._)("code",null,"/var/log/secure"),(0,a.Uk)("的日志记录，我们可以使用"),(0,a._)("code",null,"xshell"),(0,a.Uk)("测试几个用户，故意输入错误的密码，最后看此日志文件中的记录信息，但是我测试发现，其并没有记录o(╥﹏╥)o")])],-1),r=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20211221230744191.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),c=(0,a.uE)('<h2 id="日志服务rsyslogd" tabindex="-1"><a class="header-anchor" href="#日志服务rsyslogd" aria-hidden="true">#</a> 日志服务<strong>rsyslogd</strong></h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>CentOS7.6日志服务是<code>rsyslogd</code>， CentOS6.x 日志服务是<code>syslogd</code> 。rsyslogd功能更强大。rsyslogd 的使用、日志文件的格式，和 syslogd 服务兼容的。</p><p>我们在使用的时候，一定要保证此服务是开机自启动状态，否则的话，日志服务功能将不能正常使用</p><p>日志的配置文件位置为<code>/etc/rsyslog.conf</code>，我们可以在此配置文件中，修改系统默认的日志配置，或者增加我们自己的</p></div><ul><li><p>查询<code>rsyslogd</code>服务是否启动</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ps</span> aux <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;rsyslog&quot;</span> <span class="token operator">|</span> <span class="token function">grep</span> -v <span class="token string">&quot;grep&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>查询<code>rsyslogd</code>的自启动状态</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>systemctl list-unit-files <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;rsyslogd&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li></ul><h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h2><blockquote><p>配置文件位置<code>/etc/rsyslog.conf</code></p></blockquote><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>日志文件的配置方式为</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>*.*          日志文件存放路径 \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>这里的<code>*</code>表示所有，同时你也可以自己指定</p><ol><li>第一个<code>*</code> 日志类型</li><li>第二个<code>*</code> 此日志的级别</li></ol></div><h3 id="日志类型" tabindex="-1"><a class="header-anchor" href="#日志类型" aria-hidden="true">#</a> 日志类型</h3><table><thead><tr><th>类型</th><th>解释</th></tr></thead><tbody><tr><td>auth</td><td>pam 产生的日志</td></tr><tr><td>authpriv</td><td>ssh、ftp 等登录信息的验证信息</td></tr><tr><td>corn</td><td>时间任务相关</td></tr><tr><td>kern</td><td>内核</td></tr><tr><td>lpr</td><td>打印</td></tr><tr><td>mail</td><td>邮件</td></tr><tr><td>mark(syslog)-rsyslog</td><td>服务内部的信息，时间标识</td></tr><tr><td>news</td><td>新闻组</td></tr><tr><td>user</td><td>用户程序产生的相关信息</td></tr><tr><td>uucp</td><td>unix to nuix copy 主机之间相关的通信</td></tr><tr><td>local 1-7</td><td>自定义的日志设备</td></tr></tbody></table><table><thead><tr><th>类型</th><th>解释</th></tr></thead><tbody><tr><td>debug</td><td>有调试信息的，日志通信最多</td></tr><tr><td>info</td><td>一般信息日志，最常用</td></tr><tr><td>notice</td><td>最具有重要性的普通条件的信息</td></tr><tr><td>warning</td><td>警告级别</td></tr><tr><td>err</td><td>错误级别，阻止某个功能或者模块不能正常工作的信息</td></tr><tr><td>crit</td><td>严重级别，阻止整个系统或者整个软件不能正常工作信息</td></tr><tr><td>alert</td><td>需要立刻修改的信息</td></tr><tr><td>emerg</td><td>内核崩溃等重要信息</td></tr><tr><td>none</td><td>什么都不记录</td></tr></tbody></table><blockquote><p>从上到下，级别从低到高，记录的信息越来越少</p></blockquote><p>由日志服务<code>rsyslogd</code>记录的日志文件，日志文件的格式包含以下4列</p><ul><li><p>事件产生的时间</p></li><li><p>产生事件的服务器的主机名</p></li><li><p>产生事件的服务名或程序名</p></li><li><p>事件的具体信息</p></li></ul>',12),p=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20211221221342360.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),i=(0,a._)("h3",{id:"实战",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#实战","aria-hidden":"true"},"#"),(0,a.Uk)(" 实战")],-1),d=(0,a._)("p",null,"比如我们自己配置一个日志，记录所有的内容",-1),u=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20211221230334242.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),b=(0,a._)("p",null,[(0,a.Uk)("然后当我们重新启动，然后进入此"),(0,a._)("code",null,"/var/log/qsyyke.log"),(0,a.Uk)("中，就可以看到记录的信息")],-1),m=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20211221230422326.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),g=(0,a.uE)('<div class="custom-container tip"><p class="custom-container-title">TIP</p><p>这个貌似不能自定义日志的内容格式，而且我们也只能使用上面的那11中类型</p></div><h2 id="日志轮替" tabindex="-1"><a class="header-anchor" href="#日志轮替" aria-hidden="true">#</a> 日志轮替</h2><p>日志轮替就是把旧的日志文件移动并改名，同时建立新的空日志文件，当旧日志文件超出保存的范围之后，就会进行删除</p><p>centos7使用logrotate进行日志轮替管理，要想改变日志轮替文件名字，通过 <code>/etc/logrotate.conf</code> 配置文件中<code>dateext</code>参数：</p><ul><li><p>如果配置文件中有“dateext”参数，那么日志会用日期来作为日志文件的后缀，例如<code>secure-20201010</code>。这样日志文件名不会重叠，也就不需要日志文件的改名， 只需要指定保存日志个数，删除多余的日志文件即可。</p></li><li><p>如果配置文件中没有“dateext”参数，日志文件就需要进行改名了。当第一次进行日志轮替时，当前的“secure”日志会自动改名为“secure.1”，然后新建“secure”日志， 用来保存新的日志。当第二次进行日志轮替时，“secure.1”会自动改名为“secure.2”， 当前的“secure”日志会自动改名为“secure.1”，然后也会新建“secure”日志，用来保存新的日志，以此类推。</p></li></ul><h3 id="logrotate配置文件" tabindex="-1"><a class="header-anchor" href="#logrotate配置文件" aria-hidden="true">#</a> logrotate配置文件</h3><p>默认的配置文件内容如下</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># rotate log files weekly, #每周对日志文件进行一次轮替</span>\nweekly\n\n<span class="token comment"># keep 4 weeks worth of backlogs  #共保存 4 份日志文件，当建立新的日志文件时，旧的将会被删除</span>\nrotate <span class="token number">4</span>\n\n<span class="token comment"># create new (empty) log files after rotating old ones #创建新的空的日志文件，在日志轮替后</span>\ncreate\n\n<span class="token comment"># use date as a suffix of the rotated file #使用日期作为日志轮替文件的后缀</span>\ndateext\n\n<span class="token comment"># uncomment this if you want your log files compressed 日志文件是否压缩。如果取消注释，则日志会在转储的同时进 行压缩</span>\n<span class="token comment">#compress</span>\n\n<span class="token comment"># RPM packages drop log rotation information into this directory 包含 /etc/logrotate.d/ 目录中所有的子配置文件。也就 是说会把这个目录中所有子配置文件读取进来，</span>\ninclude /etc/logrotate.d\n\n<span class="token comment"># no packages own wtmp and btmp -- we&#39;ll rotate them here</span>\n\n<span class="token comment"># 从此处开始</span>\n/var/log/wtmp <span class="token punctuation">{</span> \n    monthly <span class="token comment"># 每月对日志文件进行一次轮替</span>\n    create 0664 root utmp <span class="token comment"># 建立的新日志文件，权限是 0664 ，所有者是 root ，所属组是 utmp 组</span>\n\tminsize 1M <span class="token comment"># 日志文件最小轮替大小是 1MB 。也就是日志一定要超过 1MB 才会轮替，否则就算时间达到 一个月，也不进行日志转储</span>\n    rotate <span class="token number">1</span> <span class="token comment"># 仅保留一个日志备份。也就是只有 wtmp 和 wtmp.1 日志保留而已</span>\n<span class="token punctuation">}</span>\n\n/var/log/btmp <span class="token punctuation">{</span>\n    missingok\n    monthly\n    create 0600 root utmp\n    rotate <span class="token number">1</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment"># system-specific logs may be also be configured here.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><p>上面的是配置全局的，也就是我们配置了之后，对于全局的日志都会生效，但是如果我们想要对个别的日志，进行单独的设置，那么就需要使用下面这种方式了</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>/var/log/wtmp <span class="token punctuation">{</span>\n    monthly\n    create 0664 root utmp\n\tminsize 1M\n    rotate <span class="token number">1</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>这种方式的优先级更高，因为单独设置的嘛，不知道你看到没有<code>include /etc/logrotate.d</code>，这个<code>logrotate.d</code>是一个文件夹，也就是我们可以将上面这种单独设置的日志轮替规则，单独的放在<code>logrotate.d</code>目录中，然后在<code>/etc/logrotate.conf</code>开启之后，其就会加载这些写好的规则</p>',11),h=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20211221233403214.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),k=(0,a.uE)('<p>这些文件中的内容，也是和<code>/var/log/xxx {}</code>是相似的</p><blockquote><p>参数说明</p><p><code>daily</code> 日志的轮替周期是每天</p><p><code>weekly</code> 日志的轮替周期是每周</p><p><code>monthly</code> 日志的轮替周期是每月</p><p><code>rotate</code> 数字 保留的日志文件的个数。0 指没有备份</p><p><code>compress</code> 日志轮替时，旧的日志进行压缩</p><p><code>create mode owner group</code> 建立新日志，同时指定新日志的权限与所有者和所属组。</p><p><code>mail address</code> 当日志轮替时，输出内容通过邮件发送到指定的邮件地址。</p><p><code>missingok</code> 如果日志不存在，则忽略该日志的警告信息</p><p><code>notifempty</code> 如果日志为空文件，则不进行日志轮替</p><p><code>minsize</code> 大小 日志轮替的最小值。也就是日志一定要达到这个最小值才会轮替，否则就算时间达到也不轮替</p><p><code>size</code> 大小日志只有大于指定大小才进行日志轮替，而不是按照时间轮替。</p><p><code>dateext</code> 使用日期作为日志轮替文件的后缀。</p><p><code>sharedscripts</code> 在此关键字之后的脚本只执行一次。</p><p><code>prerotate/endscript</code> 在日志轮替之前执行脚本命令。</p><p><code>postrotate/endscript</code> 在日志轮替之后执行脚本命令。</p></blockquote><h2 id="把自己的日志加入日志轮替" tabindex="-1"><a class="header-anchor" href="#把自己的日志加入日志轮替" aria-hidden="true">#</a> 把自己的日志加入日志轮替</h2><p>一共有两种方法</p><ol><li>直接在<code>/etc/logrotate.conf</code>配置文件中写入该日志的轮替策略(不推荐使用这种方式)</li><li>/etc/logrotate.d/目录中新建立该日志的轮替文件，在该轮替文件中写入正确的轮替策略，因为该目录中的文件都会被<code>include</code>到主配置文件中，所以也可以把日志加入轮替(推荐)</li></ol><p>推荐使用第二种方式，因为使用第二种方式，我们管理和可读性更高，我是直接复制<code>boog</code>的</p><div class="language-cd ext-cd line-numbers-mode"><pre class="language-cd"><code>cd /etc/logrotate.d\ncp bootlog qsyyke\nvim qsyyke\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',7),y=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20211221234922753.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),v=(0,a.uE)('<div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>比如我们的日志文件叫<code>qsyyke.log</code>，但是我们在<code>/etc/logrotate.d</code>中的文件夹名字不一定要叫<code>qsyyke</code>，也可以是<code>qsyyke1</code>，只要保证上图中的名字和日志文件的名字一样就行</p></div><h2 id="日志轮替原理" tabindex="-1"><a class="header-anchor" href="#日志轮替原理" aria-hidden="true">#</a> 日志轮替原理</h2><p>日志轮替之所以可以在指定的时间备份日志，是依赖系统定时任务。在 /etc/cron.daily/目录，就会发现这个目录中是有 logrotate 文件(可执行)，logrotate 通过这个文件依赖定时任务执行的。</p>',3),x=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/image-20211221235645163.png?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),f=(0,a.uE)('<blockquote><p>此<code>logrotate</code>文件其实是一个脚本文件，此脚本文件的内容如下</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/sh</span>\n\n/usr/sbin/logrotate -s /var/lib/logrotate/logrotate.status /etc/logrotate.conf\n<span class="token assign-left variable">EXITVALUE</span><span class="token operator">=</span><span class="token variable">$?</span>\n<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$EXITVALUE</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>\n    /usr/bin/logger -t <span class="token function">logrotate</span> <span class="token string">&quot;ALERT exited abnormally with [<span class="token variable">$EXITVALUE</span>]&quot;</span>\n<span class="token keyword">fi</span>\n<span class="token builtin class-name">exit</span> <span class="token number">0</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',2),_={},z=(0,n(83744).Z)(_,[["render",function(s,e){return(0,a.wg)(),(0,a.iD)(a.HY,null,[t,l,o,r,c,p,i,d,u,b,m,g,h,k,y,v,x,f],64)}]])}}]);
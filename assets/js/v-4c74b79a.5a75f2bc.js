"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3678],{72289:(n,e,s)=>{s.r(e),s.d(e,{data:()=>a});const a={key:"v-4c74b79a",path:"/redis/Rediszset%E9%9B%86%E5%90%88.html",title:"Redis zset集合",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"zadd",slug:"zadd",children:[]},{level:2,title:"range",slug:"range",children:[]},{level:2,title:"zrangebyscore",slug:"zrangebyscore",children:[]},{level:2,title:"zrem",slug:"zrem",children:[]},{level:2,title:"zcard",slug:"zcard",children:[]},{level:2,title:"zcount",slug:"zcount",children:[]},{level:2,title:"zrank",slug:"zrank",children:[]},{level:2,title:"zscore",slug:"zscore",children:[]},{level:2,title:"zrevrank",slug:"zrevrank",children:[]},{level:2,title:"zrevrange",slug:"zrevrange",children:[]},{level:2,title:"zrevrangebyscore",slug:"zrevrangebyscore",children:[]}],git:{updatedTime:1654857597e3,contributors:[{name:"qsyyke",email:"2291308094@qq.com",commits:1}]}}},28045:(n,e,s)=>{s.r(e),s.d(e,{default:()=>J});var a=s(66252);const r=(0,a.uE)('<h1 id="redis-zset集合" tabindex="-1"><a class="header-anchor" href="#redis-zset集合" aria-hidden="true">#</a> Redis zset集合</h1><p>Redis 有序集合zset和集合set一样也是string类型元素的集合，且不允许重复的成员。</p><p>不同的是zset的每个元素都会关联一个分数（分数可以重复），redis通过分数来为集合中的成员进行从小到大的排序。 如果分数相同的话，那么分数相同的元素，排序就是随机进行排</p><p>有序集合也是有下标的，但是这个和列表是不同的，列表中的下标是根据存入的顺序就行，而有序集合中的下标是根据分数排序之后的位置</p><p>有序集合排序默认是从小到大的顺序</p><h1 id="基本操作命令" tabindex="-1"><a class="header-anchor" href="#基本操作命令" aria-hidden="true">#</a> 基本操作命令</h1><h2 id="zadd" tabindex="-1"><a class="header-anchor" href="#zadd" aria-hidden="true">#</a> zadd</h2><blockquote><p>语法：<code>zadd key score member [score member…]</code></p></blockquote><p>这里的<code>score</code>就是分数，在使用zadd进行添加的时候，必须为一个member指定score值，可以重复，程序会根据score的值，进行排序</p><p>功能：将一个或多个 member 元素及其 score 值加入到有序集合 key 中，如果member存在集合中，则覆盖原来的值；score可以是整数或浮点数.</p><p>返回值：数字，新添加的元素个数.</p>',11),l=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps15-1615085341294.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),t=(0,a._)("h2",{id:"range",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#range","aria-hidden":"true"},"#"),(0,a.Uk)(" range")],-1),u=(0,a._)("blockquote",null,[(0,a._)("p",null,[(0,a.Uk)("语法："),(0,a._)("code",null,"zrange key startIndex endIndex [WITHSCORES]")])],-1),o=(0,a._)("p",null,"功能：查询有序集合，指定区间的内的元素。集合成员按score值从小到大来排序；startIndex和endIndex都是从0开始表示第一个元素，1表示第二个元素，以此类推； startIndex和endIndex都可以取负数，表示从后往前取，-1表示倒数第一个元素；WITHSCORES选项让score和value一同返回。",-1),c=(0,a._)("p",null,"返回值：指定区间的成员组成的集合。",-1),p=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps16-1615085341295.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),i=(0,a.uE)('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>127.0.0.1:6379[1]&gt; zadd z1 20 k1 10 k2 80 k3 1 k4 10000 k5\n(integer) 5\n127.0.0.1:6379[1]&gt; zrange z1 0 -1\n1) &quot;k4&quot;\n2) &quot;k2&quot;\n3) &quot;k1&quot;\n4) &quot;k3&quot;\n5) &quot;k5&quot;\n127.0.0.1:6379[1]&gt; zrange z1 -1 0\n(empty array)\n不可以使用这种方式zrange z1 -1 0\n127.0.0.1:6379[1]&gt; zrange z1 0 -1 withscores\n 1) &quot;k4&quot;\n 2) &quot;1&quot;\n 3) &quot;k2&quot;\n 4) &quot;10&quot;\n 5) &quot;k1&quot;\n 6) &quot;20&quot;\n 7) &quot;k3&quot;\n 8) &quot;80&quot;\n 9) &quot;k5&quot;\n10) &quot;10000&quot;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="zrangebyscore" tabindex="-1"><a class="header-anchor" href="#zrangebyscore" aria-hidden="true">#</a> zrangebyscore</h2><blockquote><p>语法：<code>zrangebyscore key min max [WITHSCORES ] [LIMIT offset count]</code></p></blockquote><p>功能：获取有序集 key 中，所有 score 值介于 min 和 max 之间（包括min和max）的成员，有序成员是按递增（从小到大）排序；</p><p>符号：</p><ul><li>使用符号”(“ 表示包括min但不包括max；<code>(30表示大于30，不包括30在内</code></li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>127.0.0.1:6379[1]&gt; zrange z1 0 -1 withscores\n 1) &quot;k4&quot;\n 2) &quot;1&quot;\n 3) &quot;k2&quot;\n 4) &quot;10&quot;\n 5) &quot;k1&quot;\n 6) &quot;20&quot;\n 7) &quot;k3&quot;\n 8) &quot;80&quot;\n 9) &quot;k5&quot;\n10) &quot;10000&quot;\n127.0.0.1:6379[1]&gt; zrangebyscore z1 10 80\n1) &quot;k2&quot;\n2) &quot;k1&quot;\n3) &quot;k3&quot;\n127.0.0.1:6379[1]&gt; zrangebyscore z1 (20 80\n1) &quot;k3&quot;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><ul><li>withscores 显示score和 value；</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>127.0.0.1:6379[1]&gt; zrangebyscore z1 (20 80 withscores\n1) &quot;k3&quot;\n2) &quot;80&quot;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>limit用来限制返回结果的数量和区间，在结果集中从第offset个开始，取count个。 相当于mysql中的分页，下标从0开始</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>127.0.0.1:6379[1]&gt; zrangebyscore z1 (19 (90 withscores\n 1) &quot;k1&quot;\n 2) &quot;20&quot;\n 3) &quot;k6&quot;\n 4) &quot;45&quot;\n 5) &quot;k8&quot;\n 6) &quot;54&quot;\n 7) &quot;k3&quot;\n 8) &quot;80&quot;\n 9) &quot;k9&quot;\n10) &quot;89&quot;\n127.0.0.1:6379[1]&gt; zrangebyscore z1 (19 (90 withscores limit 2 2 \n1) &quot;k8&quot;\n2) &quot;54&quot;\n3) &quot;k3&quot;\n4) &quot;80&quot;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>返回值：指定区间的集合数据</p>',12),b=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps17-1615085341295.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),m=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps18-1615085341295.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),d=(0,a._)("h2",{id:"zrem",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#zrem","aria-hidden":"true"},"#"),(0,a.Uk)(" zrem")],-1),q=(0,a._)("blockquote",null,[(0,a._)("p",null,[(0,a.Uk)("语法："),(0,a._)("code",null,"zrem key member [member…]")])],-1),g=(0,a._)("p",null,"功能：删除有序集合 key 中的一个或多个成员，不存在的成员被忽略。",-1),z=(0,a._)("p",null,"返回值：被成功删除的成员数量，不包括被忽略的成员。",-1),h=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps19-1615085341300.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),k=(0,a._)("h2",{id:"zcard",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#zcard","aria-hidden":"true"},"#"),(0,a.Uk)(" zcard")],-1),x=(0,a._)("blockquote",null,[(0,a._)("p",null,[(0,a.Uk)("语法："),(0,a._)("code",null,"zcard key")])],-1),y=(0,a._)("p",null,"作用：获取有序集 key 的元素成员的个数。",-1),v=(0,a._)("p",null,"返回值：key存在，返回集合元素的个数； key不存在，返回0。",-1),_=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps20-1615085341300.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),f=(0,a.uE)('<h2 id="zcount" tabindex="-1"><a class="header-anchor" href="#zcount" aria-hidden="true">#</a> zcount</h2><blockquote><p>语法：<code>zcount key min max</code></p></blockquote><p>功能：返回有序集 key 中， score 值在 min 和 max 之间(包括 score 值等于 min 或 max )的成员的数量。</p><p>返回值：指定有序集合中分数在指定区间内的元素数量。</p><p><code>(</code>符号也是可以使用的</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>127.0.0.1:6379[1]&gt; zrange z1 0 -1 withscores\n 1) &quot;k4&quot;\n 2) &quot;1&quot;\n 3) &quot;k2&quot;\n 4) &quot;10&quot;\n 5) &quot;k1&quot;\n 6) &quot;20&quot;\n 7) &quot;k6&quot;\n 8) &quot;45&quot;\n 9) &quot;k8&quot;\n10) &quot;54&quot;\n11) &quot;k3&quot;\n12) &quot;80&quot;\n13) &quot;k9&quot;\n14) &quot;89&quot;\n15) &quot;k7&quot;\n16) &quot;324&quot;\n17) &quot;k5&quot;\n18) &quot;10000&quot;\n127.0.0.1:6379[1]&gt; zcount z1 20 89\n(integer) 5\n127.0.0.1:6379[1]&gt; zcount z1 (89 100000\n(integer) 2\n127.0.0.1:6379[1]&gt; zcount z1 89 100000\n(integer) 3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div>',6),S=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps21-1615085341300.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),j=(0,a._)("h2",{id:"zrank",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#zrank","aria-hidden":"true"},"#"),(0,a.Uk)(" zrank")],-1),w=(0,a._)("blockquote",null,[(0,a._)("p",null,[(0,a.Uk)("语法："),(0,a._)("code",null,"zrank key member")])],-1),I=(0,a._)("p",null,"功能：获取有序集 key 中成员 member 的排名，有序集成员按 score 值从小到大顺序排列，从0开始排名，score最小的是0 。",-1),E=(0,a._)("p",null,"返回值：指定元素在有序集合中的排名；如果指定元素不存在，返回nil。",-1),U=(0,a._)("p",null,[(0,a._)("code",null,"下标从0开始")],-1),P=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps22-1615085341300.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),R=(0,a.uE)('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>127.0.0.1:6379[1]&gt; zrange z1 0 -1 withscores\n 1) &quot;k4&quot;\n 2) &quot;1&quot;\n 3) &quot;k2&quot;\n 4) &quot;10&quot;\n 5) &quot;k1&quot;\n 6) &quot;20&quot;\n 7) &quot;k6&quot;\n 8) &quot;45&quot;\n 9) &quot;k8&quot;\n10) &quot;54&quot;\n11) &quot;k3&quot;\n12) &quot;80&quot;\n13) &quot;k9&quot;\n14) &quot;89&quot;\n15) &quot;k7&quot;\n16) &quot;324&quot;\n17) &quot;k5&quot;\n18) &quot;10000&quot;\n127.0.0.1:6379[1]&gt; zrank z1 k4\n(integer) 0\n127.0.0.1:6379[1]&gt; zrank z1 k2\n(integer) 1\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="zscore" tabindex="-1"><a class="header-anchor" href="#zscore" aria-hidden="true">#</a> zscore</h2><blockquote><p>语法：<code>zscore key member</code></p></blockquote><p>功能：获取有序集合key中元素member的分数。</p><p>返回值：返回指定有序集合元素的分数。</p>',5),T=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps23-1615085341300.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),C=(0,a._)("h2",{id:"zrevrank",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#zrevrank","aria-hidden":"true"},"#"),(0,a.Uk)(" zrevrank")],-1),H=(0,a._)("blockquote",null,[(0,a._)("p",null,[(0,a.Uk)("语法："),(0,a._)("code",null,"zrevrank key member")])],-1),O=(0,a._)("p",null,"功能：获取有序集 key 中成员 member 的排名，有序集成员按 score 值从大到小顺序排列，从0开始排名，score最大的是0 。",-1),W=(0,a._)("p",null,"返回值：指定元素在有序集合中的排名；如果指定元素不存在，返回nil。",-1),L=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps24-1615085341300.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),M=(0,a._)("h2",{id:"zrevrange",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#zrevrange","aria-hidden":"true"},"#"),(0,a.Uk)(" zrevrange")],-1),B=(0,a._)("blockquote",null,[(0,a._)("p",null,[(0,a.Uk)("语法："),(0,a._)("code",null,"zrevrange key startIndex endIndex [WITHSCORES]")])],-1),D=(0,a._)("p",null,"功能：查询有序集合，指定区间的内的元素。集合成员按score值从大到小来排序；startIndex和endIndex都是从0开始表示第一个元素，1表示第二个元素，以此类推； startIndex和endIndex都可以取负数，表示从后往前取，-1表示倒数第一个元素；WITHSCORES选项让score和value一同返回。",-1),Y=(0,a._)("p",null,"返回值：指定区间的成员组成的集合。",-1),Z=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps25-1615085341300.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),A=(0,a.uE)('<h2 id="zrevrangebyscore" tabindex="-1"><a class="header-anchor" href="#zrevrangebyscore" aria-hidden="true">#</a> zrevrangebyscore</h2><blockquote><p>语法：<code>zrevrangebyscore key max min [WITHSCORES ] [LIMIT offset count]</code></p></blockquote><p>功能：获取有序集 key 中，所有 score 值介于 max 和 min 之间（包括max和min）的成员，有序成员是按递减（从大到小）排序；</p><p>​ 使用符号<code>(</code>表示不包括min和max；</p><p>​ withscores 显示score和 value；</p><p>limit用来限制返回结果的数量和区间，在结果集中从第offset个开始，取count个。</p><p>返回值：指定区间的集合数据</p>',7),F=(0,a._)("p",null,[(0,a._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"https://picture.xcye.xyz/wps26-1615085341300.jpg?x-oss-process=style/pictureProcess1",data:"aurora"})],-1),G={},J=(0,s(83744).Z)(G,[["render",function(n,e){return(0,a.wg)(),(0,a.iD)(a.HY,null,[r,l,t,u,o,c,p,i,b,m,d,q,g,z,h,k,x,y,v,_,f,S,j,w,I,E,U,P,R,T,C,H,O,W,L,M,B,D,Y,Z,A,F],64)}]])}}]);